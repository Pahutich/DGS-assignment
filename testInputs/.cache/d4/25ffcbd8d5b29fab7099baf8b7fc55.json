{"id":"../node_modules/box2d.package.ts/Common/b2Draw.ts","dependencies":[{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\package.json","includedInParent":true,"mtime":1586335198964},{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\.babelrc","includedInParent":true,"mtime":1586259187841},{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\package.json","includedInParent":true,"mtime":1586252018883}],"generated":{"js":"\"use strict\";\r\n/*\r\n* Copyright (c) 2011 Erin Catto http://box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexports.__esModule = true;\r\n/// Color for debug drawing. Each value has the range [0,1].\r\nvar b2Color = /** @class */ (function () {\r\n    function b2Color() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (args[0] instanceof Float32Array) {\r\n            if (args[0].length !== 4) {\r\n                throw new Error();\r\n            }\r\n            this.data = args[0];\r\n        }\r\n        else {\r\n            var rr = typeof args[0] === \"number\" ? args[0] : 0.5;\r\n            var gg = typeof args[1] === \"number\" ? args[1] : 0.5;\r\n            var bb = typeof args[2] === \"number\" ? args[2] : 0.5;\r\n            var aa = typeof args[3] === \"number\" ? args[3] : 1.0;\r\n            this.data = new Float32Array([rr, gg, bb, aa]);\r\n        }\r\n    }\r\n    Object.defineProperty(b2Color.prototype, \"r\", {\r\n        get: function () { return this.data[0]; },\r\n        set: function (value) { this.data[0] = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(b2Color.prototype, \"g\", {\r\n        get: function () { return this.data[1]; },\r\n        set: function (value) { this.data[1] = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(b2Color.prototype, \"b\", {\r\n        get: function () { return this.data[2]; },\r\n        set: function (value) { this.data[2] = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(b2Color.prototype, \"a\", {\r\n        get: function () { return this.data[3]; },\r\n        set: function (value) { this.data[3] = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    b2Color.prototype.Clone = function () {\r\n        return new b2Color().Copy(this);\r\n    };\r\n    b2Color.prototype.Copy = function (other) {\r\n        this.r = other.r;\r\n        this.g = other.g;\r\n        this.b = other.b;\r\n        this.a = other.a;\r\n        return this;\r\n    };\r\n    b2Color.prototype.IsEqual = function (color) {\r\n        return (this.r === color.r) && (this.g === color.g) && (this.b === color.b) && (this.a === color.a);\r\n    };\r\n    b2Color.prototype.IsZero = function () {\r\n        return (this.r === 0) && (this.g === 0) && (this.b === 0) && (this.a === 0);\r\n    };\r\n    b2Color.prototype.Set = function (r, g, b, a) {\r\n        if (a === void 0) { a = this.a; }\r\n        this.SetRGBA(r, g, b, a);\r\n    };\r\n    b2Color.prototype.SetByteRGB = function (r, g, b) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        return this;\r\n    };\r\n    b2Color.prototype.SetByteRGBA = function (r, g, b, a) {\r\n        this.r = r / 0xff;\r\n        this.g = g / 0xff;\r\n        this.b = b / 0xff;\r\n        this.a = a / 0xff;\r\n        return this;\r\n    };\r\n    b2Color.prototype.SetRGB = function (rr, gg, bb) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        return this;\r\n    };\r\n    b2Color.prototype.SetRGBA = function (rr, gg, bb, aa) {\r\n        this.r = rr;\r\n        this.g = gg;\r\n        this.b = bb;\r\n        this.a = aa;\r\n        return this;\r\n    };\r\n    b2Color.prototype.SelfAdd = function (color) {\r\n        this.r += color.r;\r\n        this.g += color.g;\r\n        this.b += color.b;\r\n        this.a += color.a;\r\n        return this;\r\n    };\r\n    b2Color.prototype.Add = function (color, out) {\r\n        out.r = this.r + color.r;\r\n        out.g = this.g + color.g;\r\n        out.b = this.b + color.b;\r\n        out.a = this.a + color.a;\r\n        return out;\r\n    };\r\n    b2Color.prototype.SelfSub = function (color) {\r\n        this.r -= color.r;\r\n        this.g -= color.g;\r\n        this.b -= color.b;\r\n        this.a -= color.a;\r\n        return this;\r\n    };\r\n    b2Color.prototype.Sub = function (color, out) {\r\n        out.r = this.r - color.r;\r\n        out.g = this.g - color.g;\r\n        out.b = this.b - color.b;\r\n        out.a = this.a - color.a;\r\n        return out;\r\n    };\r\n    b2Color.prototype.SelfMul = function (s) {\r\n        this.r *= s;\r\n        this.g *= s;\r\n        this.b *= s;\r\n        this.a *= s;\r\n        return this;\r\n    };\r\n    b2Color.prototype.Mul = function (s, out) {\r\n        out.r = this.r * s;\r\n        out.g = this.g * s;\r\n        out.b = this.b * s;\r\n        out.a = this.a * s;\r\n        return out;\r\n    };\r\n    b2Color.prototype.Mix = function (mixColor, strength) {\r\n        b2Color.MixColors(this, mixColor, strength);\r\n    };\r\n    b2Color.MixColors = function (colorA, colorB, strength) {\r\n        var dr = (strength * (colorB.r - colorA.r));\r\n        var dg = (strength * (colorB.g - colorA.g));\r\n        var db = (strength * (colorB.b - colorA.b));\r\n        var da = (strength * (colorB.a - colorA.a));\r\n        colorA.r += dr;\r\n        colorA.g += dg;\r\n        colorA.b += db;\r\n        colorA.a += da;\r\n        colorB.r -= dr;\r\n        colorB.g -= dg;\r\n        colorB.b -= db;\r\n        colorB.a -= da;\r\n    };\r\n    b2Color.prototype.MakeStyleString = function (alpha) {\r\n        if (alpha === void 0) { alpha = this.a; }\r\n        return b2Color.MakeStyleString(this.r, this.g, this.b, alpha);\r\n    };\r\n    b2Color.MakeStyleString = function (r, g, b, a) {\r\n        if (a === void 0) { a = 1.0; }\r\n        // function clamp(x: number, lo: number, hi: number) { return x < lo ? lo : hi < x ? hi : x; }\r\n        r *= 255; // r = clamp(r, 0, 255);\r\n        g *= 255; // g = clamp(g, 0, 255);\r\n        b *= 255; // b = clamp(b, 0, 255);\r\n        // a = clamp(a, 0, 1);\r\n        if (a < 1) {\r\n            return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n        }\r\n        else {\r\n            return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n        }\r\n    };\r\n    b2Color.ZERO = new b2Color(0, 0, 0, 0);\r\n    b2Color.RED = new b2Color(1, 0, 0);\r\n    b2Color.GREEN = new b2Color(0, 1, 0);\r\n    b2Color.BLUE = new b2Color(0, 0, 1);\r\n    return b2Color;\r\n}());\r\nexports.b2Color = b2Color;\r\nvar b2DrawFlags;\r\n(function (b2DrawFlags) {\r\n    b2DrawFlags[b2DrawFlags[\"e_none\"] = 0] = \"e_none\";\r\n    b2DrawFlags[b2DrawFlags[\"e_shapeBit\"] = 1] = \"e_shapeBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_jointBit\"] = 2] = \"e_jointBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_aabbBit\"] = 4] = \"e_aabbBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_pairBit\"] = 8] = \"e_pairBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_centerOfMassBit\"] = 16] = \"e_centerOfMassBit\";\r\n    // #if B2_ENABLE_PARTICLE\r\n    b2DrawFlags[b2DrawFlags[\"e_particleBit\"] = 32] = \"e_particleBit\";\r\n    // #endif\r\n    b2DrawFlags[b2DrawFlags[\"e_controllerBit\"] = 64] = \"e_controllerBit\";\r\n    b2DrawFlags[b2DrawFlags[\"e_all\"] = 63] = \"e_all\";\r\n})(b2DrawFlags = exports.b2DrawFlags || (exports.b2DrawFlags = {}));\r\n/// Implement and register this class with a b2World to provide debug drawing of physics\r\n/// entities in your game.\r\nvar b2Draw = /** @class */ (function () {\r\n    function b2Draw() {\r\n        this.m_drawFlags = 0;\r\n    }\r\n    b2Draw.prototype.SetFlags = function (flags) {\r\n        this.m_drawFlags = flags;\r\n    };\r\n    b2Draw.prototype.GetFlags = function () {\r\n        return this.m_drawFlags;\r\n    };\r\n    b2Draw.prototype.AppendFlags = function (flags) {\r\n        this.m_drawFlags |= flags;\r\n    };\r\n    b2Draw.prototype.ClearFlags = function (flags) {\r\n        this.m_drawFlags &= ~flags;\r\n    };\r\n    return b2Draw;\r\n}());\r\nexports.b2Draw = b2Draw;\r\n"},"sourceMaps":{"js":{"version":3,"file":"b2Draw.js","sourceRoot":"","sources":["../node_modules/box2d.package.ts/Common/b2Draw.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n* Copyright (c) 2011 Erin Catto http://box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n\r\nimport { b2Transform, XY } from \"./b2Math\";\r\n\r\nexport interface RGB {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n}\r\n\r\nexport interface RGBA extends RGB {\r\n  a: number;\r\n}\r\n\r\n/// Color for debug drawing. Each value has the range [0,1].\r\nexport class b2Color implements RGBA {\r\n  public static readonly ZERO: Readonly<b2Color> = new b2Color(0, 0, 0, 0);\r\n\r\n  public static readonly RED: Readonly<b2Color> = new b2Color(1, 0, 0);\r\n  public static readonly GREEN: Readonly<b2Color> = new b2Color(0, 1, 0);\r\n  public static readonly BLUE: Readonly<b2Color> = new b2Color(0, 0, 1);\r\n\r\n  public readonly data: Float32Array;\r\n  public get r(): number { return this.data[0]; } public set r(value: number) { this.data[0] = value; }\r\n  public get g(): number { return this.data[1]; } public set g(value: number) { this.data[1] = value; }\r\n  public get b(): number { return this.data[2]; } public set b(value: number) { this.data[2] = value; }\r\n  public get a(): number { return this.data[3]; } public set a(value: number) { this.data[3] = value; }\r\n\r\n  constructor();\r\n  constructor(data: Float32Array);\r\n  constructor(rr: number, gg: number, bb: number);\r\n  constructor(rr: number, gg: number, bb: number, aa: number);\r\n  constructor(...args: any[]) {\r\n    if (args[0] instanceof Float32Array) {\r\n      if (args[0].length !== 4) { throw new Error(); }\r\n      this.data = args[0];\r\n    } else {\r\n      const rr: number = typeof args[0] === \"number\" ? args[0] : 0.5;\r\n      const gg: number = typeof args[1] === \"number\" ? args[1] : 0.5;\r\n      const bb: number = typeof args[2] === \"number\" ? args[2] : 0.5;\r\n      const aa: number = typeof args[3] === \"number\" ? args[3] : 1.0;\r\n      this.data = new Float32Array([ rr, gg, bb, aa ]);\r\n    }\r\n  }\r\n\r\n  public Clone(): b2Color {\r\n    return new b2Color().Copy(this);\r\n  }\r\n\r\n  public Copy(other: RGBA): this {\r\n    this.r = other.r;\r\n    this.g = other.g;\r\n    this.b = other.b;\r\n    this.a = other.a;\r\n    return this;\r\n  }\r\n\r\n  public IsEqual(color: RGBA): boolean {\r\n    return (this.r === color.r) && (this.g === color.g) && (this.b === color.b) && (this.a === color.a);\r\n  }\r\n\r\n  public IsZero(): boolean {\r\n    return (this.r === 0) && (this.g === 0) && (this.b === 0) && (this.a === 0);\r\n  }\r\n\r\n  public Set(r: number, g: number, b: number, a: number = this.a): void {\r\n    this.SetRGBA(r, g, b, a);\r\n  }\r\n\r\n  public SetByteRGB(r: number, g: number, b: number): this {\r\n    this.r = r / 0xff;\r\n    this.g = g / 0xff;\r\n    this.b = b / 0xff;\r\n    return this;\r\n  }\r\n\r\n  public SetByteRGBA(r: number, g: number, b: number, a: number): this {\r\n    this.r = r / 0xff;\r\n    this.g = g / 0xff;\r\n    this.b = b / 0xff;\r\n    this.a = a / 0xff;\r\n    return this;\r\n  }\r\n\r\n  public SetRGB(rr: number, gg: number, bb: number): this {\r\n    this.r = rr;\r\n    this.g = gg;\r\n    this.b = bb;\r\n    return this;\r\n  }\r\n\r\n  public SetRGBA(rr: number, gg: number, bb: number, aa: number): this {\r\n    this.r = rr;\r\n    this.g = gg;\r\n    this.b = bb;\r\n    this.a = aa;\r\n    return this;\r\n  }\r\n\r\n  public SelfAdd(color: RGBA): this {\r\n    this.r += color.r;\r\n    this.g += color.g;\r\n    this.b += color.b;\r\n    this.a += color.a;\r\n    return this;\r\n  }\r\n\r\n  public Add<T extends RGBA>(color: RGBA, out: T): T {\r\n    out.r = this.r + color.r;\r\n    out.g = this.g + color.g;\r\n    out.b = this.b + color.b;\r\n    out.a = this.a + color.a;\r\n    return out;\r\n  }\r\n\r\n  public SelfSub(color: RGBA): this {\r\n    this.r -= color.r;\r\n    this.g -= color.g;\r\n    this.b -= color.b;\r\n    this.a -= color.a;\r\n    return this;\r\n  }\r\n\r\n  public Sub<T extends RGBA>(color: RGBA, out: T): T {\r\n    out.r = this.r - color.r;\r\n    out.g = this.g - color.g;\r\n    out.b = this.b - color.b;\r\n    out.a = this.a - color.a;\r\n    return out;\r\n  }\r\n\r\n  public SelfMul(s: number): this {\r\n    this.r *= s;\r\n    this.g *= s;\r\n    this.b *= s;\r\n    this.a *= s;\r\n    return this;\r\n  }\r\n\r\n  public Mul<T extends RGBA>(s: number, out: T): T {\r\n    out.r = this.r * s;\r\n    out.g = this.g * s;\r\n    out.b = this.b * s;\r\n    out.a = this.a * s;\r\n    return out;\r\n  }\r\n\r\n  public Mix(mixColor: RGBA, strength: number): void {\r\n    b2Color.MixColors(this, mixColor, strength);\r\n  }\r\n\r\n  public static MixColors(colorA: RGBA, colorB: RGBA, strength: number): void {\r\n    const dr = (strength * (colorB.r - colorA.r));\r\n    const dg = (strength * (colorB.g - colorA.g));\r\n    const db = (strength * (colorB.b - colorA.b));\r\n    const da = (strength * (colorB.a - colorA.a));\r\n    colorA.r += dr;\r\n    colorA.g += dg;\r\n    colorA.b += db;\r\n    colorA.a += da;\r\n    colorB.r -= dr;\r\n    colorB.g -= dg;\r\n    colorB.b -= db;\r\n    colorB.a -= da;\r\n  }\r\n\r\n  public MakeStyleString(alpha: number = this.a): string {\r\n    return b2Color.MakeStyleString(this.r, this.g, this.b, alpha);\r\n  }\r\n\r\n  public static MakeStyleString(r: number, g: number, b: number, a: number = 1.0): string {\r\n    // function clamp(x: number, lo: number, hi: number) { return x < lo ? lo : hi < x ? hi : x; }\r\n    r *= 255; // r = clamp(r, 0, 255);\r\n    g *= 255; // g = clamp(g, 0, 255);\r\n    b *= 255; // b = clamp(b, 0, 255);\r\n    // a = clamp(a, 0, 1);\r\n    if (a < 1) {\r\n      return `rgba(${r},${g},${b},${a})`;\r\n    } else {\r\n      return `rgb(${r},${g},${b})`;\r\n    }\r\n  }\r\n}\r\n\r\nexport enum b2DrawFlags {\r\n  e_none = 0,\r\n  e_shapeBit = 0x0001, ///< draw shapes\r\n  e_jointBit = 0x0002, ///< draw joint connections\r\n  e_aabbBit = 0x0004, ///< draw axis aligned bounding boxes\r\n  e_pairBit = 0x0008, ///< draw broad-phase pairs\r\n  e_centerOfMassBit = 0x0010, ///< draw center of mass frame\r\n  // #if B2_ENABLE_PARTICLE\r\n  e_particleBit = 0x0020, ///< draw particles\r\n  // #endif\r\n  e_controllerBit = 0x0040, /// @see b2Controller list\r\n  e_all = 0x003f,\r\n}\r\n\r\n/// Implement and register this class with a b2World to provide debug drawing of physics\r\n/// entities in your game.\r\nexport abstract class b2Draw {\r\n  public m_drawFlags: b2DrawFlags = 0;\r\n\r\n  public SetFlags(flags: b2DrawFlags): void {\r\n    this.m_drawFlags = flags;\r\n  }\r\n\r\n  public GetFlags(): b2DrawFlags {\r\n    return this.m_drawFlags;\r\n  }\r\n\r\n  public AppendFlags(flags: b2DrawFlags): void {\r\n    this.m_drawFlags |= flags;\r\n  }\r\n\r\n  public ClearFlags(flags: b2DrawFlags): void {\r\n    this.m_drawFlags &= ~flags;\r\n  }\r\n\r\n  public abstract PushTransform(xf: b2Transform): void;\r\n\r\n  public abstract PopTransform(xf: b2Transform): void;\r\n\r\n  public abstract DrawPolygon(vertices: XY[], vertexCount: number, color: RGBA): void;\r\n\r\n  public abstract DrawSolidPolygon(vertices: XY[], vertexCount: number, color: RGBA): void;\r\n\r\n  public abstract DrawCircle(center: XY, radius: number, color: RGBA): void;\r\n\r\n  public abstract DrawSolidCircle(center: XY, radius: number, axis: XY, color: RGBA): void;\r\n\r\n  // #if B2_ENABLE_PARTICLE\r\n  public abstract DrawParticles(centers: XY[], radius: number, colors: RGBA[] | null, count: number): void;\r\n  // #endif\r\n\r\n  public abstract DrawSegment(p1: XY, p2: XY, color: RGBA): void;\r\n\r\n  public abstract DrawTransform(xf: b2Transform): void;\r\n\r\n  public abstract DrawPoint(p: XY, size: number, color: RGBA): void;\r\n}\r\n"]}},"error":null,"hash":"0d9ab63460cfb4363c8d0351ae565a95","cacheData":{"env":{}}}