{"id":"../node_modules/box2d.package.ts/Dynamics/Joints/b2GearJoint.ts","dependencies":[{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\package.json","includedInParent":true,"mtime":1586335198964},{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\.babelrc","includedInParent":true,"mtime":1586259187841},{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\package.json","includedInParent":true,"mtime":1586252018883},{"name":"../../Common/b2Settings","loc":{"line":32,"column":27},"parent":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Dynamics\\Joints\\b2GearJoint.ts","resolved":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Common\\b2Settings.ts"},{"name":"../../Common/b2Math","loc":{"line":33,"column":23},"parent":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Dynamics\\Joints\\b2GearJoint.ts","resolved":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Common\\b2Math.ts"},{"name":"./b2Joint","loc":{"line":34,"column":24},"parent":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Dynamics\\Joints\\b2GearJoint.ts","resolved":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Dynamics\\Joints\\b2Joint.ts"}],"generated":{"js":"\"use strict\";\r\n/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\n// DEBUG: import { b2IsValid } from \"../../Common/b2Math\";\r\nvar b2Settings_1 = require(\"../../Common/b2Settings\");\r\nvar b2Math_1 = require(\"../../Common/b2Math\");\r\nvar b2Joint_1 = require(\"./b2Joint\");\r\n/// Gear joint definition. This definition requires two existing\r\n/// revolute or prismatic joints (any combination will work).\r\nvar b2GearJointDef = /** @class */ (function (_super) {\r\n    __extends(b2GearJointDef, _super);\r\n    function b2GearJointDef() {\r\n        var _this = _super.call(this, b2Joint_1.b2JointType.e_gearJoint) || this;\r\n        _this.ratio = 1;\r\n        return _this;\r\n    }\r\n    return b2GearJointDef;\r\n}(b2Joint_1.b2JointDef));\r\nexports.b2GearJointDef = b2GearJointDef;\r\nvar b2GearJoint = /** @class */ (function (_super) {\r\n    __extends(b2GearJoint, _super);\r\n    function b2GearJoint(def) {\r\n        var _this = _super.call(this, def) || this;\r\n        _this.m_typeA = b2Joint_1.b2JointType.e_unknownJoint;\r\n        _this.m_typeB = b2Joint_1.b2JointType.e_unknownJoint;\r\n        // Solver shared\r\n        _this.m_localAnchorA = new b2Math_1.b2Vec2();\r\n        _this.m_localAnchorB = new b2Math_1.b2Vec2();\r\n        _this.m_localAnchorC = new b2Math_1.b2Vec2();\r\n        _this.m_localAnchorD = new b2Math_1.b2Vec2();\r\n        _this.m_localAxisC = new b2Math_1.b2Vec2();\r\n        _this.m_localAxisD = new b2Math_1.b2Vec2();\r\n        _this.m_referenceAngleA = 0;\r\n        _this.m_referenceAngleB = 0;\r\n        _this.m_constant = 0;\r\n        _this.m_ratio = 0;\r\n        _this.m_impulse = 0;\r\n        // Solver temp\r\n        _this.m_indexA = 0;\r\n        _this.m_indexB = 0;\r\n        _this.m_indexC = 0;\r\n        _this.m_indexD = 0;\r\n        _this.m_lcA = new b2Math_1.b2Vec2();\r\n        _this.m_lcB = new b2Math_1.b2Vec2();\r\n        _this.m_lcC = new b2Math_1.b2Vec2();\r\n        _this.m_lcD = new b2Math_1.b2Vec2();\r\n        _this.m_mA = 0;\r\n        _this.m_mB = 0;\r\n        _this.m_mC = 0;\r\n        _this.m_mD = 0;\r\n        _this.m_iA = 0;\r\n        _this.m_iB = 0;\r\n        _this.m_iC = 0;\r\n        _this.m_iD = 0;\r\n        _this.m_JvAC = new b2Math_1.b2Vec2();\r\n        _this.m_JvBD = new b2Math_1.b2Vec2();\r\n        _this.m_JwA = 0;\r\n        _this.m_JwB = 0;\r\n        _this.m_JwC = 0;\r\n        _this.m_JwD = 0;\r\n        _this.m_mass = 0;\r\n        _this.m_qA = new b2Math_1.b2Rot();\r\n        _this.m_qB = new b2Math_1.b2Rot();\r\n        _this.m_qC = new b2Math_1.b2Rot();\r\n        _this.m_qD = new b2Math_1.b2Rot();\r\n        _this.m_lalcA = new b2Math_1.b2Vec2();\r\n        _this.m_lalcB = new b2Math_1.b2Vec2();\r\n        _this.m_lalcC = new b2Math_1.b2Vec2();\r\n        _this.m_lalcD = new b2Math_1.b2Vec2();\r\n        _this.m_joint1 = def.joint1;\r\n        _this.m_joint2 = def.joint2;\r\n        _this.m_typeA = _this.m_joint1.GetType();\r\n        _this.m_typeB = _this.m_joint2.GetType();\r\n        // DEBUG: b2Assert(this.m_typeA === b2JointType.e_revoluteJoint || this.m_typeA === b2JointType.e_prismaticJoint);\r\n        // DEBUG: b2Assert(this.m_typeB === b2JointType.e_revoluteJoint || this.m_typeB === b2JointType.e_prismaticJoint);\r\n        var coordinateA, coordinateB;\r\n        // TODO_ERIN there might be some problem with the joint edges in b2Joint.\r\n        _this.m_bodyC = _this.m_joint1.GetBodyA();\r\n        _this.m_bodyA = _this.m_joint1.GetBodyB();\r\n        // Get geometry of joint1\r\n        var xfA = _this.m_bodyA.m_xf;\r\n        var aA = _this.m_bodyA.m_sweep.a;\r\n        var xfC = _this.m_bodyC.m_xf;\r\n        var aC = _this.m_bodyC.m_sweep.a;\r\n        if (_this.m_typeA === b2Joint_1.b2JointType.e_revoluteJoint) {\r\n            var revolute = def.joint1;\r\n            _this.m_localAnchorC.Copy(revolute.m_localAnchorA);\r\n            _this.m_localAnchorA.Copy(revolute.m_localAnchorB);\r\n            _this.m_referenceAngleA = revolute.m_referenceAngle;\r\n            _this.m_localAxisC.SetZero();\r\n            coordinateA = aA - aC - _this.m_referenceAngleA;\r\n        }\r\n        else {\r\n            var prismatic = def.joint1;\r\n            _this.m_localAnchorC.Copy(prismatic.m_localAnchorA);\r\n            _this.m_localAnchorA.Copy(prismatic.m_localAnchorB);\r\n            _this.m_referenceAngleA = prismatic.m_referenceAngle;\r\n            _this.m_localAxisC.Copy(prismatic.m_localXAxisA);\r\n            // b2Vec2 pC = m_localAnchorC;\r\n            var pC = _this.m_localAnchorC;\r\n            // b2Vec2 pA = b2MulT(xfC.q, b2Mul(xfA.q, m_localAnchorA) + (xfA.p - xfC.p));\r\n            var pA = b2Math_1.b2Rot.MulTRV(xfC.q, b2Math_1.b2Vec2.AddVV(b2Math_1.b2Rot.MulRV(xfA.q, _this.m_localAnchorA, b2Math_1.b2Vec2.s_t0), b2Math_1.b2Vec2.SubVV(xfA.p, xfC.p, b2Math_1.b2Vec2.s_t1), b2Math_1.b2Vec2.s_t0), b2Math_1.b2Vec2.s_t0); // pA uses s_t0\r\n            // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n            coordinateA = b2Math_1.b2Vec2.DotVV(b2Math_1.b2Vec2.SubVV(pA, pC, b2Math_1.b2Vec2.s_t0), _this.m_localAxisC);\r\n        }\r\n        _this.m_bodyD = _this.m_joint2.GetBodyA();\r\n        _this.m_bodyB = _this.m_joint2.GetBodyB();\r\n        // Get geometry of joint2\r\n        var xfB = _this.m_bodyB.m_xf;\r\n        var aB = _this.m_bodyB.m_sweep.a;\r\n        var xfD = _this.m_bodyD.m_xf;\r\n        var aD = _this.m_bodyD.m_sweep.a;\r\n        if (_this.m_typeB === b2Joint_1.b2JointType.e_revoluteJoint) {\r\n            var revolute = def.joint2;\r\n            _this.m_localAnchorD.Copy(revolute.m_localAnchorA);\r\n            _this.m_localAnchorB.Copy(revolute.m_localAnchorB);\r\n            _this.m_referenceAngleB = revolute.m_referenceAngle;\r\n            _this.m_localAxisD.SetZero();\r\n            coordinateB = aB - aD - _this.m_referenceAngleB;\r\n        }\r\n        else {\r\n            var prismatic = def.joint2;\r\n            _this.m_localAnchorD.Copy(prismatic.m_localAnchorA);\r\n            _this.m_localAnchorB.Copy(prismatic.m_localAnchorB);\r\n            _this.m_referenceAngleB = prismatic.m_referenceAngle;\r\n            _this.m_localAxisD.Copy(prismatic.m_localXAxisA);\r\n            // b2Vec2 pD = m_localAnchorD;\r\n            var pD = _this.m_localAnchorD;\r\n            // b2Vec2 pB = b2MulT(xfD.q, b2Mul(xfB.q, m_localAnchorB) + (xfB.p - xfD.p));\r\n            var pB = b2Math_1.b2Rot.MulTRV(xfD.q, b2Math_1.b2Vec2.AddVV(b2Math_1.b2Rot.MulRV(xfB.q, _this.m_localAnchorB, b2Math_1.b2Vec2.s_t0), b2Math_1.b2Vec2.SubVV(xfB.p, xfD.p, b2Math_1.b2Vec2.s_t1), b2Math_1.b2Vec2.s_t0), b2Math_1.b2Vec2.s_t0); // pB uses s_t0\r\n            // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n            coordinateB = b2Math_1.b2Vec2.DotVV(b2Math_1.b2Vec2.SubVV(pB, pD, b2Math_1.b2Vec2.s_t0), _this.m_localAxisD);\r\n        }\r\n        _this.m_ratio = b2Settings_1.b2Maybe(def.ratio, 1);\r\n        _this.m_constant = coordinateA + _this.m_ratio * coordinateB;\r\n        _this.m_impulse = 0;\r\n        return _this;\r\n    }\r\n    b2GearJoint.prototype.InitVelocityConstraints = function (data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_indexC = this.m_bodyC.m_islandIndex;\r\n        this.m_indexD = this.m_bodyD.m_islandIndex;\r\n        this.m_lcA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_lcB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_lcC.Copy(this.m_bodyC.m_sweep.localCenter);\r\n        this.m_lcD.Copy(this.m_bodyD.m_sweep.localCenter);\r\n        this.m_mA = this.m_bodyA.m_invMass;\r\n        this.m_mB = this.m_bodyB.m_invMass;\r\n        this.m_mC = this.m_bodyC.m_invMass;\r\n        this.m_mD = this.m_bodyD.m_invMass;\r\n        this.m_iA = this.m_bodyA.m_invI;\r\n        this.m_iB = this.m_bodyB.m_invI;\r\n        this.m_iC = this.m_bodyC.m_invI;\r\n        this.m_iD = this.m_bodyD.m_invI;\r\n        var aA = data.positions[this.m_indexA].a;\r\n        var vA = data.velocities[this.m_indexA].v;\r\n        var wA = data.velocities[this.m_indexA].w;\r\n        var aB = data.positions[this.m_indexB].a;\r\n        var vB = data.velocities[this.m_indexB].v;\r\n        var wB = data.velocities[this.m_indexB].w;\r\n        var aC = data.positions[this.m_indexC].a;\r\n        var vC = data.velocities[this.m_indexC].v;\r\n        var wC = data.velocities[this.m_indexC].w;\r\n        var aD = data.positions[this.m_indexD].a;\r\n        var vD = data.velocities[this.m_indexD].v;\r\n        var wD = data.velocities[this.m_indexD].w;\r\n        // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n        var qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB), qC = this.m_qC.SetAngle(aC), qD = this.m_qD.SetAngle(aD);\r\n        this.m_mass = 0;\r\n        if (this.m_typeA === b2Joint_1.b2JointType.e_revoluteJoint) {\r\n            this.m_JvAC.SetZero();\r\n            this.m_JwA = 1;\r\n            this.m_JwC = 1;\r\n            this.m_mass += this.m_iA + this.m_iC;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n            var u = b2Math_1.b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.InitVelocityConstraints_s_u);\r\n            // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n            b2Math_1.b2Vec2.SubVV(this.m_localAnchorC, this.m_lcC, this.m_lalcC);\r\n            var rC = b2Math_1.b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.InitVelocityConstraints_s_rC);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n            b2Math_1.b2Vec2.SubVV(this.m_localAnchorA, this.m_lcA, this.m_lalcA);\r\n            var rA = b2Math_1.b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.InitVelocityConstraints_s_rA);\r\n            // m_JvAC = u;\r\n            this.m_JvAC.Copy(u);\r\n            // m_JwC = b2Cross(rC, u);\r\n            this.m_JwC = b2Math_1.b2Vec2.CrossVV(rC, u);\r\n            // m_JwA = b2Cross(rA, u);\r\n            this.m_JwA = b2Math_1.b2Vec2.CrossVV(rA, u);\r\n            this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\r\n        }\r\n        if (this.m_typeB === b2Joint_1.b2JointType.e_revoluteJoint) {\r\n            this.m_JvBD.SetZero();\r\n            this.m_JwB = this.m_ratio;\r\n            this.m_JwD = this.m_ratio;\r\n            this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n            var u = b2Math_1.b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.InitVelocityConstraints_s_u);\r\n            // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n            b2Math_1.b2Vec2.SubVV(this.m_localAnchorD, this.m_lcD, this.m_lalcD);\r\n            var rD = b2Math_1.b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.InitVelocityConstraints_s_rD);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n            b2Math_1.b2Vec2.SubVV(this.m_localAnchorB, this.m_lcB, this.m_lalcB);\r\n            var rB = b2Math_1.b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.InitVelocityConstraints_s_rB);\r\n            // m_JvBD = m_ratio * u;\r\n            b2Math_1.b2Vec2.MulSV(this.m_ratio, u, this.m_JvBD);\r\n            // m_JwD = m_ratio * b2Cross(rD, u);\r\n            this.m_JwD = this.m_ratio * b2Math_1.b2Vec2.CrossVV(rD, u);\r\n            // m_JwB = m_ratio * b2Cross(rB, u);\r\n            this.m_JwB = this.m_ratio * b2Math_1.b2Vec2.CrossVV(rB, u);\r\n            this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\r\n        }\r\n        // Compute effective mass.\r\n        this.m_mass = this.m_mass > 0 ? 1 / this.m_mass : 0;\r\n        if (data.step.warmStarting) {\r\n            // vA += (m_mA * m_impulse) * m_JvAC;\r\n            vA.SelfMulAdd(this.m_mA * this.m_impulse, this.m_JvAC);\r\n            wA += this.m_iA * this.m_impulse * this.m_JwA;\r\n            // vB += (m_mB * m_impulse) * m_JvBD;\r\n            vB.SelfMulAdd(this.m_mB * this.m_impulse, this.m_JvBD);\r\n            wB += this.m_iB * this.m_impulse * this.m_JwB;\r\n            // vC -= (m_mC * m_impulse) * m_JvAC;\r\n            vC.SelfMulSub(this.m_mC * this.m_impulse, this.m_JvAC);\r\n            wC -= this.m_iC * this.m_impulse * this.m_JwC;\r\n            // vD -= (m_mD * m_impulse) * m_JvBD;\r\n            vD.SelfMulSub(this.m_mD * this.m_impulse, this.m_JvBD);\r\n            wD -= this.m_iD * this.m_impulse * this.m_JwD;\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n        // data.velocities[this.m_indexC].v = vC;\r\n        data.velocities[this.m_indexC].w = wC;\r\n        // data.velocities[this.m_indexD].v = vD;\r\n        data.velocities[this.m_indexD].w = wD;\r\n    };\r\n    b2GearJoint.prototype.SolveVelocityConstraints = function (data) {\r\n        var vA = data.velocities[this.m_indexA].v;\r\n        var wA = data.velocities[this.m_indexA].w;\r\n        var vB = data.velocities[this.m_indexB].v;\r\n        var wB = data.velocities[this.m_indexB].w;\r\n        var vC = data.velocities[this.m_indexC].v;\r\n        var wC = data.velocities[this.m_indexC].w;\r\n        var vD = data.velocities[this.m_indexD].v;\r\n        var wD = data.velocities[this.m_indexD].w;\r\n        // float32 Cdot = b2Dot(m_JvAC, vA - vC) + b2Dot(m_JvBD, vB - vD);\r\n        var Cdot = b2Math_1.b2Vec2.DotVV(this.m_JvAC, b2Math_1.b2Vec2.SubVV(vA, vC, b2Math_1.b2Vec2.s_t0)) +\r\n            b2Math_1.b2Vec2.DotVV(this.m_JvBD, b2Math_1.b2Vec2.SubVV(vB, vD, b2Math_1.b2Vec2.s_t0));\r\n        Cdot += (this.m_JwA * wA - this.m_JwC * wC) + (this.m_JwB * wB - this.m_JwD * wD);\r\n        var impulse = -this.m_mass * Cdot;\r\n        this.m_impulse += impulse;\r\n        // vA += (m_mA * impulse) * m_JvAC;\r\n        vA.SelfMulAdd((this.m_mA * impulse), this.m_JvAC);\r\n        wA += this.m_iA * impulse * this.m_JwA;\r\n        // vB += (m_mB * impulse) * m_JvBD;\r\n        vB.SelfMulAdd((this.m_mB * impulse), this.m_JvBD);\r\n        wB += this.m_iB * impulse * this.m_JwB;\r\n        // vC -= (m_mC * impulse) * m_JvAC;\r\n        vC.SelfMulSub((this.m_mC * impulse), this.m_JvAC);\r\n        wC -= this.m_iC * impulse * this.m_JwC;\r\n        // vD -= (m_mD * impulse) * m_JvBD;\r\n        vD.SelfMulSub((this.m_mD * impulse), this.m_JvBD);\r\n        wD -= this.m_iD * impulse * this.m_JwD;\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n        // data.velocities[this.m_indexC].v = vC;\r\n        data.velocities[this.m_indexC].w = wC;\r\n        // data.velocities[this.m_indexD].v = vD;\r\n        data.velocities[this.m_indexD].w = wD;\r\n    };\r\n    b2GearJoint.prototype.SolvePositionConstraints = function (data) {\r\n        var cA = data.positions[this.m_indexA].c;\r\n        var aA = data.positions[this.m_indexA].a;\r\n        var cB = data.positions[this.m_indexB].c;\r\n        var aB = data.positions[this.m_indexB].a;\r\n        var cC = data.positions[this.m_indexC].c;\r\n        var aC = data.positions[this.m_indexC].a;\r\n        var cD = data.positions[this.m_indexD].c;\r\n        var aD = data.positions[this.m_indexD].a;\r\n        // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n        var qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB), qC = this.m_qC.SetAngle(aC), qD = this.m_qD.SetAngle(aD);\r\n        var linearError = 0;\r\n        var coordinateA, coordinateB;\r\n        var JvAC = this.m_JvAC, JvBD = this.m_JvBD;\r\n        var JwA, JwB, JwC, JwD;\r\n        var mass = 0;\r\n        if (this.m_typeA === b2Joint_1.b2JointType.e_revoluteJoint) {\r\n            JvAC.SetZero();\r\n            JwA = 1;\r\n            JwC = 1;\r\n            mass += this.m_iA + this.m_iC;\r\n            coordinateA = aA - aC - this.m_referenceAngleA;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n            var u = b2Math_1.b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.SolvePositionConstraints_s_u);\r\n            // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n            var rC = b2Math_1.b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.SolvePositionConstraints_s_rC);\r\n            // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n            var rA = b2Math_1.b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.SolvePositionConstraints_s_rA);\r\n            // JvAC = u;\r\n            JvAC.Copy(u);\r\n            // JwC = b2Cross(rC, u);\r\n            JwC = b2Math_1.b2Vec2.CrossVV(rC, u);\r\n            // JwA = b2Cross(rA, u);\r\n            JwA = b2Math_1.b2Vec2.CrossVV(rA, u);\r\n            mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\r\n            // b2Vec2 pC = m_localAnchorC - m_lcC;\r\n            var pC = this.m_lalcC;\r\n            // b2Vec2 pA = b2MulT(qC, rA + (cA - cC));\r\n            var pA = b2Math_1.b2Rot.MulTRV(qC, b2Math_1.b2Vec2.AddVV(rA, b2Math_1.b2Vec2.SubVV(cA, cC, b2Math_1.b2Vec2.s_t0), b2Math_1.b2Vec2.s_t0), b2Math_1.b2Vec2.s_t0); // pA uses s_t0\r\n            // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n            coordinateA = b2Math_1.b2Vec2.DotVV(b2Math_1.b2Vec2.SubVV(pA, pC, b2Math_1.b2Vec2.s_t0), this.m_localAxisC);\r\n        }\r\n        if (this.m_typeB === b2Joint_1.b2JointType.e_revoluteJoint) {\r\n            JvBD.SetZero();\r\n            JwB = this.m_ratio;\r\n            JwD = this.m_ratio;\r\n            mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n            coordinateB = aB - aD - this.m_referenceAngleB;\r\n        }\r\n        else {\r\n            // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n            var u = b2Math_1.b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.SolvePositionConstraints_s_u);\r\n            // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n            var rD = b2Math_1.b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.SolvePositionConstraints_s_rD);\r\n            // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n            var rB = b2Math_1.b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.SolvePositionConstraints_s_rB);\r\n            // JvBD = m_ratio * u;\r\n            b2Math_1.b2Vec2.MulSV(this.m_ratio, u, JvBD);\r\n            // JwD = m_ratio * b2Cross(rD, u);\r\n            JwD = this.m_ratio * b2Math_1.b2Vec2.CrossVV(rD, u);\r\n            // JwB = m_ratio * b2Cross(rB, u);\r\n            JwB = this.m_ratio * b2Math_1.b2Vec2.CrossVV(rB, u);\r\n            mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * JwD * JwD + this.m_iB * JwB * JwB;\r\n            // b2Vec2 pD = m_localAnchorD - m_lcD;\r\n            var pD = this.m_lalcD;\r\n            // b2Vec2 pB = b2MulT(qD, rB + (cB - cD));\r\n            var pB = b2Math_1.b2Rot.MulTRV(qD, b2Math_1.b2Vec2.AddVV(rB, b2Math_1.b2Vec2.SubVV(cB, cD, b2Math_1.b2Vec2.s_t0), b2Math_1.b2Vec2.s_t0), b2Math_1.b2Vec2.s_t0); // pB uses s_t0\r\n            // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n            coordinateB = b2Math_1.b2Vec2.DotVV(b2Math_1.b2Vec2.SubVV(pB, pD, b2Math_1.b2Vec2.s_t0), this.m_localAxisD);\r\n        }\r\n        var C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant;\r\n        var impulse = 0;\r\n        if (mass > 0) {\r\n            impulse = -C / mass;\r\n        }\r\n        // cA += m_mA * impulse * JvAC;\r\n        cA.SelfMulAdd(this.m_mA * impulse, JvAC);\r\n        aA += this.m_iA * impulse * JwA;\r\n        // cB += m_mB * impulse * JvBD;\r\n        cB.SelfMulAdd(this.m_mB * impulse, JvBD);\r\n        aB += this.m_iB * impulse * JwB;\r\n        // cC -= m_mC * impulse * JvAC;\r\n        cC.SelfMulSub(this.m_mC * impulse, JvAC);\r\n        aC -= this.m_iC * impulse * JwC;\r\n        // cD -= m_mD * impulse * JvBD;\r\n        cD.SelfMulSub(this.m_mD * impulse, JvBD);\r\n        aD -= this.m_iD * impulse * JwD;\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        // data.positions[this.m_indexC].c = cC;\r\n        data.positions[this.m_indexC].a = aC;\r\n        // data.positions[this.m_indexD].c = cD;\r\n        data.positions[this.m_indexD].a = aD;\r\n        // TODO_ERIN not implemented\r\n        return linearError < b2Settings_1.b2_linearSlop;\r\n    };\r\n    b2GearJoint.prototype.GetAnchorA = function (out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    };\r\n    b2GearJoint.prototype.GetAnchorB = function (out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    };\r\n    b2GearJoint.prototype.GetReactionForce = function (inv_dt, out) {\r\n        // b2Vec2 P = m_impulse * m_JvAC;\r\n        // return inv_dt * P;\r\n        return b2Math_1.b2Vec2.MulSV(inv_dt * this.m_impulse, this.m_JvAC, out);\r\n    };\r\n    b2GearJoint.prototype.GetReactionTorque = function (inv_dt) {\r\n        // float32 L = m_impulse * m_JwA;\r\n        // return inv_dt * L;\r\n        return inv_dt * this.m_impulse * this.m_JwA;\r\n    };\r\n    b2GearJoint.prototype.GetJoint1 = function () { return this.m_joint1; };\r\n    b2GearJoint.prototype.GetJoint2 = function () { return this.m_joint2; };\r\n    b2GearJoint.prototype.GetRatio = function () {\r\n        return this.m_ratio;\r\n    };\r\n    b2GearJoint.prototype.SetRatio = function (ratio) {\r\n        // DEBUG: b2Assert(b2IsValid(ratio));\r\n        this.m_ratio = ratio;\r\n    };\r\n    b2GearJoint.prototype.Dump = function (log) {\r\n        var indexA = this.m_bodyA.m_islandIndex;\r\n        var indexB = this.m_bodyB.m_islandIndex;\r\n        var index1 = this.m_joint1.m_index;\r\n        var index2 = this.m_joint2.m_index;\r\n        log(\"  const jd: b2GearJointDef = new b2GearJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.joint1 = joints[%d];\\n\", index1);\r\n        log(\"  jd.joint2 = joints[%d];\\n\", index2);\r\n        log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    };\r\n    b2GearJoint.InitVelocityConstraints_s_u = new b2Math_1.b2Vec2();\r\n    b2GearJoint.InitVelocityConstraints_s_rA = new b2Math_1.b2Vec2();\r\n    b2GearJoint.InitVelocityConstraints_s_rB = new b2Math_1.b2Vec2();\r\n    b2GearJoint.InitVelocityConstraints_s_rC = new b2Math_1.b2Vec2();\r\n    b2GearJoint.InitVelocityConstraints_s_rD = new b2Math_1.b2Vec2();\r\n    b2GearJoint.SolvePositionConstraints_s_u = new b2Math_1.b2Vec2();\r\n    b2GearJoint.SolvePositionConstraints_s_rA = new b2Math_1.b2Vec2();\r\n    b2GearJoint.SolvePositionConstraints_s_rB = new b2Math_1.b2Vec2();\r\n    b2GearJoint.SolvePositionConstraints_s_rC = new b2Math_1.b2Vec2();\r\n    b2GearJoint.SolvePositionConstraints_s_rD = new b2Math_1.b2Vec2();\r\n    return b2GearJoint;\r\n}(b2Joint_1.b2Joint));\r\nexports.b2GearJoint = b2GearJoint;\r\n"},"sourceMaps":{"js":{"version":3,"file":"b2GearJoint.js","sourceRoot":"","sources":["../node_modules/box2d.package.ts/Dynamics/Joints/b2GearJoint.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n\r\n// DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\n// DEBUG: import { b2IsValid } from \"../../Common/b2Math\";\r\nimport { b2_linearSlop, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Vec2, b2Rot, b2Transform, XY } from \"../../Common/b2Math\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2IJointDef } from \"./b2Joint\";\r\nimport { b2PrismaticJoint } from \"./b2PrismaticJoint\";\r\nimport { b2RevoluteJoint } from \"./b2RevoluteJoint\";\r\nimport { b2SolverData } from \"../b2TimeStep\";\r\nimport { b2Body } from \"../b2Body\";\r\n\r\nexport interface b2IGearJointDef extends b2IJointDef {\r\n  joint1: b2RevoluteJoint | b2PrismaticJoint;\r\n\r\n  joint2: b2RevoluteJoint | b2PrismaticJoint;\r\n\r\n  ratio?: number;\r\n}\r\n\r\n/// Gear joint definition. This definition requires two existing\r\n/// revolute or prismatic joints (any combination will work).\r\nexport class b2GearJointDef extends b2JointDef implements b2IGearJointDef {\r\n  public joint1!: b2RevoluteJoint | b2PrismaticJoint;\r\n\r\n  public joint2!: b2RevoluteJoint | b2PrismaticJoint;\r\n\r\n  public ratio: number = 1;\r\n\r\n  constructor() {\r\n    super(b2JointType.e_gearJoint);\r\n  }\r\n}\r\n\r\nexport class b2GearJoint extends b2Joint {\r\n  public m_joint1: b2RevoluteJoint | b2PrismaticJoint;\r\n  public m_joint2: b2RevoluteJoint | b2PrismaticJoint;\r\n\r\n  public m_typeA: b2JointType = b2JointType.e_unknownJoint;\r\n  public m_typeB: b2JointType = b2JointType.e_unknownJoint;\r\n\r\n  // Body A is connected to body C\r\n  // Body B is connected to body D\r\n  public m_bodyC: b2Body;\r\n  public m_bodyD: b2Body;\r\n\r\n  // Solver shared\r\n  public readonly m_localAnchorA: b2Vec2 = new b2Vec2();\r\n  public readonly m_localAnchorB: b2Vec2 = new b2Vec2();\r\n  public readonly m_localAnchorC: b2Vec2 = new b2Vec2();\r\n  public readonly m_localAnchorD: b2Vec2 = new b2Vec2();\r\n\r\n  public readonly m_localAxisC: b2Vec2 = new b2Vec2();\r\n  public readonly m_localAxisD: b2Vec2 = new b2Vec2();\r\n\r\n  public m_referenceAngleA: number = 0;\r\n  public m_referenceAngleB: number = 0;\r\n\r\n  public m_constant: number = 0;\r\n  public m_ratio: number = 0;\r\n\r\n  public m_impulse: number = 0;\r\n\r\n  // Solver temp\r\n  public m_indexA: number = 0;\r\n  public m_indexB: number = 0;\r\n  public m_indexC: number = 0;\r\n  public m_indexD: number = 0;\r\n  public readonly m_lcA: b2Vec2 = new b2Vec2();\r\n  public readonly m_lcB: b2Vec2 = new b2Vec2();\r\n  public readonly m_lcC: b2Vec2 = new b2Vec2();\r\n  public readonly m_lcD: b2Vec2 = new b2Vec2();\r\n  public m_mA: number = 0;\r\n  public m_mB: number = 0;\r\n  public m_mC: number = 0;\r\n  public m_mD: number = 0;\r\n  public m_iA: number = 0;\r\n  public m_iB: number = 0;\r\n  public m_iC: number = 0;\r\n  public m_iD: number = 0;\r\n  public readonly m_JvAC: b2Vec2 = new b2Vec2();\r\n  public readonly m_JvBD: b2Vec2 = new b2Vec2();\r\n  public m_JwA: number = 0;\r\n  public m_JwB: number = 0;\r\n  public m_JwC: number = 0;\r\n  public m_JwD: number = 0;\r\n  public m_mass: number = 0;\r\n\r\n  public readonly m_qA: b2Rot = new b2Rot();\r\n  public readonly m_qB: b2Rot = new b2Rot();\r\n  public readonly m_qC: b2Rot = new b2Rot();\r\n  public readonly m_qD: b2Rot = new b2Rot();\r\n  public readonly m_lalcA: b2Vec2 = new b2Vec2();\r\n  public readonly m_lalcB: b2Vec2 = new b2Vec2();\r\n  public readonly m_lalcC: b2Vec2 = new b2Vec2();\r\n  public readonly m_lalcD: b2Vec2 = new b2Vec2();\r\n\r\n  constructor(def: b2IGearJointDef) {\r\n    super(def);\r\n\r\n    this.m_joint1 = def.joint1;\r\n    this.m_joint2 = def.joint2;\r\n\r\n    this.m_typeA = this.m_joint1.GetType();\r\n    this.m_typeB = this.m_joint2.GetType();\r\n\r\n    // DEBUG: b2Assert(this.m_typeA === b2JointType.e_revoluteJoint || this.m_typeA === b2JointType.e_prismaticJoint);\r\n    // DEBUG: b2Assert(this.m_typeB === b2JointType.e_revoluteJoint || this.m_typeB === b2JointType.e_prismaticJoint);\r\n\r\n    let coordinateA: number, coordinateB: number;\r\n\r\n    // TODO_ERIN there might be some problem with the joint edges in b2Joint.\r\n\r\n    this.m_bodyC = this.m_joint1.GetBodyA();\r\n    this.m_bodyA = this.m_joint1.GetBodyB();\r\n\r\n    // Get geometry of joint1\r\n    const xfA: b2Transform = this.m_bodyA.m_xf;\r\n    const aA: number = this.m_bodyA.m_sweep.a;\r\n    const xfC: b2Transform = this.m_bodyC.m_xf;\r\n    const aC: number = this.m_bodyC.m_sweep.a;\r\n\r\n    if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n      const revolute: b2RevoluteJoint = def.joint1 as b2RevoluteJoint;\r\n      this.m_localAnchorC.Copy(revolute.m_localAnchorA);\r\n      this.m_localAnchorA.Copy(revolute.m_localAnchorB);\r\n      this.m_referenceAngleA = revolute.m_referenceAngle;\r\n      this.m_localAxisC.SetZero();\r\n\r\n      coordinateA = aA - aC - this.m_referenceAngleA;\r\n    } else {\r\n      const prismatic: b2PrismaticJoint = def.joint1 as b2PrismaticJoint;\r\n      this.m_localAnchorC.Copy(prismatic.m_localAnchorA);\r\n      this.m_localAnchorA.Copy(prismatic.m_localAnchorB);\r\n      this.m_referenceAngleA = prismatic.m_referenceAngle;\r\n      this.m_localAxisC.Copy(prismatic.m_localXAxisA);\r\n\r\n      // b2Vec2 pC = m_localAnchorC;\r\n      const pC = this.m_localAnchorC;\r\n      // b2Vec2 pA = b2MulT(xfC.q, b2Mul(xfA.q, m_localAnchorA) + (xfA.p - xfC.p));\r\n      const pA: b2Vec2 = b2Rot.MulTRV(\r\n        xfC.q,\r\n        b2Vec2.AddVV(\r\n          b2Rot.MulRV(xfA.q, this.m_localAnchorA, b2Vec2.s_t0),\r\n          b2Vec2.SubVV(xfA.p, xfC.p, b2Vec2.s_t1),\r\n          b2Vec2.s_t0),\r\n        b2Vec2.s_t0); // pA uses s_t0\r\n      // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n      coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\r\n    }\r\n\r\n    this.m_bodyD = this.m_joint2.GetBodyA();\r\n    this.m_bodyB = this.m_joint2.GetBodyB();\r\n\r\n    // Get geometry of joint2\r\n    const xfB: b2Transform = this.m_bodyB.m_xf;\r\n    const aB: number = this.m_bodyB.m_sweep.a;\r\n    const xfD: b2Transform = this.m_bodyD.m_xf;\r\n    const aD: number = this.m_bodyD.m_sweep.a;\r\n\r\n    if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n      const revolute: b2RevoluteJoint = def.joint2 as b2RevoluteJoint;\r\n      this.m_localAnchorD.Copy(revolute.m_localAnchorA);\r\n      this.m_localAnchorB.Copy(revolute.m_localAnchorB);\r\n      this.m_referenceAngleB = revolute.m_referenceAngle;\r\n      this.m_localAxisD.SetZero();\r\n\r\n      coordinateB = aB - aD - this.m_referenceAngleB;\r\n    } else {\r\n      const prismatic: b2PrismaticJoint = def.joint2 as b2PrismaticJoint;\r\n      this.m_localAnchorD.Copy(prismatic.m_localAnchorA);\r\n      this.m_localAnchorB.Copy(prismatic.m_localAnchorB);\r\n      this.m_referenceAngleB = prismatic.m_referenceAngle;\r\n      this.m_localAxisD.Copy(prismatic.m_localXAxisA);\r\n\r\n      // b2Vec2 pD = m_localAnchorD;\r\n      const pD = this.m_localAnchorD;\r\n      // b2Vec2 pB = b2MulT(xfD.q, b2Mul(xfB.q, m_localAnchorB) + (xfB.p - xfD.p));\r\n      const pB: b2Vec2 = b2Rot.MulTRV(\r\n        xfD.q,\r\n        b2Vec2.AddVV(\r\n          b2Rot.MulRV(xfB.q, this.m_localAnchorB, b2Vec2.s_t0),\r\n          b2Vec2.SubVV(xfB.p, xfD.p, b2Vec2.s_t1),\r\n          b2Vec2.s_t0),\r\n        b2Vec2.s_t0); // pB uses s_t0\r\n      // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n      coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\r\n    }\r\n\r\n    this.m_ratio = b2Maybe(def.ratio, 1);\r\n\r\n    this.m_constant = coordinateA + this.m_ratio * coordinateB;\r\n\r\n    this.m_impulse = 0;\r\n  }\r\n\r\n  private static InitVelocityConstraints_s_u = new b2Vec2();\r\n  private static InitVelocityConstraints_s_rA = new b2Vec2();\r\n  private static InitVelocityConstraints_s_rB = new b2Vec2();\r\n  private static InitVelocityConstraints_s_rC = new b2Vec2();\r\n  private static InitVelocityConstraints_s_rD = new b2Vec2();\r\n  public InitVelocityConstraints(data: b2SolverData): void {\r\n    this.m_indexA = this.m_bodyA.m_islandIndex;\r\n    this.m_indexB = this.m_bodyB.m_islandIndex;\r\n    this.m_indexC = this.m_bodyC.m_islandIndex;\r\n    this.m_indexD = this.m_bodyD.m_islandIndex;\r\n    this.m_lcA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n    this.m_lcB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n    this.m_lcC.Copy(this.m_bodyC.m_sweep.localCenter);\r\n    this.m_lcD.Copy(this.m_bodyD.m_sweep.localCenter);\r\n    this.m_mA = this.m_bodyA.m_invMass;\r\n    this.m_mB = this.m_bodyB.m_invMass;\r\n    this.m_mC = this.m_bodyC.m_invMass;\r\n    this.m_mD = this.m_bodyD.m_invMass;\r\n    this.m_iA = this.m_bodyA.m_invI;\r\n    this.m_iB = this.m_bodyB.m_invI;\r\n    this.m_iC = this.m_bodyC.m_invI;\r\n    this.m_iD = this.m_bodyD.m_invI;\r\n\r\n    const aA: number = data.positions[this.m_indexA].a;\r\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\r\n    let wA: number = data.velocities[this.m_indexA].w;\r\n\r\n    const aB: number = data.positions[this.m_indexB].a;\r\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\r\n    let wB: number = data.velocities[this.m_indexB].w;\r\n\r\n    const aC: number = data.positions[this.m_indexC].a;\r\n    const vC: b2Vec2 = data.velocities[this.m_indexC].v;\r\n    let wC: number = data.velocities[this.m_indexC].w;\r\n\r\n    const aD: number = data.positions[this.m_indexD].a;\r\n    const vD: b2Vec2 = data.velocities[this.m_indexD].v;\r\n    let wD: number = data.velocities[this.m_indexD].w;\r\n\r\n    // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n    const qA: b2Rot = this.m_qA.SetAngle(aA),\r\n      qB: b2Rot = this.m_qB.SetAngle(aB),\r\n      qC: b2Rot = this.m_qC.SetAngle(aC),\r\n      qD: b2Rot = this.m_qD.SetAngle(aD);\r\n\r\n    this.m_mass = 0;\r\n\r\n    if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n      this.m_JvAC.SetZero();\r\n      this.m_JwA = 1;\r\n      this.m_JwC = 1;\r\n      this.m_mass += this.m_iA + this.m_iC;\r\n    } else {\r\n      // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n      const u: b2Vec2 = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.InitVelocityConstraints_s_u);\r\n      // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n      b2Vec2.SubVV(this.m_localAnchorC, this.m_lcC, this.m_lalcC);\r\n      const rC: b2Vec2 = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.InitVelocityConstraints_s_rC);\r\n      // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n      b2Vec2.SubVV(this.m_localAnchorA, this.m_lcA, this.m_lalcA);\r\n      const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.InitVelocityConstraints_s_rA);\r\n      // m_JvAC = u;\r\n      this.m_JvAC.Copy(u);\r\n      // m_JwC = b2Cross(rC, u);\r\n      this.m_JwC = b2Vec2.CrossVV(rC, u);\r\n      // m_JwA = b2Cross(rA, u);\r\n      this.m_JwA = b2Vec2.CrossVV(rA, u);\r\n      this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\r\n    }\r\n\r\n    if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n      this.m_JvBD.SetZero();\r\n      this.m_JwB = this.m_ratio;\r\n      this.m_JwD = this.m_ratio;\r\n      this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n    } else {\r\n      // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n      const u: b2Vec2 = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.InitVelocityConstraints_s_u);\r\n      // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n      b2Vec2.SubVV(this.m_localAnchorD, this.m_lcD, this.m_lalcD);\r\n      const rD: b2Vec2 = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.InitVelocityConstraints_s_rD);\r\n      // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n      b2Vec2.SubVV(this.m_localAnchorB, this.m_lcB, this.m_lalcB);\r\n      const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.InitVelocityConstraints_s_rB);\r\n      // m_JvBD = m_ratio * u;\r\n      b2Vec2.MulSV(this.m_ratio, u, this.m_JvBD);\r\n      // m_JwD = m_ratio * b2Cross(rD, u);\r\n      this.m_JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\r\n      // m_JwB = m_ratio * b2Cross(rB, u);\r\n      this.m_JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\r\n      this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\r\n    }\r\n\r\n    // Compute effective mass.\r\n    this.m_mass = this.m_mass > 0 ? 1 / this.m_mass : 0;\r\n\r\n    if (data.step.warmStarting) {\r\n      // vA += (m_mA * m_impulse) * m_JvAC;\r\n      vA.SelfMulAdd(this.m_mA * this.m_impulse, this.m_JvAC);\r\n      wA += this.m_iA * this.m_impulse * this.m_JwA;\r\n      // vB += (m_mB * m_impulse) * m_JvBD;\r\n      vB.SelfMulAdd(this.m_mB * this.m_impulse, this.m_JvBD);\r\n      wB += this.m_iB * this.m_impulse * this.m_JwB;\r\n      // vC -= (m_mC * m_impulse) * m_JvAC;\r\n      vC.SelfMulSub(this.m_mC * this.m_impulse, this.m_JvAC);\r\n      wC -= this.m_iC * this.m_impulse * this.m_JwC;\r\n      // vD -= (m_mD * m_impulse) * m_JvBD;\r\n      vD.SelfMulSub(this.m_mD * this.m_impulse, this.m_JvBD);\r\n      wD -= this.m_iD * this.m_impulse * this.m_JwD;\r\n    } else {\r\n      this.m_impulse = 0;\r\n    }\r\n\r\n    // data.velocities[this.m_indexA].v = vA;\r\n    data.velocities[this.m_indexA].w = wA;\r\n    // data.velocities[this.m_indexB].v = vB;\r\n    data.velocities[this.m_indexB].w = wB;\r\n    // data.velocities[this.m_indexC].v = vC;\r\n    data.velocities[this.m_indexC].w = wC;\r\n    // data.velocities[this.m_indexD].v = vD;\r\n    data.velocities[this.m_indexD].w = wD;\r\n  }\r\n\r\n  public SolveVelocityConstraints(data: b2SolverData): void {\r\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\r\n    let wA: number = data.velocities[this.m_indexA].w;\r\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\r\n    let wB: number = data.velocities[this.m_indexB].w;\r\n    const vC: b2Vec2 = data.velocities[this.m_indexC].v;\r\n    let wC: number = data.velocities[this.m_indexC].w;\r\n    const vD: b2Vec2 = data.velocities[this.m_indexD].v;\r\n    let wD: number = data.velocities[this.m_indexD].w;\r\n\r\n    // float32 Cdot = b2Dot(m_JvAC, vA - vC) + b2Dot(m_JvBD, vB - vD);\r\n    let Cdot =\r\n      b2Vec2.DotVV(this.m_JvAC, b2Vec2.SubVV(vA, vC, b2Vec2.s_t0)) +\r\n      b2Vec2.DotVV(this.m_JvBD, b2Vec2.SubVV(vB, vD, b2Vec2.s_t0));\r\n    Cdot += (this.m_JwA * wA - this.m_JwC * wC) + (this.m_JwB * wB - this.m_JwD * wD);\r\n\r\n    const impulse: number = -this.m_mass * Cdot;\r\n    this.m_impulse += impulse;\r\n\r\n    // vA += (m_mA * impulse) * m_JvAC;\r\n    vA.SelfMulAdd((this.m_mA * impulse), this.m_JvAC);\r\n    wA += this.m_iA * impulse * this.m_JwA;\r\n    // vB += (m_mB * impulse) * m_JvBD;\r\n    vB.SelfMulAdd((this.m_mB * impulse), this.m_JvBD);\r\n    wB += this.m_iB * impulse * this.m_JwB;\r\n    // vC -= (m_mC * impulse) * m_JvAC;\r\n    vC.SelfMulSub((this.m_mC * impulse), this.m_JvAC);\r\n    wC -= this.m_iC * impulse * this.m_JwC;\r\n    // vD -= (m_mD * impulse) * m_JvBD;\r\n    vD.SelfMulSub((this.m_mD * impulse), this.m_JvBD);\r\n    wD -= this.m_iD * impulse * this.m_JwD;\r\n\r\n    // data.velocities[this.m_indexA].v = vA;\r\n    data.velocities[this.m_indexA].w = wA;\r\n    // data.velocities[this.m_indexB].v = vB;\r\n    data.velocities[this.m_indexB].w = wB;\r\n    // data.velocities[this.m_indexC].v = vC;\r\n    data.velocities[this.m_indexC].w = wC;\r\n    // data.velocities[this.m_indexD].v = vD;\r\n    data.velocities[this.m_indexD].w = wD;\r\n  }\r\n\r\n  private static SolvePositionConstraints_s_u = new b2Vec2();\r\n  private static SolvePositionConstraints_s_rA = new b2Vec2();\r\n  private static SolvePositionConstraints_s_rB = new b2Vec2();\r\n  private static SolvePositionConstraints_s_rC = new b2Vec2();\r\n  private static SolvePositionConstraints_s_rD = new b2Vec2();\r\n  public SolvePositionConstraints(data: b2SolverData): boolean {\r\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\r\n    let aA: number = data.positions[this.m_indexA].a;\r\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\r\n    let aB: number = data.positions[this.m_indexB].a;\r\n    const cC: b2Vec2 = data.positions[this.m_indexC].c;\r\n    let aC: number = data.positions[this.m_indexC].a;\r\n    const cD: b2Vec2 = data.positions[this.m_indexD].c;\r\n    let aD: number = data.positions[this.m_indexD].a;\r\n\r\n    // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n    const qA: b2Rot = this.m_qA.SetAngle(aA),\r\n      qB: b2Rot = this.m_qB.SetAngle(aB),\r\n      qC: b2Rot = this.m_qC.SetAngle(aC),\r\n      qD: b2Rot = this.m_qD.SetAngle(aD);\r\n\r\n    const linearError: number = 0;\r\n\r\n    let coordinateA: number, coordinateB: number;\r\n\r\n    const JvAC: b2Vec2 = this.m_JvAC, JvBD: b2Vec2 = this.m_JvBD;\r\n    let JwA: number, JwB: number, JwC: number, JwD: number;\r\n    let mass: number = 0;\r\n\r\n    if (this.m_typeA === b2JointType.e_revoluteJoint) {\r\n      JvAC.SetZero();\r\n      JwA = 1;\r\n      JwC = 1;\r\n      mass += this.m_iA + this.m_iC;\r\n\r\n      coordinateA = aA - aC - this.m_referenceAngleA;\r\n    } else {\r\n      // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n      const u: b2Vec2 = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.SolvePositionConstraints_s_u);\r\n      // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n      const rC: b2Vec2 = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.SolvePositionConstraints_s_rC);\r\n      // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n      const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.SolvePositionConstraints_s_rA);\r\n      // JvAC = u;\r\n      JvAC.Copy(u);\r\n      // JwC = b2Cross(rC, u);\r\n      JwC = b2Vec2.CrossVV(rC, u);\r\n      // JwA = b2Cross(rA, u);\r\n      JwA = b2Vec2.CrossVV(rA, u);\r\n      mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\r\n\r\n      // b2Vec2 pC = m_localAnchorC - m_lcC;\r\n      const pC = this.m_lalcC;\r\n      // b2Vec2 pA = b2MulT(qC, rA + (cA - cC));\r\n      const pA: b2Vec2 = b2Rot.MulTRV(\r\n        qC,\r\n        b2Vec2.AddVV(\r\n          rA,\r\n          b2Vec2.SubVV(cA, cC, b2Vec2.s_t0),\r\n          b2Vec2.s_t0),\r\n        b2Vec2.s_t0); // pA uses s_t0\r\n      // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n      coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\r\n    }\r\n\r\n    if (this.m_typeB === b2JointType.e_revoluteJoint) {\r\n      JvBD.SetZero();\r\n      JwB = this.m_ratio;\r\n      JwD = this.m_ratio;\r\n      mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n\r\n      coordinateB = aB - aD - this.m_referenceAngleB;\r\n    } else {\r\n      // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n      const u: b2Vec2 = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.SolvePositionConstraints_s_u);\r\n      // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n      const rD: b2Vec2 = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.SolvePositionConstraints_s_rD);\r\n      // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n      const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.SolvePositionConstraints_s_rB);\r\n      // JvBD = m_ratio * u;\r\n      b2Vec2.MulSV(this.m_ratio, u, JvBD);\r\n      // JwD = m_ratio * b2Cross(rD, u);\r\n      JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\r\n      // JwB = m_ratio * b2Cross(rB, u);\r\n      JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\r\n      mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * JwD * JwD + this.m_iB * JwB * JwB;\r\n\r\n      // b2Vec2 pD = m_localAnchorD - m_lcD;\r\n      const pD = this.m_lalcD;\r\n      // b2Vec2 pB = b2MulT(qD, rB + (cB - cD));\r\n      const pB: b2Vec2 = b2Rot.MulTRV(\r\n        qD,\r\n        b2Vec2.AddVV(\r\n          rB,\r\n          b2Vec2.SubVV(cB, cD, b2Vec2.s_t0),\r\n          b2Vec2.s_t0),\r\n        b2Vec2.s_t0); // pB uses s_t0\r\n      // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n      coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\r\n    }\r\n\r\n    const C: number = (coordinateA + this.m_ratio * coordinateB) - this.m_constant;\r\n\r\n    let impulse: number = 0;\r\n    if (mass > 0) {\r\n      impulse = -C / mass;\r\n    }\r\n\r\n    // cA += m_mA * impulse * JvAC;\r\n    cA.SelfMulAdd(this.m_mA * impulse, JvAC);\r\n    aA += this.m_iA * impulse * JwA;\r\n    // cB += m_mB * impulse * JvBD;\r\n    cB.SelfMulAdd(this.m_mB * impulse, JvBD);\r\n    aB += this.m_iB * impulse * JwB;\r\n    // cC -= m_mC * impulse * JvAC;\r\n    cC.SelfMulSub(this.m_mC * impulse, JvAC);\r\n    aC -= this.m_iC * impulse * JwC;\r\n    // cD -= m_mD * impulse * JvBD;\r\n    cD.SelfMulSub(this.m_mD * impulse, JvBD);\r\n    aD -= this.m_iD * impulse * JwD;\r\n\r\n    // data.positions[this.m_indexA].c = cA;\r\n    data.positions[this.m_indexA].a = aA;\r\n    // data.positions[this.m_indexB].c = cB;\r\n    data.positions[this.m_indexB].a = aB;\r\n    // data.positions[this.m_indexC].c = cC;\r\n    data.positions[this.m_indexC].a = aC;\r\n    // data.positions[this.m_indexD].c = cD;\r\n    data.positions[this.m_indexD].a = aD;\r\n\r\n    // TODO_ERIN not implemented\r\n    return linearError < b2_linearSlop;\r\n  }\r\n\r\n  public GetAnchorA<T extends XY>(out: T): T {\r\n    return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n  }\r\n\r\n  public GetAnchorB<T extends XY>(out: T): T {\r\n    return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n  }\r\n\r\n  public GetReactionForce<T extends XY>(inv_dt: number, out: T): T {\r\n    // b2Vec2 P = m_impulse * m_JvAC;\r\n    // return inv_dt * P;\r\n    return b2Vec2.MulSV(inv_dt * this.m_impulse, this.m_JvAC, out);\r\n  }\r\n\r\n  public GetReactionTorque(inv_dt: number): number {\r\n    // float32 L = m_impulse * m_JwA;\r\n    // return inv_dt * L;\r\n    return inv_dt * this.m_impulse * this.m_JwA;\r\n  }\r\n\r\n  public GetJoint1() { return this.m_joint1; }\r\n\r\n  public GetJoint2() { return this.m_joint2; }\r\n\r\n  public GetRatio() {\r\n    return this.m_ratio;\r\n  }\r\n\r\n  public SetRatio(ratio: number): void {\r\n    // DEBUG: b2Assert(b2IsValid(ratio));\r\n    this.m_ratio = ratio;\r\n  }\r\n\r\n  public Dump(log: (format: string, ...args: any[]) => void) {\r\n    const indexA = this.m_bodyA.m_islandIndex;\r\n    const indexB = this.m_bodyB.m_islandIndex;\r\n\r\n    const index1 = this.m_joint1.m_index;\r\n    const index2 = this.m_joint2.m_index;\r\n\r\n    log(\"  const jd: b2GearJointDef = new b2GearJointDef();\\n\");\r\n    log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n    log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n    log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n    log(\"  jd.joint1 = joints[%d];\\n\", index1);\r\n    log(\"  jd.joint2 = joints[%d];\\n\", index2);\r\n    log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n    log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n  }\r\n}\r\n"]}},"error":null,"hash":"2acaaf36ca12819fd3f27d950d7a0e70","cacheData":{"env":{}}}