{"id":"../node_modules/box2d.package.ts/Rope/b2Rope.ts","dependencies":[{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\package.json","includedInParent":true,"mtime":1586335198964},{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\.babelrc","includedInParent":true,"mtime":1586259187841},{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\package.json","includedInParent":true,"mtime":1586252018883},{"name":"../Common/b2Settings","loc":{"line":21,"column":27},"parent":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Rope\\b2Rope.ts","resolved":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Common\\b2Settings.ts"},{"name":"../Common/b2Math","loc":{"line":22,"column":23},"parent":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Rope\\b2Rope.ts","resolved":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Common\\b2Math.ts"},{"name":"../Common/b2Draw","loc":{"line":23,"column":23},"parent":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Rope\\b2Rope.ts","resolved":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Common\\b2Draw.ts"}],"generated":{"js":"\"use strict\";\r\n/*\r\n* Copyright (c) 2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexports.__esModule = true;\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nvar b2Settings_1 = require(\"../Common/b2Settings\");\r\nvar b2Math_1 = require(\"../Common/b2Math\");\r\nvar b2Draw_1 = require(\"../Common/b2Draw\");\r\n///\r\nvar b2RopeDef = /** @class */ (function () {\r\n    function b2RopeDef() {\r\n        ///\r\n        this.vertices = [];\r\n        ///\r\n        this.count = 0;\r\n        ///\r\n        this.masses = [];\r\n        ///\r\n        this.gravity = new b2Math_1.b2Vec2(0, 0);\r\n        ///\r\n        this.damping = 0.1;\r\n        /// Stretching stiffness\r\n        this.k2 = 0.9;\r\n        /// Bending stiffness. Values above 0.5 can make the simulation blow up.\r\n        this.k3 = 0.1;\r\n    }\r\n    return b2RopeDef;\r\n}());\r\nexports.b2RopeDef = b2RopeDef;\r\n///\r\nvar b2Rope = /** @class */ (function () {\r\n    function b2Rope() {\r\n        this.m_count = 0;\r\n        this.m_ps = [];\r\n        this.m_p0s = [];\r\n        this.m_vs = [];\r\n        this.m_ims = [];\r\n        this.m_Ls = [];\r\n        this.m_as = [];\r\n        this.m_gravity = new b2Math_1.b2Vec2();\r\n        this.m_damping = 0;\r\n        this.m_k2 = 1;\r\n        this.m_k3 = 0.1;\r\n    }\r\n    b2Rope.prototype.GetVertexCount = function () {\r\n        return this.m_count;\r\n    };\r\n    b2Rope.prototype.GetVertices = function () {\r\n        return this.m_ps;\r\n    };\r\n    ///\r\n    b2Rope.prototype.Initialize = function (def) {\r\n        // DEBUG: b2Assert(def.count >= 3);\r\n        this.m_count = def.count;\r\n        // this.m_ps = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_ps = b2Math_1.b2Vec2.MakeArray(this.m_count);\r\n        // this.m_p0s = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_p0s = b2Math_1.b2Vec2.MakeArray(this.m_count);\r\n        // this.m_vs = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n        this.m_vs = b2Math_1.b2Vec2.MakeArray(this.m_count);\r\n        // this.m_ims = (float32*)b2Alloc(this.m_count * sizeof(float32));\r\n        this.m_ims = b2Settings_1.b2MakeNumberArray(this.m_count);\r\n        for (var i = 0; i < this.m_count; ++i) {\r\n            this.m_ps[i].Copy(def.vertices[i]);\r\n            this.m_p0s[i].Copy(def.vertices[i]);\r\n            this.m_vs[i].SetZero();\r\n            var m = def.masses[i];\r\n            if (m > 0) {\r\n                this.m_ims[i] = 1 / m;\r\n            }\r\n            else {\r\n                this.m_ims[i] = 0;\r\n            }\r\n        }\r\n        var count2 = this.m_count - 1;\r\n        var count3 = this.m_count - 2;\r\n        // this.m_Ls = (float32*)be2Alloc(count2 * sizeof(float32));\r\n        this.m_Ls = b2Settings_1.b2MakeNumberArray(count2);\r\n        // this.m_as = (float32*)b2Alloc(count3 * sizeof(float32));\r\n        this.m_as = b2Settings_1.b2MakeNumberArray(count3);\r\n        for (var i = 0; i < count2; ++i) {\r\n            var p1 = this.m_ps[i];\r\n            var p2 = this.m_ps[i + 1];\r\n            this.m_Ls[i] = b2Math_1.b2Vec2.DistanceVV(p1, p2);\r\n        }\r\n        for (var i = 0; i < count3; ++i) {\r\n            var p1 = this.m_ps[i];\r\n            var p2 = this.m_ps[i + 1];\r\n            var p3 = this.m_ps[i + 2];\r\n            var d1 = b2Math_1.b2Vec2.SubVV(p2, p1, b2Math_1.b2Vec2.s_t0);\r\n            var d2 = b2Math_1.b2Vec2.SubVV(p3, p2, b2Math_1.b2Vec2.s_t1);\r\n            var a = b2Math_1.b2Vec2.CrossVV(d1, d2);\r\n            var b = b2Math_1.b2Vec2.DotVV(d1, d2);\r\n            this.m_as[i] = b2Math_1.b2Atan2(a, b);\r\n        }\r\n        this.m_gravity.Copy(def.gravity);\r\n        this.m_damping = def.damping;\r\n        this.m_k2 = def.k2;\r\n        this.m_k3 = def.k3;\r\n    };\r\n    ///\r\n    b2Rope.prototype.Step = function (h, iterations) {\r\n        if (h === 0) {\r\n            return;\r\n        }\r\n        var d = Math.exp(-h * this.m_damping);\r\n        for (var i = 0; i < this.m_count; ++i) {\r\n            this.m_p0s[i].Copy(this.m_ps[i]);\r\n            if (this.m_ims[i] > 0) {\r\n                this.m_vs[i].SelfMulAdd(h, this.m_gravity);\r\n            }\r\n            this.m_vs[i].SelfMul(d);\r\n            this.m_ps[i].SelfMulAdd(h, this.m_vs[i]);\r\n        }\r\n        for (var i = 0; i < iterations; ++i) {\r\n            this.SolveC2();\r\n            this.SolveC3();\r\n            this.SolveC2();\r\n        }\r\n        var inv_h = 1 / h;\r\n        for (var i = 0; i < this.m_count; ++i) {\r\n            b2Math_1.b2Vec2.MulSV(inv_h, b2Math_1.b2Vec2.SubVV(this.m_ps[i], this.m_p0s[i], b2Math_1.b2Vec2.s_t0), this.m_vs[i]);\r\n        }\r\n    };\r\n    b2Rope.prototype.SolveC2 = function () {\r\n        var count2 = this.m_count - 1;\r\n        for (var i = 0; i < count2; ++i) {\r\n            var p1 = this.m_ps[i];\r\n            var p2 = this.m_ps[i + 1];\r\n            var d = b2Math_1.b2Vec2.SubVV(p2, p1, b2Rope.s_d);\r\n            var L = d.Normalize();\r\n            var im1 = this.m_ims[i];\r\n            var im2 = this.m_ims[i + 1];\r\n            if (im1 + im2 === 0) {\r\n                continue;\r\n            }\r\n            var s1 = im1 / (im1 + im2);\r\n            var s2 = im2 / (im1 + im2);\r\n            p1.SelfMulSub(this.m_k2 * s1 * (this.m_Ls[i] - L), d);\r\n            p2.SelfMulAdd(this.m_k2 * s2 * (this.m_Ls[i] - L), d);\r\n            // this.m_ps[i] = p1;\r\n            // this.m_ps[i + 1] = p2;\r\n        }\r\n    };\r\n    b2Rope.prototype.SetAngle = function (angle) {\r\n        var count3 = this.m_count - 2;\r\n        for (var i = 0; i < count3; ++i) {\r\n            this.m_as[i] = angle;\r\n        }\r\n    };\r\n    b2Rope.prototype.SolveC3 = function () {\r\n        var count3 = this.m_count - 2;\r\n        for (var i = 0; i < count3; ++i) {\r\n            var p1 = this.m_ps[i];\r\n            var p2 = this.m_ps[i + 1];\r\n            var p3 = this.m_ps[i + 2];\r\n            var m1 = this.m_ims[i];\r\n            var m2 = this.m_ims[i + 1];\r\n            var m3 = this.m_ims[i + 2];\r\n            var d1 = b2Math_1.b2Vec2.SubVV(p2, p1, b2Rope.s_d1);\r\n            var d2 = b2Math_1.b2Vec2.SubVV(p3, p2, b2Rope.s_d2);\r\n            var L1sqr = d1.LengthSquared();\r\n            var L2sqr = d2.LengthSquared();\r\n            if (L1sqr * L2sqr === 0) {\r\n                continue;\r\n            }\r\n            var a = b2Math_1.b2Vec2.CrossVV(d1, d2);\r\n            var b = b2Math_1.b2Vec2.DotVV(d1, d2);\r\n            var angle = b2Math_1.b2Atan2(a, b);\r\n            var Jd1 = b2Math_1.b2Vec2.MulSV((-1 / L1sqr), d1.SelfSkew(), b2Rope.s_Jd1);\r\n            var Jd2 = b2Math_1.b2Vec2.MulSV((1 / L2sqr), d2.SelfSkew(), b2Rope.s_Jd2);\r\n            var J1 = b2Math_1.b2Vec2.NegV(Jd1, b2Rope.s_J1);\r\n            var J2 = b2Math_1.b2Vec2.SubVV(Jd1, Jd2, b2Rope.s_J2);\r\n            var J3 = Jd2;\r\n            var mass = m1 * b2Math_1.b2Vec2.DotVV(J1, J1) + m2 * b2Math_1.b2Vec2.DotVV(J2, J2) + m3 * b2Math_1.b2Vec2.DotVV(J3, J3);\r\n            if (mass === 0) {\r\n                continue;\r\n            }\r\n            mass = 1 / mass;\r\n            var C = angle - this.m_as[i];\r\n            while (C > b2Settings_1.b2_pi) {\r\n                angle -= 2 * b2Settings_1.b2_pi;\r\n                C = angle - this.m_as[i];\r\n            }\r\n            while (C < -b2Settings_1.b2_pi) {\r\n                angle += 2 * b2Settings_1.b2_pi;\r\n                C = angle - this.m_as[i];\r\n            }\r\n            var impulse = -this.m_k3 * mass * C;\r\n            p1.SelfMulAdd((m1 * impulse), J1);\r\n            p2.SelfMulAdd((m2 * impulse), J2);\r\n            p3.SelfMulAdd((m3 * impulse), J3);\r\n            // this.m_ps[i] = p1;\r\n            // this.m_ps[i + 1] = p2;\r\n            // this.m_ps[i + 2] = p3;\r\n        }\r\n    };\r\n    b2Rope.prototype.Draw = function (draw) {\r\n        var c = new b2Draw_1.b2Color(0.4, 0.5, 0.7);\r\n        for (var i = 0; i < this.m_count - 1; ++i) {\r\n            draw.DrawSegment(this.m_ps[i], this.m_ps[i + 1], c);\r\n        }\r\n    };\r\n    ///\r\n    b2Rope.s_d = new b2Math_1.b2Vec2();\r\n    b2Rope.s_d1 = new b2Math_1.b2Vec2();\r\n    b2Rope.s_d2 = new b2Math_1.b2Vec2();\r\n    b2Rope.s_Jd1 = new b2Math_1.b2Vec2();\r\n    b2Rope.s_Jd2 = new b2Math_1.b2Vec2();\r\n    b2Rope.s_J1 = new b2Math_1.b2Vec2();\r\n    b2Rope.s_J2 = new b2Math_1.b2Vec2();\r\n    return b2Rope;\r\n}());\r\nexports.b2Rope = b2Rope;\r\n"},"sourceMaps":{"js":{"version":3,"file":"b2Rope.js","sourceRoot":"","sources":["../node_modules/box2d.package.ts/Rope/b2Rope.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n* Copyright (c) 2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_pi, b2MakeNumberArray } from \"../Common/b2Settings\";\r\nimport { b2Atan2, b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2Color, b2Draw } from \"../Common/b2Draw\";\r\n\r\n///\r\nexport class b2RopeDef {\r\n  ///\r\n  public vertices: b2Vec2[] = [];\r\n\r\n  ///\r\n  public count: number = 0;\r\n\r\n  ///\r\n  public masses: number[] = [];\r\n\r\n  ///\r\n  public readonly gravity: b2Vec2 = new b2Vec2(0, 0);\r\n\r\n  ///\r\n  public damping: number = 0.1;\r\n\r\n  /// Stretching stiffness\r\n  public k2: number = 0.9;\r\n\r\n  /// Bending stiffness. Values above 0.5 can make the simulation blow up.\r\n  public k3: number = 0.1;\r\n}\r\n\r\n///\r\nexport class b2Rope {\r\n  public m_count: number = 0;\r\n  public m_ps: b2Vec2[] = [];\r\n  public m_p0s: b2Vec2[] = [];\r\n  public m_vs: b2Vec2[] = [];\r\n\r\n  public m_ims: number[] = [];\r\n\r\n  public m_Ls: number[] = [];\r\n  public m_as: number[] = [];\r\n\r\n  public readonly m_gravity: b2Vec2 = new b2Vec2();\r\n  public m_damping: number = 0;\r\n\r\n  public m_k2: number = 1;\r\n  public m_k3: number = 0.1;\r\n\r\n  public GetVertexCount(): number {\r\n    return this.m_count;\r\n  }\r\n\r\n  public GetVertices(): b2Vec2[] {\r\n    return this.m_ps;\r\n  }\r\n\r\n  ///\r\n  public Initialize(def: b2RopeDef): void {\r\n    // DEBUG: b2Assert(def.count >= 3);\r\n    this.m_count = def.count;\r\n    // this.m_ps = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n    this.m_ps = b2Vec2.MakeArray(this.m_count);\r\n    // this.m_p0s = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n    this.m_p0s = b2Vec2.MakeArray(this.m_count);\r\n    // this.m_vs = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n    this.m_vs = b2Vec2.MakeArray(this.m_count);\r\n    // this.m_ims = (float32*)b2Alloc(this.m_count * sizeof(float32));\r\n    this.m_ims = b2MakeNumberArray(this.m_count);\r\n\r\n    for (let i: number = 0; i < this.m_count; ++i) {\r\n      this.m_ps[i].Copy(def.vertices[i]);\r\n      this.m_p0s[i].Copy(def.vertices[i]);\r\n      this.m_vs[i].SetZero();\r\n\r\n      const m: number = def.masses[i];\r\n      if (m > 0) {\r\n        this.m_ims[i] = 1 / m;\r\n      } else {\r\n        this.m_ims[i] = 0;\r\n      }\r\n    }\r\n\r\n    const count2: number = this.m_count - 1;\r\n    const count3: number = this.m_count - 2;\r\n    // this.m_Ls = (float32*)be2Alloc(count2 * sizeof(float32));\r\n    this.m_Ls = b2MakeNumberArray(count2);\r\n    // this.m_as = (float32*)b2Alloc(count3 * sizeof(float32));\r\n    this.m_as = b2MakeNumberArray(count3);\r\n\r\n    for (let i: number = 0; i < count2; ++i) {\r\n      const p1: b2Vec2 = this.m_ps[i];\r\n      const p2: b2Vec2 = this.m_ps[i + 1];\r\n      this.m_Ls[i] = b2Vec2.DistanceVV(p1, p2);\r\n    }\r\n\r\n    for (let i: number = 0; i < count3; ++i) {\r\n      const p1: b2Vec2 = this.m_ps[i];\r\n      const p2: b2Vec2 = this.m_ps[i + 1];\r\n      const p3: b2Vec2 = this.m_ps[i + 2];\r\n\r\n      const d1: b2Vec2 = b2Vec2.SubVV(p2, p1, b2Vec2.s_t0);\r\n      const d2: b2Vec2 = b2Vec2.SubVV(p3, p2, b2Vec2.s_t1);\r\n\r\n      const a: number = b2Vec2.CrossVV(d1, d2);\r\n      const b: number = b2Vec2.DotVV(d1, d2);\r\n\r\n      this.m_as[i] = b2Atan2(a, b);\r\n    }\r\n\r\n    this.m_gravity.Copy(def.gravity);\r\n    this.m_damping = def.damping;\r\n    this.m_k2 = def.k2;\r\n    this.m_k3 = def.k3;\r\n  }\r\n\r\n  ///\r\n  public Step(h: number, iterations: number): void {\r\n    if (h === 0) {\r\n      return;\r\n    }\r\n\r\n    const d: number = Math.exp(- h * this.m_damping);\r\n\r\n    for (let i: number = 0; i < this.m_count; ++i) {\r\n      this.m_p0s[i].Copy(this.m_ps[i]);\r\n      if (this.m_ims[i] > 0) {\r\n        this.m_vs[i].SelfMulAdd(h, this.m_gravity);\r\n      }\r\n      this.m_vs[i].SelfMul(d);\r\n      this.m_ps[i].SelfMulAdd(h, this.m_vs[i]);\r\n    }\r\n\r\n    for (let i: number = 0; i < iterations; ++i) {\r\n      this.SolveC2();\r\n      this.SolveC3();\r\n      this.SolveC2();\r\n    }\r\n\r\n    const inv_h: number = 1 / h;\r\n    for (let i: number = 0; i < this.m_count; ++i) {\r\n      b2Vec2.MulSV(inv_h, b2Vec2.SubVV(this.m_ps[i], this.m_p0s[i], b2Vec2.s_t0), this.m_vs[i]);\r\n    }\r\n  }\r\n\r\n  ///\r\n  private static s_d = new b2Vec2();\r\n  public SolveC2(): void {\r\n    const count2: number = this.m_count - 1;\r\n\r\n    for (let i: number = 0; i < count2; ++i) {\r\n      const p1: b2Vec2 = this.m_ps[i];\r\n      const p2: b2Vec2 = this.m_ps[i + 1];\r\n\r\n      const d: b2Vec2 = b2Vec2.SubVV(p2, p1, b2Rope.s_d);\r\n      const L: number = d.Normalize();\r\n\r\n      const im1: number = this.m_ims[i];\r\n      const im2: number = this.m_ims[i + 1];\r\n\r\n      if (im1 + im2 === 0) {\r\n        continue;\r\n      }\r\n\r\n      const s1: number = im1 / (im1 + im2);\r\n      const s2: number = im2 / (im1 + im2);\r\n\r\n      p1.SelfMulSub(this.m_k2 * s1 * (this.m_Ls[i] - L), d);\r\n      p2.SelfMulAdd(this.m_k2 * s2 * (this.m_Ls[i] - L), d);\r\n\r\n      // this.m_ps[i] = p1;\r\n      // this.m_ps[i + 1] = p2;\r\n    }\r\n  }\r\n\r\n  public SetAngle(angle: number): void {\r\n    const count3: number = this.m_count - 2;\r\n    for (let i: number = 0; i < count3; ++i) {\r\n      this.m_as[i] = angle;\r\n    }\r\n  }\r\n\r\n  private static s_d1 = new b2Vec2();\r\n  private static s_d2 = new b2Vec2();\r\n  private static s_Jd1 = new b2Vec2();\r\n  private static s_Jd2 = new b2Vec2();\r\n  private static s_J1 = new b2Vec2();\r\n  private static s_J2 = new b2Vec2();\r\n  public SolveC3(): void {\r\n    const count3: number = this.m_count - 2;\r\n\r\n    for (let i: number = 0; i < count3; ++i) {\r\n      const p1: b2Vec2 = this.m_ps[i];\r\n      const p2: b2Vec2 = this.m_ps[i + 1];\r\n      const p3: b2Vec2 = this.m_ps[i + 2];\r\n\r\n      const m1: number = this.m_ims[i];\r\n      const m2: number = this.m_ims[i + 1];\r\n      const m3: number = this.m_ims[i + 2];\r\n\r\n      const d1: b2Vec2 = b2Vec2.SubVV(p2, p1, b2Rope.s_d1);\r\n      const d2: b2Vec2 = b2Vec2.SubVV(p3, p2, b2Rope.s_d2);\r\n\r\n      const L1sqr: number = d1.LengthSquared();\r\n      const L2sqr: number = d2.LengthSquared();\r\n\r\n      if (L1sqr * L2sqr === 0) {\r\n        continue;\r\n      }\r\n\r\n      const a: number = b2Vec2.CrossVV(d1, d2);\r\n      const b: number = b2Vec2.DotVV(d1, d2);\r\n\r\n      let angle: number = b2Atan2(a, b);\r\n\r\n      const Jd1: b2Vec2 = b2Vec2.MulSV((-1 / L1sqr), d1.SelfSkew(), b2Rope.s_Jd1);\r\n      const Jd2: b2Vec2 = b2Vec2.MulSV(( 1 / L2sqr), d2.SelfSkew(), b2Rope.s_Jd2);\r\n\r\n      const J1: b2Vec2 = b2Vec2.NegV(Jd1, b2Rope.s_J1);\r\n      const J2: b2Vec2 = b2Vec2.SubVV(Jd1, Jd2, b2Rope.s_J2);\r\n      const J3: b2Vec2 = Jd2;\r\n\r\n      let mass: number = m1 * b2Vec2.DotVV(J1, J1) + m2 * b2Vec2.DotVV(J2, J2) + m3 * b2Vec2.DotVV(J3, J3);\r\n      if (mass === 0) {\r\n        continue;\r\n      }\r\n\r\n      mass = 1 / mass;\r\n\r\n      let C: number = angle - this.m_as[i];\r\n\r\n      while (C > b2_pi) {\r\n        angle -= 2 * b2_pi;\r\n        C = angle - this.m_as[i];\r\n      }\r\n\r\n      while (C < -b2_pi) {\r\n        angle += 2 * b2_pi;\r\n        C = angle - this.m_as[i];\r\n      }\r\n\r\n      const impulse: number = - this.m_k3 * mass * C;\r\n\r\n      p1.SelfMulAdd((m1 * impulse), J1);\r\n      p2.SelfMulAdd((m2 * impulse), J2);\r\n      p3.SelfMulAdd((m3 * impulse), J3);\r\n\r\n      // this.m_ps[i] = p1;\r\n      // this.m_ps[i + 1] = p2;\r\n      // this.m_ps[i + 2] = p3;\r\n    }\r\n  }\r\n\r\n  public Draw(draw: b2Draw): void {\r\n    const c: b2Color = new b2Color(0.4, 0.5, 0.7);\r\n\r\n    for (let i: number = 0; i < this.m_count - 1; ++i) {\r\n      draw.DrawSegment(this.m_ps[i], this.m_ps[i + 1], c);\r\n    }\r\n  }\r\n}\r\n"]}},"error":null,"hash":"b733bf077df2fa9b766a31e6f64ffceb","cacheData":{"env":{}}}