{"id":"../node_modules/box2d.package.ts/Dynamics/Joints/b2PulleyJoint.ts","dependencies":[{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\package.json","includedInParent":true,"mtime":1586335198964},{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\.babelrc","includedInParent":true,"mtime":1586259187841},{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\package.json","includedInParent":true,"mtime":1586252018883},{"name":"../../Common/b2Settings","loc":{"line":31,"column":27},"parent":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Dynamics\\Joints\\b2PulleyJoint.ts","resolved":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Common\\b2Settings.ts"},{"name":"../../Common/b2Math","loc":{"line":32,"column":23},"parent":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Dynamics\\Joints\\b2PulleyJoint.ts","resolved":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Common\\b2Math.ts"},{"name":"./b2Joint","loc":{"line":33,"column":24},"parent":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Dynamics\\Joints\\b2PulleyJoint.ts","resolved":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Dynamics\\Joints\\b2Joint.ts"}],"generated":{"js":"\"use strict\";\r\n/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\n// DEBUG: import { b2Assert, b2_epsilon } from \"../../Common/b2Settings\";\r\nvar b2Settings_1 = require(\"../../Common/b2Settings\");\r\nvar b2Math_1 = require(\"../../Common/b2Math\");\r\nvar b2Joint_1 = require(\"./b2Joint\");\r\nexports.b2_minPulleyLength = 2;\r\n/// Pulley joint definition. This requires two ground anchors,\r\n/// two dynamic body anchor points, and a pulley ratio.\r\nvar b2PulleyJointDef = /** @class */ (function (_super) {\r\n    __extends(b2PulleyJointDef, _super);\r\n    function b2PulleyJointDef() {\r\n        var _this = _super.call(this, b2Joint_1.b2JointType.e_pulleyJoint) || this;\r\n        _this.groundAnchorA = new b2Math_1.b2Vec2(-1, 1);\r\n        _this.groundAnchorB = new b2Math_1.b2Vec2(1, 1);\r\n        _this.localAnchorA = new b2Math_1.b2Vec2(-1, 0);\r\n        _this.localAnchorB = new b2Math_1.b2Vec2(1, 0);\r\n        _this.lengthA = 0;\r\n        _this.lengthB = 0;\r\n        _this.ratio = 1;\r\n        _this.collideConnected = true;\r\n        return _this;\r\n    }\r\n    b2PulleyJointDef.prototype.Initialize = function (bA, bB, groundA, groundB, anchorA, anchorB, r) {\r\n        this.bodyA = bA;\r\n        this.bodyB = bB;\r\n        this.groundAnchorA.Copy(groundA);\r\n        this.groundAnchorB.Copy(groundB);\r\n        this.bodyA.GetLocalPoint(anchorA, this.localAnchorA);\r\n        this.bodyB.GetLocalPoint(anchorB, this.localAnchorB);\r\n        this.lengthA = b2Math_1.b2Vec2.DistanceVV(anchorA, groundA);\r\n        this.lengthB = b2Math_1.b2Vec2.DistanceVV(anchorB, groundB);\r\n        this.ratio = r;\r\n        // DEBUG: b2Assert(this.ratio > b2_epsilon);\r\n    };\r\n    return b2PulleyJointDef;\r\n}(b2Joint_1.b2JointDef));\r\nexports.b2PulleyJointDef = b2PulleyJointDef;\r\nvar b2PulleyJoint = /** @class */ (function (_super) {\r\n    __extends(b2PulleyJoint, _super);\r\n    function b2PulleyJoint(def) {\r\n        var _this = _super.call(this, def) || this;\r\n        _this.m_groundAnchorA = new b2Math_1.b2Vec2();\r\n        _this.m_groundAnchorB = new b2Math_1.b2Vec2();\r\n        _this.m_lengthA = 0;\r\n        _this.m_lengthB = 0;\r\n        // Solver shared\r\n        _this.m_localAnchorA = new b2Math_1.b2Vec2();\r\n        _this.m_localAnchorB = new b2Math_1.b2Vec2();\r\n        _this.m_constant = 0;\r\n        _this.m_ratio = 0;\r\n        _this.m_impulse = 0;\r\n        // Solver temp\r\n        _this.m_indexA = 0;\r\n        _this.m_indexB = 0;\r\n        _this.m_uA = new b2Math_1.b2Vec2();\r\n        _this.m_uB = new b2Math_1.b2Vec2();\r\n        _this.m_rA = new b2Math_1.b2Vec2();\r\n        _this.m_rB = new b2Math_1.b2Vec2();\r\n        _this.m_localCenterA = new b2Math_1.b2Vec2();\r\n        _this.m_localCenterB = new b2Math_1.b2Vec2();\r\n        _this.m_invMassA = 0;\r\n        _this.m_invMassB = 0;\r\n        _this.m_invIA = 0;\r\n        _this.m_invIB = 0;\r\n        _this.m_mass = 0;\r\n        _this.m_qA = new b2Math_1.b2Rot();\r\n        _this.m_qB = new b2Math_1.b2Rot();\r\n        _this.m_lalcA = new b2Math_1.b2Vec2();\r\n        _this.m_lalcB = new b2Math_1.b2Vec2();\r\n        _this.m_groundAnchorA.Copy(b2Settings_1.b2Maybe(def.groundAnchorA, new b2Math_1.b2Vec2(-1, 1)));\r\n        _this.m_groundAnchorB.Copy(b2Settings_1.b2Maybe(def.groundAnchorB, new b2Math_1.b2Vec2(1, 0)));\r\n        _this.m_localAnchorA.Copy(b2Settings_1.b2Maybe(def.localAnchorA, new b2Math_1.b2Vec2(-1, 0)));\r\n        _this.m_localAnchorB.Copy(b2Settings_1.b2Maybe(def.localAnchorB, new b2Math_1.b2Vec2(1, 0)));\r\n        _this.m_lengthA = b2Settings_1.b2Maybe(def.lengthA, 0);\r\n        _this.m_lengthB = b2Settings_1.b2Maybe(def.lengthB, 0);\r\n        // DEBUG: b2Assert(b2Maybe(def.ratio, 1) !== 0);\r\n        _this.m_ratio = b2Settings_1.b2Maybe(def.ratio, 1);\r\n        _this.m_constant = b2Settings_1.b2Maybe(def.lengthA, 0) + _this.m_ratio * b2Settings_1.b2Maybe(def.lengthB, 0);\r\n        _this.m_impulse = 0;\r\n        return _this;\r\n    }\r\n    b2PulleyJoint.prototype.InitVelocityConstraints = function (data) {\r\n        this.m_indexA = this.m_bodyA.m_islandIndex;\r\n        this.m_indexB = this.m_bodyB.m_islandIndex;\r\n        this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n        this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n        this.m_invMassA = this.m_bodyA.m_invMass;\r\n        this.m_invMassB = this.m_bodyB.m_invMass;\r\n        this.m_invIA = this.m_bodyA.m_invI;\r\n        this.m_invIB = this.m_bodyB.m_invI;\r\n        var cA = data.positions[this.m_indexA].c;\r\n        var aA = data.positions[this.m_indexA].a;\r\n        var vA = data.velocities[this.m_indexA].v;\r\n        var wA = data.velocities[this.m_indexA].w;\r\n        var cB = data.positions[this.m_indexB].c;\r\n        var aB = data.positions[this.m_indexB].a;\r\n        var vB = data.velocities[this.m_indexB].v;\r\n        var wB = data.velocities[this.m_indexB].w;\r\n        // b2Rot qA(aA), qB(aB);\r\n        var qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Math_1.b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        b2Math_1.b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Math_1.b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        b2Math_1.b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // Get the pulley axes.\r\n        // m_uA = cA + m_rA - m_groundAnchorA;\r\n        this.m_uA.Copy(cA).SelfAdd(this.m_rA).SelfSub(this.m_groundAnchorA);\r\n        // m_uB = cB + m_rB - m_groundAnchorB;\r\n        this.m_uB.Copy(cB).SelfAdd(this.m_rB).SelfSub(this.m_groundAnchorB);\r\n        var lengthA = this.m_uA.Length();\r\n        var lengthB = this.m_uB.Length();\r\n        if (lengthA > 10 * b2Settings_1.b2_linearSlop) {\r\n            this.m_uA.SelfMul(1 / lengthA);\r\n        }\r\n        else {\r\n            this.m_uA.SetZero();\r\n        }\r\n        if (lengthB > 10 * b2Settings_1.b2_linearSlop) {\r\n            this.m_uB.SelfMul(1 / lengthB);\r\n        }\r\n        else {\r\n            this.m_uB.SetZero();\r\n        }\r\n        // Compute effective mass.\r\n        var ruA = b2Math_1.b2Vec2.CrossVV(this.m_rA, this.m_uA);\r\n        var ruB = b2Math_1.b2Vec2.CrossVV(this.m_rB, this.m_uB);\r\n        var mA = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n        var mB = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n        this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\r\n        if (this.m_mass > 0) {\r\n            this.m_mass = 1 / this.m_mass;\r\n        }\r\n        if (data.step.warmStarting) {\r\n            // Scale impulses to support variable time steps.\r\n            this.m_impulse *= data.step.dtRatio;\r\n            // Warm starting.\r\n            // b2Vec2 PA = -(m_impulse) * m_uA;\r\n            var PA = b2Math_1.b2Vec2.MulSV(-(this.m_impulse), this.m_uA, b2PulleyJoint.InitVelocityConstraints_s_PA);\r\n            // b2Vec2 PB = (-m_ratio * m_impulse) * m_uB;\r\n            var PB = b2Math_1.b2Vec2.MulSV((-this.m_ratio * this.m_impulse), this.m_uB, b2PulleyJoint.InitVelocityConstraints_s_PB);\r\n            // vA += m_invMassA * PA;\r\n            vA.SelfMulAdd(this.m_invMassA, PA);\r\n            wA += this.m_invIA * b2Math_1.b2Vec2.CrossVV(this.m_rA, PA);\r\n            // vB += m_invMassB * PB;\r\n            vB.SelfMulAdd(this.m_invMassB, PB);\r\n            wB += this.m_invIB * b2Math_1.b2Vec2.CrossVV(this.m_rB, PB);\r\n        }\r\n        else {\r\n            this.m_impulse = 0;\r\n        }\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    };\r\n    b2PulleyJoint.prototype.SolveVelocityConstraints = function (data) {\r\n        var vA = data.velocities[this.m_indexA].v;\r\n        var wA = data.velocities[this.m_indexA].w;\r\n        var vB = data.velocities[this.m_indexB].v;\r\n        var wB = data.velocities[this.m_indexB].w;\r\n        // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n        var vpA = b2Math_1.b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2PulleyJoint.SolveVelocityConstraints_s_vpA);\r\n        // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n        var vpB = b2Math_1.b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2PulleyJoint.SolveVelocityConstraints_s_vpB);\r\n        var Cdot = -b2Math_1.b2Vec2.DotVV(this.m_uA, vpA) - this.m_ratio * b2Math_1.b2Vec2.DotVV(this.m_uB, vpB);\r\n        var impulse = -this.m_mass * Cdot;\r\n        this.m_impulse += impulse;\r\n        // b2Vec2 PA = -impulse * m_uA;\r\n        var PA = b2Math_1.b2Vec2.MulSV(-impulse, this.m_uA, b2PulleyJoint.SolveVelocityConstraints_s_PA);\r\n        // b2Vec2 PB = -m_ratio * impulse * m_uB;\r\n        var PB = b2Math_1.b2Vec2.MulSV(-this.m_ratio * impulse, this.m_uB, b2PulleyJoint.SolveVelocityConstraints_s_PB);\r\n        // vA += m_invMassA * PA;\r\n        vA.SelfMulAdd(this.m_invMassA, PA);\r\n        wA += this.m_invIA * b2Math_1.b2Vec2.CrossVV(this.m_rA, PA);\r\n        // vB += m_invMassB * PB;\r\n        vB.SelfMulAdd(this.m_invMassB, PB);\r\n        wB += this.m_invIB * b2Math_1.b2Vec2.CrossVV(this.m_rB, PB);\r\n        // data.velocities[this.m_indexA].v = vA;\r\n        data.velocities[this.m_indexA].w = wA;\r\n        // data.velocities[this.m_indexB].v = vB;\r\n        data.velocities[this.m_indexB].w = wB;\r\n    };\r\n    b2PulleyJoint.prototype.SolvePositionConstraints = function (data) {\r\n        var cA = data.positions[this.m_indexA].c;\r\n        var aA = data.positions[this.m_indexA].a;\r\n        var cB = data.positions[this.m_indexB].c;\r\n        var aB = data.positions[this.m_indexB].a;\r\n        // b2Rot qA(aA), qB(aB);\r\n        var qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n        // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n        b2Math_1.b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n        var rA = b2Math_1.b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n        // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n        b2Math_1.b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n        var rB = b2Math_1.b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n        // Get the pulley axes.\r\n        // b2Vec2 uA = cA + rA - m_groundAnchorA;\r\n        var uA = this.m_uA.Copy(cA).SelfAdd(rA).SelfSub(this.m_groundAnchorA);\r\n        // b2Vec2 uB = cB + rB - m_groundAnchorB;\r\n        var uB = this.m_uB.Copy(cB).SelfAdd(rB).SelfSub(this.m_groundAnchorB);\r\n        var lengthA = uA.Length();\r\n        var lengthB = uB.Length();\r\n        if (lengthA > 10 * b2Settings_1.b2_linearSlop) {\r\n            uA.SelfMul(1 / lengthA);\r\n        }\r\n        else {\r\n            uA.SetZero();\r\n        }\r\n        if (lengthB > 10 * b2Settings_1.b2_linearSlop) {\r\n            uB.SelfMul(1 / lengthB);\r\n        }\r\n        else {\r\n            uB.SetZero();\r\n        }\r\n        // Compute effective mass.\r\n        var ruA = b2Math_1.b2Vec2.CrossVV(rA, uA);\r\n        var ruB = b2Math_1.b2Vec2.CrossVV(rB, uB);\r\n        var mA = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n        var mB = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n        var mass = mA + this.m_ratio * this.m_ratio * mB;\r\n        if (mass > 0) {\r\n            mass = 1 / mass;\r\n        }\r\n        var C = this.m_constant - lengthA - this.m_ratio * lengthB;\r\n        var linearError = b2Math_1.b2Abs(C);\r\n        var impulse = -mass * C;\r\n        // b2Vec2 PA = -impulse * uA;\r\n        var PA = b2Math_1.b2Vec2.MulSV(-impulse, uA, b2PulleyJoint.SolvePositionConstraints_s_PA);\r\n        // b2Vec2 PB = -m_ratio * impulse * uB;\r\n        var PB = b2Math_1.b2Vec2.MulSV(-this.m_ratio * impulse, uB, b2PulleyJoint.SolvePositionConstraints_s_PB);\r\n        // cA += m_invMassA * PA;\r\n        cA.SelfMulAdd(this.m_invMassA, PA);\r\n        aA += this.m_invIA * b2Math_1.b2Vec2.CrossVV(rA, PA);\r\n        // cB += m_invMassB * PB;\r\n        cB.SelfMulAdd(this.m_invMassB, PB);\r\n        aB += this.m_invIB * b2Math_1.b2Vec2.CrossVV(rB, PB);\r\n        // data.positions[this.m_indexA].c = cA;\r\n        data.positions[this.m_indexA].a = aA;\r\n        // data.positions[this.m_indexB].c = cB;\r\n        data.positions[this.m_indexB].a = aB;\r\n        return linearError < b2Settings_1.b2_linearSlop;\r\n    };\r\n    b2PulleyJoint.prototype.GetAnchorA = function (out) {\r\n        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n    };\r\n    b2PulleyJoint.prototype.GetAnchorB = function (out) {\r\n        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n    };\r\n    b2PulleyJoint.prototype.GetReactionForce = function (inv_dt, out) {\r\n        // b2Vec2 P = m_impulse * m_uB;\r\n        // return inv_dt * P;\r\n        out.x = inv_dt * this.m_impulse * this.m_uB.x;\r\n        out.y = inv_dt * this.m_impulse * this.m_uB.y;\r\n        return out;\r\n    };\r\n    b2PulleyJoint.prototype.GetReactionTorque = function (inv_dt) {\r\n        return 0;\r\n    };\r\n    b2PulleyJoint.prototype.GetGroundAnchorA = function () {\r\n        return this.m_groundAnchorA;\r\n    };\r\n    b2PulleyJoint.prototype.GetGroundAnchorB = function () {\r\n        return this.m_groundAnchorB;\r\n    };\r\n    b2PulleyJoint.prototype.GetLengthA = function () {\r\n        return this.m_lengthA;\r\n    };\r\n    b2PulleyJoint.prototype.GetLengthB = function () {\r\n        return this.m_lengthB;\r\n    };\r\n    b2PulleyJoint.prototype.GetRatio = function () {\r\n        return this.m_ratio;\r\n    };\r\n    b2PulleyJoint.prototype.GetCurrentLengthA = function () {\r\n        // b2Vec2 p = m_bodyA->GetWorldPoint(m_localAnchorA);\r\n        // b2Vec2 s = m_groundAnchorA;\r\n        // b2Vec2 d = p - s;\r\n        // return d.Length();\r\n        var p = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PulleyJoint.GetCurrentLengthA_s_p);\r\n        var s = this.m_groundAnchorA;\r\n        return b2Math_1.b2Vec2.DistanceVV(p, s);\r\n    };\r\n    b2PulleyJoint.prototype.GetCurrentLengthB = function () {\r\n        // b2Vec2 p = m_bodyB->GetWorldPoint(m_localAnchorB);\r\n        // b2Vec2 s = m_groundAnchorB;\r\n        // b2Vec2 d = p - s;\r\n        // return d.Length();\r\n        var p = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PulleyJoint.GetCurrentLengthB_s_p);\r\n        var s = this.m_groundAnchorB;\r\n        return b2Math_1.b2Vec2.DistanceVV(p, s);\r\n    };\r\n    b2PulleyJoint.prototype.Dump = function (log) {\r\n        var indexA = this.m_bodyA.m_islandIndex;\r\n        var indexB = this.m_bodyB.m_islandIndex;\r\n        log(\"  const jd: b2PulleyJointDef = new b2PulleyJointDef();\\n\");\r\n        log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n        log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n        log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n        log(\"  jd.groundAnchorA.Set(%.15f, %.15f);\\n\", this.m_groundAnchorA.x, this.m_groundAnchorA.y);\r\n        log(\"  jd.groundAnchorB.Set(%.15f, %.15f);\\n\", this.m_groundAnchorB.x, this.m_groundAnchorB.y);\r\n        log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n        log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n        log(\"  jd.lengthA = %.15f;\\n\", this.m_lengthA);\r\n        log(\"  jd.lengthB = %.15f;\\n\", this.m_lengthB);\r\n        log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n        log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n    };\r\n    b2PulleyJoint.prototype.ShiftOrigin = function (newOrigin) {\r\n        this.m_groundAnchorA.SelfSub(newOrigin);\r\n        this.m_groundAnchorB.SelfSub(newOrigin);\r\n    };\r\n    b2PulleyJoint.InitVelocityConstraints_s_PA = new b2Math_1.b2Vec2();\r\n    b2PulleyJoint.InitVelocityConstraints_s_PB = new b2Math_1.b2Vec2();\r\n    b2PulleyJoint.SolveVelocityConstraints_s_vpA = new b2Math_1.b2Vec2();\r\n    b2PulleyJoint.SolveVelocityConstraints_s_vpB = new b2Math_1.b2Vec2();\r\n    b2PulleyJoint.SolveVelocityConstraints_s_PA = new b2Math_1.b2Vec2();\r\n    b2PulleyJoint.SolveVelocityConstraints_s_PB = new b2Math_1.b2Vec2();\r\n    b2PulleyJoint.SolvePositionConstraints_s_PA = new b2Math_1.b2Vec2();\r\n    b2PulleyJoint.SolvePositionConstraints_s_PB = new b2Math_1.b2Vec2();\r\n    b2PulleyJoint.GetCurrentLengthA_s_p = new b2Math_1.b2Vec2();\r\n    b2PulleyJoint.GetCurrentLengthB_s_p = new b2Math_1.b2Vec2();\r\n    return b2PulleyJoint;\r\n}(b2Joint_1.b2Joint));\r\nexports.b2PulleyJoint = b2PulleyJoint;\r\n"},"sourceMaps":{"js":{"version":3,"file":"b2PulleyJoint.js","sourceRoot":"","sources":["../node_modules/box2d.package.ts/Dynamics/Joints/b2PulleyJoint.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n\r\n// DEBUG: import { b2Assert, b2_epsilon } from \"../../Common/b2Settings\";\r\nimport { b2_linearSlop, b2Maybe } from \"../../Common/b2Settings\";\r\nimport { b2Abs, b2Vec2, b2Rot, XY } from \"../../Common/b2Math\";\r\nimport { b2Body } from \"../b2Body\";\r\nimport { b2Joint, b2JointDef, b2JointType, b2IJointDef } from \"./b2Joint\";\r\nimport { b2SolverData } from \"../b2TimeStep\";\r\n\r\nexport const b2_minPulleyLength: number = 2;\r\n\r\nexport interface b2IPulleyJointDef extends b2IJointDef {\r\n  groundAnchorA?: XY;\r\n\r\n  groundAnchorB?: XY;\r\n\r\n  localAnchorA?: XY;\r\n\r\n  localAnchorB?: XY;\r\n\r\n  lengthA?: number;\r\n\r\n  lengthB?: number;\r\n\r\n  ratio?: number;\r\n}\r\n\r\n/// Pulley joint definition. This requires two ground anchors,\r\n/// two dynamic body anchor points, and a pulley ratio.\r\nexport class b2PulleyJointDef extends b2JointDef implements b2IPulleyJointDef {\r\n  public readonly groundAnchorA: b2Vec2 = new b2Vec2(-1, 1);\r\n\r\n  public readonly groundAnchorB: b2Vec2 = new b2Vec2(1, 1);\r\n\r\n  public readonly localAnchorA: b2Vec2 = new b2Vec2(-1, 0);\r\n\r\n  public readonly localAnchorB: b2Vec2 = new b2Vec2(1, 0);\r\n\r\n  public lengthA: number = 0;\r\n\r\n  public lengthB: number = 0;\r\n\r\n  public ratio: number = 1;\r\n\r\n  constructor() {\r\n    super(b2JointType.e_pulleyJoint);\r\n    this.collideConnected = true;\r\n  }\r\n\r\n  public Initialize(bA: b2Body, bB: b2Body, groundA: b2Vec2, groundB: b2Vec2, anchorA: b2Vec2, anchorB: b2Vec2, r: number): void {\r\n    this.bodyA = bA;\r\n    this.bodyB = bB;\r\n    this.groundAnchorA.Copy(groundA);\r\n    this.groundAnchorB.Copy(groundB);\r\n    this.bodyA.GetLocalPoint(anchorA, this.localAnchorA);\r\n    this.bodyB.GetLocalPoint(anchorB, this.localAnchorB);\r\n    this.lengthA = b2Vec2.DistanceVV(anchorA, groundA);\r\n    this.lengthB = b2Vec2.DistanceVV(anchorB, groundB);\r\n    this.ratio = r;\r\n    // DEBUG: b2Assert(this.ratio > b2_epsilon);\r\n  }\r\n}\r\n\r\nexport class b2PulleyJoint extends b2Joint {\r\n  public readonly m_groundAnchorA: b2Vec2 = new b2Vec2();\r\n  public readonly m_groundAnchorB: b2Vec2 = new b2Vec2();\r\n\r\n  public m_lengthA: number = 0;\r\n  public m_lengthB: number = 0;\r\n\r\n  // Solver shared\r\n  public readonly m_localAnchorA: b2Vec2 = new b2Vec2();\r\n  public readonly m_localAnchorB: b2Vec2 = new b2Vec2();\r\n\r\n  public m_constant: number = 0;\r\n  public m_ratio: number = 0;\r\n  public m_impulse: number = 0;\r\n\r\n  // Solver temp\r\n  public m_indexA: number = 0;\r\n  public m_indexB: number = 0;\r\n  public readonly m_uA: b2Vec2 = new b2Vec2();\r\n  public readonly m_uB: b2Vec2 = new b2Vec2();\r\n  public readonly m_rA: b2Vec2 = new b2Vec2();\r\n  public readonly m_rB: b2Vec2 = new b2Vec2();\r\n  public readonly m_localCenterA: b2Vec2 = new b2Vec2();\r\n  public readonly m_localCenterB: b2Vec2 = new b2Vec2();\r\n\r\n  public m_invMassA: number = 0;\r\n  public m_invMassB: number = 0;\r\n  public m_invIA: number = 0;\r\n  public m_invIB: number = 0;\r\n  public m_mass: number = 0;\r\n\r\n  public readonly m_qA: b2Rot = new b2Rot();\r\n  public readonly m_qB: b2Rot = new b2Rot();\r\n  public readonly m_lalcA: b2Vec2 = new b2Vec2();\r\n  public readonly m_lalcB: b2Vec2 = new b2Vec2();\r\n\r\n  constructor(def: b2IPulleyJointDef) {\r\n    super(def);\r\n\r\n    this.m_groundAnchorA.Copy(b2Maybe(def.groundAnchorA, new b2Vec2(-1, 1)));\r\n    this.m_groundAnchorB.Copy(b2Maybe(def.groundAnchorB, new b2Vec2(1, 0)));\r\n    this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, new b2Vec2(-1, 0)));\r\n    this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, new b2Vec2(1, 0)));\r\n\r\n    this.m_lengthA = b2Maybe(def.lengthA, 0);\r\n    this.m_lengthB = b2Maybe(def.lengthB, 0);\r\n\r\n    // DEBUG: b2Assert(b2Maybe(def.ratio, 1) !== 0);\r\n    this.m_ratio = b2Maybe(def.ratio, 1);\r\n\r\n    this.m_constant = b2Maybe(def.lengthA, 0) + this.m_ratio * b2Maybe(def.lengthB, 0);\r\n\r\n    this.m_impulse = 0;\r\n  }\r\n\r\n  private static InitVelocityConstraints_s_PA = new b2Vec2();\r\n  private static InitVelocityConstraints_s_PB = new b2Vec2();\r\n  public InitVelocityConstraints(data: b2SolverData): void {\r\n    this.m_indexA = this.m_bodyA.m_islandIndex;\r\n    this.m_indexB = this.m_bodyB.m_islandIndex;\r\n    this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n    this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n    this.m_invMassA = this.m_bodyA.m_invMass;\r\n    this.m_invMassB = this.m_bodyB.m_invMass;\r\n    this.m_invIA = this.m_bodyA.m_invI;\r\n    this.m_invIB = this.m_bodyB.m_invI;\r\n\r\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\r\n    const aA: number = data.positions[this.m_indexA].a;\r\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\r\n    let wA: number = data.velocities[this.m_indexA].w;\r\n\r\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\r\n    const aB: number = data.positions[this.m_indexB].a;\r\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\r\n    let wB: number = data.velocities[this.m_indexB].w;\r\n\r\n    // b2Rot qA(aA), qB(aB);\r\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\r\n\r\n    // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n    b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n    b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n    // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n    b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n    b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n\r\n    // Get the pulley axes.\r\n    // m_uA = cA + m_rA - m_groundAnchorA;\r\n    this.m_uA.Copy(cA).SelfAdd(this.m_rA).SelfSub(this.m_groundAnchorA);\r\n    // m_uB = cB + m_rB - m_groundAnchorB;\r\n    this.m_uB.Copy(cB).SelfAdd(this.m_rB).SelfSub(this.m_groundAnchorB);\r\n\r\n    const lengthA: number = this.m_uA.Length();\r\n    const lengthB: number = this.m_uB.Length();\r\n\r\n    if (lengthA > 10 * b2_linearSlop) {\r\n      this.m_uA.SelfMul(1 / lengthA);\r\n    } else {\r\n      this.m_uA.SetZero();\r\n    }\r\n\r\n    if (lengthB > 10 * b2_linearSlop) {\r\n      this.m_uB.SelfMul(1 / lengthB);\r\n    } else {\r\n      this.m_uB.SetZero();\r\n    }\r\n\r\n    // Compute effective mass.\r\n    const ruA: number = b2Vec2.CrossVV(this.m_rA, this.m_uA);\r\n    const ruB: number = b2Vec2.CrossVV(this.m_rB, this.m_uB);\r\n\r\n    const mA: number = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n    const mB: number = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n\r\n    this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\r\n\r\n    if (this.m_mass > 0) {\r\n      this.m_mass = 1 / this.m_mass;\r\n    }\r\n\r\n    if (data.step.warmStarting) {\r\n      // Scale impulses to support variable time steps.\r\n      this.m_impulse *= data.step.dtRatio;\r\n\r\n      // Warm starting.\r\n      // b2Vec2 PA = -(m_impulse) * m_uA;\r\n      const PA: b2Vec2 = b2Vec2.MulSV(-(this.m_impulse), this.m_uA, b2PulleyJoint.InitVelocityConstraints_s_PA);\r\n      // b2Vec2 PB = (-m_ratio * m_impulse) * m_uB;\r\n      const PB: b2Vec2 = b2Vec2.MulSV((-this.m_ratio * this.m_impulse), this.m_uB, b2PulleyJoint.InitVelocityConstraints_s_PB);\r\n\r\n      // vA += m_invMassA * PA;\r\n      vA.SelfMulAdd(this.m_invMassA, PA);\r\n      wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\r\n      // vB += m_invMassB * PB;\r\n      vB.SelfMulAdd(this.m_invMassB, PB);\r\n      wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\r\n    } else {\r\n      this.m_impulse = 0;\r\n    }\r\n\r\n    // data.velocities[this.m_indexA].v = vA;\r\n    data.velocities[this.m_indexA].w = wA;\r\n    // data.velocities[this.m_indexB].v = vB;\r\n    data.velocities[this.m_indexB].w = wB;\r\n  }\r\n\r\n  private static SolveVelocityConstraints_s_vpA = new b2Vec2();\r\n  private static SolveVelocityConstraints_s_vpB = new b2Vec2();\r\n  private static SolveVelocityConstraints_s_PA = new b2Vec2();\r\n  private static SolveVelocityConstraints_s_PB = new b2Vec2();\r\n  public SolveVelocityConstraints(data: b2SolverData): void {\r\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\r\n    let wA: number = data.velocities[this.m_indexA].w;\r\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\r\n    let wB: number = data.velocities[this.m_indexB].w;\r\n\r\n    // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n    const vpA: b2Vec2 = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2PulleyJoint.SolveVelocityConstraints_s_vpA);\r\n    // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n    const vpB: b2Vec2 = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2PulleyJoint.SolveVelocityConstraints_s_vpB);\r\n\r\n    const Cdot: number = -b2Vec2.DotVV(this.m_uA, vpA) - this.m_ratio * b2Vec2.DotVV(this.m_uB, vpB);\r\n    const impulse: number = -this.m_mass * Cdot;\r\n    this.m_impulse += impulse;\r\n\r\n    // b2Vec2 PA = -impulse * m_uA;\r\n    const PA: b2Vec2 = b2Vec2.MulSV(-impulse, this.m_uA, b2PulleyJoint.SolveVelocityConstraints_s_PA);\r\n    // b2Vec2 PB = -m_ratio * impulse * m_uB;\r\n    const PB: b2Vec2 = b2Vec2.MulSV(-this.m_ratio * impulse, this.m_uB, b2PulleyJoint.SolveVelocityConstraints_s_PB);\r\n    // vA += m_invMassA * PA;\r\n    vA.SelfMulAdd(this.m_invMassA, PA);\r\n    wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\r\n    // vB += m_invMassB * PB;\r\n    vB.SelfMulAdd(this.m_invMassB, PB);\r\n    wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\r\n\r\n    // data.velocities[this.m_indexA].v = vA;\r\n    data.velocities[this.m_indexA].w = wA;\r\n    // data.velocities[this.m_indexB].v = vB;\r\n    data.velocities[this.m_indexB].w = wB;\r\n  }\r\n\r\n  private static SolvePositionConstraints_s_PA = new b2Vec2();\r\n  private static SolvePositionConstraints_s_PB = new b2Vec2();\r\n  public SolvePositionConstraints(data: b2SolverData): boolean {\r\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\r\n    let aA: number = data.positions[this.m_indexA].a;\r\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\r\n    let aB: number = data.positions[this.m_indexB].a;\r\n\r\n    // b2Rot qA(aA), qB(aB);\r\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\r\n\r\n    // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n    b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n    const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n    // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n    b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n    const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n\r\n    // Get the pulley axes.\r\n    // b2Vec2 uA = cA + rA - m_groundAnchorA;\r\n    const uA = this.m_uA.Copy(cA).SelfAdd(rA).SelfSub(this.m_groundAnchorA);\r\n    // b2Vec2 uB = cB + rB - m_groundAnchorB;\r\n    const uB = this.m_uB.Copy(cB).SelfAdd(rB).SelfSub(this.m_groundAnchorB);\r\n\r\n    const lengthA: number = uA.Length();\r\n    const lengthB: number = uB.Length();\r\n\r\n    if (lengthA > 10 * b2_linearSlop) {\r\n      uA.SelfMul(1 / lengthA);\r\n    } else {\r\n      uA.SetZero();\r\n    }\r\n\r\n    if (lengthB > 10 * b2_linearSlop) {\r\n      uB.SelfMul(1 / lengthB);\r\n    } else {\r\n      uB.SetZero();\r\n    }\r\n\r\n    // Compute effective mass.\r\n    const ruA: number = b2Vec2.CrossVV(rA, uA);\r\n    const ruB: number = b2Vec2.CrossVV(rB, uB);\r\n\r\n    const mA: number = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n    const mB: number = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n\r\n    let mass: number = mA + this.m_ratio * this.m_ratio * mB;\r\n\r\n    if (mass > 0) {\r\n      mass = 1 / mass;\r\n    }\r\n\r\n    const C: number = this.m_constant - lengthA - this.m_ratio * lengthB;\r\n    const linearError: number = b2Abs(C);\r\n\r\n    const impulse: number = -mass * C;\r\n\r\n    // b2Vec2 PA = -impulse * uA;\r\n    const PA: b2Vec2 = b2Vec2.MulSV(-impulse, uA, b2PulleyJoint.SolvePositionConstraints_s_PA);\r\n    // b2Vec2 PB = -m_ratio * impulse * uB;\r\n    const PB: b2Vec2 = b2Vec2.MulSV(-this.m_ratio * impulse, uB, b2PulleyJoint.SolvePositionConstraints_s_PB);\r\n\r\n    // cA += m_invMassA * PA;\r\n    cA.SelfMulAdd(this.m_invMassA, PA);\r\n    aA += this.m_invIA * b2Vec2.CrossVV(rA, PA);\r\n    // cB += m_invMassB * PB;\r\n    cB.SelfMulAdd(this.m_invMassB, PB);\r\n    aB += this.m_invIB * b2Vec2.CrossVV(rB, PB);\r\n\r\n    // data.positions[this.m_indexA].c = cA;\r\n    data.positions[this.m_indexA].a = aA;\r\n    // data.positions[this.m_indexB].c = cB;\r\n    data.positions[this.m_indexB].a = aB;\r\n\r\n    return linearError < b2_linearSlop;\r\n  }\r\n\r\n  public GetAnchorA<T extends XY>(out: T): T {\r\n    return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n  }\r\n\r\n  public GetAnchorB<T extends XY>(out: T): T {\r\n    return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n  }\r\n\r\n  public GetReactionForce<T extends XY>(inv_dt: number, out: T): T {\r\n    // b2Vec2 P = m_impulse * m_uB;\r\n    // return inv_dt * P;\r\n    out.x = inv_dt * this.m_impulse * this.m_uB.x;\r\n    out.y = inv_dt * this.m_impulse * this.m_uB.y;\r\n    return out;\r\n  }\r\n\r\n  public GetReactionTorque(inv_dt: number): number {\r\n    return 0;\r\n  }\r\n\r\n  public GetGroundAnchorA() {\r\n    return this.m_groundAnchorA;\r\n  }\r\n\r\n  public GetGroundAnchorB() {\r\n    return this.m_groundAnchorB;\r\n  }\r\n\r\n  public GetLengthA() {\r\n    return this.m_lengthA;\r\n  }\r\n\r\n  public GetLengthB() {\r\n    return this.m_lengthB;\r\n  }\r\n\r\n  public GetRatio() {\r\n    return this.m_ratio;\r\n  }\r\n\r\n  private static GetCurrentLengthA_s_p = new b2Vec2();\r\n  public GetCurrentLengthA() {\r\n    // b2Vec2 p = m_bodyA->GetWorldPoint(m_localAnchorA);\r\n    // b2Vec2 s = m_groundAnchorA;\r\n    // b2Vec2 d = p - s;\r\n    // return d.Length();\r\n    const p = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PulleyJoint.GetCurrentLengthA_s_p);\r\n    const s = this.m_groundAnchorA;\r\n    return b2Vec2.DistanceVV(p, s);\r\n  }\r\n\r\n  private static GetCurrentLengthB_s_p = new b2Vec2();\r\n  public GetCurrentLengthB() {\r\n    // b2Vec2 p = m_bodyB->GetWorldPoint(m_localAnchorB);\r\n    // b2Vec2 s = m_groundAnchorB;\r\n    // b2Vec2 d = p - s;\r\n    // return d.Length();\r\n    const p = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PulleyJoint.GetCurrentLengthB_s_p);\r\n    const s = this.m_groundAnchorB;\r\n    return b2Vec2.DistanceVV(p, s);\r\n  }\r\n\r\n  public Dump(log: (format: string, ...args: any[]) => void) {\r\n    const indexA = this.m_bodyA.m_islandIndex;\r\n    const indexB = this.m_bodyB.m_islandIndex;\r\n\r\n    log(\"  const jd: b2PulleyJointDef = new b2PulleyJointDef();\\n\");\r\n    log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n    log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n    log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n    log(\"  jd.groundAnchorA.Set(%.15f, %.15f);\\n\", this.m_groundAnchorA.x, this.m_groundAnchorA.y);\r\n    log(\"  jd.groundAnchorB.Set(%.15f, %.15f);\\n\", this.m_groundAnchorB.x, this.m_groundAnchorB.y);\r\n    log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n    log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n    log(\"  jd.lengthA = %.15f;\\n\", this.m_lengthA);\r\n    log(\"  jd.lengthB = %.15f;\\n\", this.m_lengthB);\r\n    log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n    log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n  }\r\n\r\n  public ShiftOrigin(newOrigin: b2Vec2) {\r\n    this.m_groundAnchorA.SelfSub(newOrigin);\r\n    this.m_groundAnchorB.SelfSub(newOrigin);\r\n  }\r\n}\r\n"]}},"error":null,"hash":"0bdf44ea8ba7a0e6b56cbe4b7f44196c","cacheData":{"env":{}}}