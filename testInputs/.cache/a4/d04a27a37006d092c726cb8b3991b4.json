{"id":"../node_modules/box2d.package.ts/Common/b2Math.ts","dependencies":[{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\package.json","includedInParent":true,"mtime":1586335198964},{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\.babelrc","includedInParent":true,"mtime":1586259187841},{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\package.json","includedInParent":true,"mtime":1586252018883},{"name":"./b2Settings","loc":{"line":21,"column":27},"parent":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Common\\b2Math.ts","resolved":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Common\\b2Settings.ts"}],"generated":{"js":"\"use strict\";\r\n/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nexports.__esModule = true;\r\n// DEBUG: import { b2Assert } from \"./b2Settings\";\r\nvar b2Settings_1 = require(\"./b2Settings\");\r\nexports.b2_pi_over_180 = b2Settings_1.b2_pi / 180;\r\nexports.b2_180_over_pi = 180 / b2Settings_1.b2_pi;\r\nexports.b2_two_pi = 2 * b2Settings_1.b2_pi;\r\nexports.b2Abs = Math.abs;\r\nfunction b2Min(a, b) { return a < b ? a : b; }\r\nexports.b2Min = b2Min;\r\nfunction b2Max(a, b) { return a > b ? a : b; }\r\nexports.b2Max = b2Max;\r\nfunction b2Clamp(a, lo, hi) {\r\n    return (a < lo) ? (lo) : ((a > hi) ? (hi) : (a));\r\n}\r\nexports.b2Clamp = b2Clamp;\r\nfunction b2Swap(a, b) {\r\n    // DEBUG: b2Assert(false);\r\n    var tmp = a[0];\r\n    a[0] = b[0];\r\n    b[0] = tmp;\r\n}\r\nexports.b2Swap = b2Swap;\r\n/// This function is used to ensure that a floating point number is\r\n/// not a NaN or infinity.\r\nexports.b2IsValid = isFinite;\r\nfunction b2Sq(n) {\r\n    return n * n;\r\n}\r\nexports.b2Sq = b2Sq;\r\n/// This is a approximate yet fast inverse square-root.\r\nfunction b2InvSqrt(n) {\r\n    return 1 / Math.sqrt(n);\r\n}\r\nexports.b2InvSqrt = b2InvSqrt;\r\nexports.b2Sqrt = Math.sqrt;\r\nexports.b2Pow = Math.pow;\r\nfunction b2DegToRad(degrees) {\r\n    return degrees * exports.b2_pi_over_180;\r\n}\r\nexports.b2DegToRad = b2DegToRad;\r\nfunction b2RadToDeg(radians) {\r\n    return radians * exports.b2_180_over_pi;\r\n}\r\nexports.b2RadToDeg = b2RadToDeg;\r\nexports.b2Cos = Math.cos;\r\nexports.b2Sin = Math.sin;\r\nexports.b2Acos = Math.acos;\r\nexports.b2Asin = Math.asin;\r\nexports.b2Atan2 = Math.atan2;\r\nfunction b2NextPowerOfTwo(x) {\r\n    x |= (x >> 1) & 0x7FFFFFFF;\r\n    x |= (x >> 2) & 0x3FFFFFFF;\r\n    x |= (x >> 4) & 0x0FFFFFFF;\r\n    x |= (x >> 8) & 0x00FFFFFF;\r\n    x |= (x >> 16) & 0x0000FFFF;\r\n    return x + 1;\r\n}\r\nexports.b2NextPowerOfTwo = b2NextPowerOfTwo;\r\nfunction b2IsPowerOfTwo(x) {\r\n    return x > 0 && (x & (x - 1)) === 0;\r\n}\r\nexports.b2IsPowerOfTwo = b2IsPowerOfTwo;\r\nfunction b2Random() {\r\n    return Math.random() * 2 - 1;\r\n}\r\nexports.b2Random = b2Random;\r\nfunction b2RandomRange(lo, hi) {\r\n    return (hi - lo) * Math.random() + lo;\r\n}\r\nexports.b2RandomRange = b2RandomRange;\r\n/// A 2D column vector.\r\nvar b2Vec2 = /** @class */ (function () {\r\n    function b2Vec2() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (args[0] instanceof Float32Array) {\r\n            if (args[0].length !== 2) {\r\n                throw new Error();\r\n            }\r\n            this.data = args[0];\r\n        }\r\n        else {\r\n            var x = typeof args[0] === \"number\" ? args[0] : 0;\r\n            var y = typeof args[1] === \"number\" ? args[1] : 0;\r\n            this.data = new Float32Array([x, y]);\r\n        }\r\n    }\r\n    Object.defineProperty(b2Vec2.prototype, \"x\", {\r\n        get: function () { return this.data[0]; },\r\n        set: function (value) { this.data[0] = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(b2Vec2.prototype, \"y\", {\r\n        get: function () { return this.data[1]; },\r\n        set: function (value) { this.data[1] = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    b2Vec2.prototype.Clone = function () {\r\n        return new b2Vec2(this.x, this.y);\r\n    };\r\n    b2Vec2.prototype.SetZero = function () {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.Set = function (x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.Copy = function (other) {\r\n        this.x = other.x;\r\n        this.y = other.y;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfAdd = function (v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfAddXY = function (x, y) {\r\n        this.x += x;\r\n        this.y += y;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfSub = function (v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfSubXY = function (x, y) {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfMul = function (s) {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfMulAdd = function (s, v) {\r\n        this.x += s * v.x;\r\n        this.y += s * v.y;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfMulSub = function (s, v) {\r\n        this.x -= s * v.x;\r\n        this.y -= s * v.y;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.Dot = function (v) {\r\n        return this.x * v.x + this.y * v.y;\r\n    };\r\n    b2Vec2.prototype.Cross = function (v) {\r\n        return this.x * v.y - this.y * v.x;\r\n    };\r\n    b2Vec2.prototype.Length = function () {\r\n        var x = this.x, y = this.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    };\r\n    b2Vec2.prototype.LengthSquared = function () {\r\n        var x = this.x, y = this.y;\r\n        return (x * x + y * y);\r\n    };\r\n    b2Vec2.prototype.Normalize = function () {\r\n        var length = this.Length();\r\n        if (length >= b2Settings_1.b2_epsilon) {\r\n            var inv_length = 1 / length;\r\n            this.x *= inv_length;\r\n            this.y *= inv_length;\r\n        }\r\n        return length;\r\n    };\r\n    b2Vec2.prototype.SelfNormalize = function () {\r\n        var length = this.Length();\r\n        if (length >= b2Settings_1.b2_epsilon) {\r\n            var inv_length = 1 / length;\r\n            this.x *= inv_length;\r\n            this.y *= inv_length;\r\n        }\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfRotate = function (radians) {\r\n        var c = Math.cos(radians);\r\n        var s = Math.sin(radians);\r\n        var x = this.x;\r\n        this.x = c * x - s * this.y;\r\n        this.y = s * x + c * this.y;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfRotateCosSin = function (c, s) {\r\n        var x = this.x;\r\n        this.x = c * x - s * this.y;\r\n        this.y = s * x + c * this.y;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.IsValid = function () {\r\n        return isFinite(this.x) && isFinite(this.y);\r\n    };\r\n    b2Vec2.prototype.SelfCrossVS = function (s) {\r\n        var x = this.x;\r\n        this.x = s * this.y;\r\n        this.y = -s * x;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfCrossSV = function (s) {\r\n        var x = this.x;\r\n        this.x = -s * this.y;\r\n        this.y = s * x;\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfMinV = function (v) {\r\n        this.x = b2Min(this.x, v.x);\r\n        this.y = b2Min(this.y, v.y);\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfMaxV = function (v) {\r\n        this.x = b2Max(this.x, v.x);\r\n        this.y = b2Max(this.y, v.y);\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfAbs = function () {\r\n        this.x = exports.b2Abs(this.x);\r\n        this.y = exports.b2Abs(this.y);\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfNeg = function () {\r\n        this.x = (-this.x);\r\n        this.y = (-this.y);\r\n        return this;\r\n    };\r\n    b2Vec2.prototype.SelfSkew = function () {\r\n        var x = this.x;\r\n        this.x = -this.y;\r\n        this.y = x;\r\n        return this;\r\n    };\r\n    b2Vec2.MakeArray = function (length) {\r\n        return b2Settings_1.b2MakeArray(length, function (i) { return new b2Vec2(); });\r\n    };\r\n    b2Vec2.AbsV = function (v, out) {\r\n        out.x = exports.b2Abs(v.x);\r\n        out.y = exports.b2Abs(v.y);\r\n        return out;\r\n    };\r\n    b2Vec2.MinV = function (a, b, out) {\r\n        out.x = b2Min(a.x, b.x);\r\n        out.y = b2Min(a.y, b.y);\r\n        return out;\r\n    };\r\n    b2Vec2.MaxV = function (a, b, out) {\r\n        out.x = b2Max(a.x, b.x);\r\n        out.y = b2Max(a.y, b.y);\r\n        return out;\r\n    };\r\n    b2Vec2.ClampV = function (v, lo, hi, out) {\r\n        out.x = b2Clamp(v.x, lo.x, hi.x);\r\n        out.y = b2Clamp(v.y, lo.y, hi.y);\r\n        return out;\r\n    };\r\n    b2Vec2.RotateV = function (v, radians, out) {\r\n        var v_x = v.x, v_y = v.y;\r\n        var c = Math.cos(radians);\r\n        var s = Math.sin(radians);\r\n        out.x = c * v_x - s * v_y;\r\n        out.y = s * v_x + c * v_y;\r\n        return out;\r\n    };\r\n    b2Vec2.DotVV = function (a, b) {\r\n        return a.x * b.x + a.y * b.y;\r\n    };\r\n    b2Vec2.CrossVV = function (a, b) {\r\n        return a.x * b.y - a.y * b.x;\r\n    };\r\n    b2Vec2.CrossVS = function (v, s, out) {\r\n        var v_x = v.x;\r\n        out.x = s * v.y;\r\n        out.y = -s * v_x;\r\n        return out;\r\n    };\r\n    b2Vec2.CrossVOne = function (v, out) {\r\n        var v_x = v.x;\r\n        out.x = v.y;\r\n        out.y = -v_x;\r\n        return out;\r\n    };\r\n    b2Vec2.CrossSV = function (s, v, out) {\r\n        var v_x = v.x;\r\n        out.x = -s * v.y;\r\n        out.y = s * v_x;\r\n        return out;\r\n    };\r\n    b2Vec2.CrossOneV = function (v, out) {\r\n        var v_x = v.x;\r\n        out.x = -v.y;\r\n        out.y = v_x;\r\n        return out;\r\n    };\r\n    b2Vec2.AddVV = function (a, b, out) { out.x = a.x + b.x; out.y = a.y + b.y; return out; };\r\n    b2Vec2.SubVV = function (a, b, out) { out.x = a.x - b.x; out.y = a.y - b.y; return out; };\r\n    b2Vec2.MulSV = function (s, v, out) { out.x = v.x * s; out.y = v.y * s; return out; };\r\n    b2Vec2.MulVS = function (v, s, out) { out.x = v.x * s; out.y = v.y * s; return out; };\r\n    b2Vec2.AddVMulSV = function (a, s, b, out) { out.x = a.x + (s * b.x); out.y = a.y + (s * b.y); return out; };\r\n    b2Vec2.SubVMulSV = function (a, s, b, out) { out.x = a.x - (s * b.x); out.y = a.y - (s * b.y); return out; };\r\n    b2Vec2.AddVCrossSV = function (a, s, v, out) {\r\n        var v_x = v.x;\r\n        out.x = a.x - (s * v.y);\r\n        out.y = a.y + (s * v_x);\r\n        return out;\r\n    };\r\n    b2Vec2.MidVV = function (a, b, out) { out.x = (a.x + b.x) * 0.5; out.y = (a.y + b.y) * 0.5; return out; };\r\n    b2Vec2.ExtVV = function (a, b, out) { out.x = (b.x - a.x) * 0.5; out.y = (b.y - a.y) * 0.5; return out; };\r\n    b2Vec2.IsEqualToV = function (a, b) {\r\n        return a.x === b.x && a.y === b.y;\r\n    };\r\n    b2Vec2.DistanceVV = function (a, b) {\r\n        var c_x = a.x - b.x;\r\n        var c_y = a.y - b.y;\r\n        return Math.sqrt(c_x * c_x + c_y * c_y);\r\n    };\r\n    b2Vec2.DistanceSquaredVV = function (a, b) {\r\n        var c_x = a.x - b.x;\r\n        var c_y = a.y - b.y;\r\n        return (c_x * c_x + c_y * c_y);\r\n    };\r\n    b2Vec2.NegV = function (v, out) { out.x = -v.x; out.y = -v.y; return out; };\r\n    b2Vec2.ZERO = new b2Vec2(0, 0);\r\n    b2Vec2.UNITX = new b2Vec2(1, 0);\r\n    b2Vec2.UNITY = new b2Vec2(0, 1);\r\n    b2Vec2.s_t0 = new b2Vec2();\r\n    b2Vec2.s_t1 = new b2Vec2();\r\n    b2Vec2.s_t2 = new b2Vec2();\r\n    b2Vec2.s_t3 = new b2Vec2();\r\n    return b2Vec2;\r\n}());\r\nexports.b2Vec2 = b2Vec2;\r\nexports.b2Vec2_zero = new b2Vec2(0, 0);\r\n/// A 2D column vector with 3 elements.\r\nvar b2Vec3 = /** @class */ (function () {\r\n    function b2Vec3() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (args[0] instanceof Float32Array) {\r\n            if (args[0].length !== 3) {\r\n                throw new Error();\r\n            }\r\n            this.data = args[0];\r\n        }\r\n        else {\r\n            var x = typeof args[0] === \"number\" ? args[0] : 0;\r\n            var y = typeof args[1] === \"number\" ? args[1] : 0;\r\n            var z = typeof args[2] === \"number\" ? args[2] : 0;\r\n            this.data = new Float32Array([x, y, z]);\r\n        }\r\n    }\r\n    Object.defineProperty(b2Vec3.prototype, \"x\", {\r\n        get: function () { return this.data[0]; },\r\n        set: function (value) { this.data[0] = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(b2Vec3.prototype, \"y\", {\r\n        get: function () { return this.data[1]; },\r\n        set: function (value) { this.data[1] = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(b2Vec3.prototype, \"z\", {\r\n        get: function () { return this.data[2]; },\r\n        set: function (value) { this.data[2] = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    b2Vec3.prototype.Clone = function () {\r\n        return new b2Vec3(this.x, this.y, this.z);\r\n    };\r\n    b2Vec3.prototype.SetZero = function () {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        return this;\r\n    };\r\n    b2Vec3.prototype.SetXYZ = function (x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    };\r\n    b2Vec3.prototype.Copy = function (other) {\r\n        this.x = other.x;\r\n        this.y = other.y;\r\n        this.z = other.z;\r\n        return this;\r\n    };\r\n    b2Vec3.prototype.SelfNeg = function () {\r\n        this.x = (-this.x);\r\n        this.y = (-this.y);\r\n        this.z = (-this.z);\r\n        return this;\r\n    };\r\n    b2Vec3.prototype.SelfAdd = function (v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n        return this;\r\n    };\r\n    b2Vec3.prototype.SelfAddXYZ = function (x, y, z) {\r\n        this.x += x;\r\n        this.y += y;\r\n        this.z += z;\r\n        return this;\r\n    };\r\n    b2Vec3.prototype.SelfSub = function (v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        this.z -= v.z;\r\n        return this;\r\n    };\r\n    b2Vec3.prototype.SelfSubXYZ = function (x, y, z) {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        this.z -= z;\r\n        return this;\r\n    };\r\n    b2Vec3.prototype.SelfMul = function (s) {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        this.z *= s;\r\n        return this;\r\n    };\r\n    b2Vec3.DotV3V3 = function (a, b) {\r\n        return a.x * b.x + a.y * b.y + a.z * b.z;\r\n    };\r\n    b2Vec3.CrossV3V3 = function (a, b, out) {\r\n        var a_x = a.x, a_y = a.y, a_z = a.z;\r\n        var b_x = b.x, b_y = b.y, b_z = b.z;\r\n        out.x = a_y * b_z - a_z * b_y;\r\n        out.y = a_z * b_x - a_x * b_z;\r\n        out.z = a_x * b_y - a_y * b_x;\r\n        return out;\r\n    };\r\n    b2Vec3.ZERO = new b2Vec3(0, 0, 0);\r\n    b2Vec3.s_t0 = new b2Vec3();\r\n    return b2Vec3;\r\n}());\r\nexports.b2Vec3 = b2Vec3;\r\n/// A 2-by-2 matrix. Stored in column-major order.\r\nvar b2Mat22 = /** @class */ (function () {\r\n    function b2Mat22() {\r\n        this.data = new Float32Array([1, 0, 0, 1]);\r\n        this.ex = new b2Vec2(this.data.subarray(0, 2));\r\n        this.ey = new b2Vec2(this.data.subarray(2, 4));\r\n    }\r\n    b2Mat22.prototype.Clone = function () {\r\n        return new b2Mat22().Copy(this);\r\n    };\r\n    b2Mat22.FromVV = function (c1, c2) {\r\n        return new b2Mat22().SetVV(c1, c2);\r\n    };\r\n    b2Mat22.FromSSSS = function (r1c1, r1c2, r2c1, r2c2) {\r\n        return new b2Mat22().SetSSSS(r1c1, r1c2, r2c1, r2c2);\r\n    };\r\n    b2Mat22.FromAngle = function (radians) {\r\n        return new b2Mat22().SetAngle(radians);\r\n    };\r\n    b2Mat22.prototype.SetSSSS = function (r1c1, r1c2, r2c1, r2c2) {\r\n        this.ex.Set(r1c1, r2c1);\r\n        this.ey.Set(r1c2, r2c2);\r\n        return this;\r\n    };\r\n    b2Mat22.prototype.SetVV = function (c1, c2) {\r\n        this.ex.Copy(c1);\r\n        this.ey.Copy(c2);\r\n        return this;\r\n    };\r\n    b2Mat22.prototype.SetAngle = function (radians) {\r\n        var c = Math.cos(radians);\r\n        var s = Math.sin(radians);\r\n        this.ex.Set(c, s);\r\n        this.ey.Set(-s, c);\r\n        return this;\r\n    };\r\n    b2Mat22.prototype.Copy = function (other) {\r\n        this.ex.Copy(other.ex);\r\n        this.ey.Copy(other.ey);\r\n        return this;\r\n    };\r\n    b2Mat22.prototype.SetIdentity = function () {\r\n        this.ex.Set(1, 0);\r\n        this.ey.Set(0, 1);\r\n        return this;\r\n    };\r\n    b2Mat22.prototype.SetZero = function () {\r\n        this.ex.SetZero();\r\n        this.ey.SetZero();\r\n        return this;\r\n    };\r\n    b2Mat22.prototype.GetAngle = function () {\r\n        return Math.atan2(this.ex.y, this.ex.x);\r\n    };\r\n    b2Mat22.prototype.GetInverse = function (out) {\r\n        var a = this.ex.x;\r\n        var b = this.ey.x;\r\n        var c = this.ex.y;\r\n        var d = this.ey.y;\r\n        var det = a * d - b * c;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.ex.x = det * d;\r\n        out.ey.x = (-det * b);\r\n        out.ex.y = (-det * c);\r\n        out.ey.y = det * a;\r\n        return out;\r\n    };\r\n    b2Mat22.prototype.Solve = function (b_x, b_y, out) {\r\n        var a11 = this.ex.x, a12 = this.ey.x;\r\n        var a21 = this.ex.y, a22 = this.ey.y;\r\n        var det = a11 * a22 - a12 * a21;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (a22 * b_x - a12 * b_y);\r\n        out.y = det * (a11 * b_y - a21 * b_x);\r\n        return out;\r\n    };\r\n    b2Mat22.prototype.SelfAbs = function () {\r\n        this.ex.SelfAbs();\r\n        this.ey.SelfAbs();\r\n        return this;\r\n    };\r\n    b2Mat22.prototype.SelfInv = function () {\r\n        this.GetInverse(this);\r\n        return this;\r\n    };\r\n    b2Mat22.prototype.SelfAddM = function (M) {\r\n        this.ex.SelfAdd(M.ex);\r\n        this.ey.SelfAdd(M.ey);\r\n        return this;\r\n    };\r\n    b2Mat22.prototype.SelfSubM = function (M) {\r\n        this.ex.SelfSub(M.ex);\r\n        this.ey.SelfSub(M.ey);\r\n        return this;\r\n    };\r\n    b2Mat22.AbsM = function (M, out) {\r\n        var M_ex = M.ex, M_ey = M.ey;\r\n        out.ex.x = exports.b2Abs(M_ex.x);\r\n        out.ex.y = exports.b2Abs(M_ex.y);\r\n        out.ey.x = exports.b2Abs(M_ey.x);\r\n        out.ey.y = exports.b2Abs(M_ey.y);\r\n        return out;\r\n    };\r\n    b2Mat22.MulMV = function (M, v, out) {\r\n        var M_ex = M.ex, M_ey = M.ey;\r\n        var v_x = v.x, v_y = v.y;\r\n        out.x = M_ex.x * v_x + M_ey.x * v_y;\r\n        out.y = M_ex.y * v_x + M_ey.y * v_y;\r\n        return out;\r\n    };\r\n    b2Mat22.MulTMV = function (M, v, out) {\r\n        var M_ex = M.ex, M_ey = M.ey;\r\n        var v_x = v.x, v_y = v.y;\r\n        out.x = M_ex.x * v_x + M_ex.y * v_y;\r\n        out.y = M_ey.x * v_x + M_ey.y * v_y;\r\n        return out;\r\n    };\r\n    b2Mat22.AddMM = function (A, B, out) {\r\n        var A_ex = A.ex, A_ey = A.ey;\r\n        var B_ex = B.ex, B_ey = B.ey;\r\n        out.ex.x = A_ex.x + B_ex.x;\r\n        out.ex.y = A_ex.y + B_ex.y;\r\n        out.ey.x = A_ey.x + B_ey.x;\r\n        out.ey.y = A_ey.y + B_ey.y;\r\n        return out;\r\n    };\r\n    b2Mat22.MulMM = function (A, B, out) {\r\n        var A_ex_x = A.ex.x, A_ex_y = A.ex.y;\r\n        var A_ey_x = A.ey.x, A_ey_y = A.ey.y;\r\n        var B_ex_x = B.ex.x, B_ex_y = B.ex.y;\r\n        var B_ey_x = B.ey.x, B_ey_y = B.ey.y;\r\n        out.ex.x = A_ex_x * B_ex_x + A_ey_x * B_ex_y;\r\n        out.ex.y = A_ex_y * B_ex_x + A_ey_y * B_ex_y;\r\n        out.ey.x = A_ex_x * B_ey_x + A_ey_x * B_ey_y;\r\n        out.ey.y = A_ex_y * B_ey_x + A_ey_y * B_ey_y;\r\n        return out;\r\n    };\r\n    b2Mat22.MulTMM = function (A, B, out) {\r\n        var A_ex_x = A.ex.x, A_ex_y = A.ex.y;\r\n        var A_ey_x = A.ey.x, A_ey_y = A.ey.y;\r\n        var B_ex_x = B.ex.x, B_ex_y = B.ex.y;\r\n        var B_ey_x = B.ey.x, B_ey_y = B.ey.y;\r\n        out.ex.x = A_ex_x * B_ex_x + A_ex_y * B_ex_y;\r\n        out.ex.y = A_ey_x * B_ex_x + A_ey_y * B_ex_y;\r\n        out.ey.x = A_ex_x * B_ey_x + A_ex_y * B_ey_y;\r\n        out.ey.y = A_ey_x * B_ey_x + A_ey_y * B_ey_y;\r\n        return out;\r\n    };\r\n    b2Mat22.IDENTITY = new b2Mat22();\r\n    return b2Mat22;\r\n}());\r\nexports.b2Mat22 = b2Mat22;\r\n/// A 3-by-3 matrix. Stored in column-major order.\r\nvar b2Mat33 = /** @class */ (function () {\r\n    function b2Mat33() {\r\n        this.data = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\r\n        this.ex = new b2Vec3(this.data.subarray(0, 3));\r\n        this.ey = new b2Vec3(this.data.subarray(3, 6));\r\n        this.ez = new b2Vec3(this.data.subarray(6, 9));\r\n    }\r\n    b2Mat33.prototype.Clone = function () {\r\n        return new b2Mat33().Copy(this);\r\n    };\r\n    b2Mat33.prototype.SetVVV = function (c1, c2, c3) {\r\n        this.ex.Copy(c1);\r\n        this.ey.Copy(c2);\r\n        this.ez.Copy(c3);\r\n        return this;\r\n    };\r\n    b2Mat33.prototype.Copy = function (other) {\r\n        this.ex.Copy(other.ex);\r\n        this.ey.Copy(other.ey);\r\n        this.ez.Copy(other.ez);\r\n        return this;\r\n    };\r\n    b2Mat33.prototype.SetIdentity = function () {\r\n        this.ex.SetXYZ(1, 0, 0);\r\n        this.ey.SetXYZ(0, 1, 0);\r\n        this.ez.SetXYZ(0, 0, 1);\r\n        return this;\r\n    };\r\n    b2Mat33.prototype.SetZero = function () {\r\n        this.ex.SetZero();\r\n        this.ey.SetZero();\r\n        this.ez.SetZero();\r\n        return this;\r\n    };\r\n    b2Mat33.prototype.SelfAddM = function (M) {\r\n        this.ex.SelfAdd(M.ex);\r\n        this.ey.SelfAdd(M.ey);\r\n        this.ez.SelfAdd(M.ez);\r\n        return this;\r\n    };\r\n    b2Mat33.prototype.Solve33 = function (b_x, b_y, b_z, out) {\r\n        var a11 = this.ex.x, a21 = this.ex.y, a31 = this.ex.z;\r\n        var a12 = this.ey.x, a22 = this.ey.y, a32 = this.ey.z;\r\n        var a13 = this.ez.x, a23 = this.ez.y, a33 = this.ez.z;\r\n        var det = a11 * (a22 * a33 - a32 * a23) + a21 * (a32 * a13 - a12 * a33) + a31 * (a12 * a23 - a22 * a13);\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (b_x * (a22 * a33 - a32 * a23) + b_y * (a32 * a13 - a12 * a33) + b_z * (a12 * a23 - a22 * a13));\r\n        out.y = det * (a11 * (b_y * a33 - b_z * a23) + a21 * (b_z * a13 - b_x * a33) + a31 * (b_x * a23 - b_y * a13));\r\n        out.z = det * (a11 * (a22 * b_z - a32 * b_y) + a21 * (a32 * b_x - a12 * b_z) + a31 * (a12 * b_y - a22 * b_x));\r\n        return out;\r\n    };\r\n    b2Mat33.prototype.Solve22 = function (b_x, b_y, out) {\r\n        var a11 = this.ex.x, a12 = this.ey.x;\r\n        var a21 = this.ex.y, a22 = this.ey.y;\r\n        var det = a11 * a22 - a12 * a21;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        out.x = det * (a22 * b_x - a12 * b_y);\r\n        out.y = det * (a11 * b_y - a21 * b_x);\r\n        return out;\r\n    };\r\n    b2Mat33.prototype.GetInverse22 = function (M) {\r\n        var a = this.ex.x, b = this.ey.x, c = this.ex.y, d = this.ey.y;\r\n        var det = a * d - b * c;\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        M.ex.x = det * d;\r\n        M.ey.x = -det * b;\r\n        M.ex.z = 0;\r\n        M.ex.y = -det * c;\r\n        M.ey.y = det * a;\r\n        M.ey.z = 0;\r\n        M.ez.x = 0;\r\n        M.ez.y = 0;\r\n        M.ez.z = 0;\r\n    };\r\n    b2Mat33.prototype.GetSymInverse33 = function (M) {\r\n        var det = b2Vec3.DotV3V3(this.ex, b2Vec3.CrossV3V3(this.ey, this.ez, b2Vec3.s_t0));\r\n        if (det !== 0) {\r\n            det = 1 / det;\r\n        }\r\n        var a11 = this.ex.x, a12 = this.ey.x, a13 = this.ez.x;\r\n        var a22 = this.ey.y, a23 = this.ez.y;\r\n        var a33 = this.ez.z;\r\n        M.ex.x = det * (a22 * a33 - a23 * a23);\r\n        M.ex.y = det * (a13 * a23 - a12 * a33);\r\n        M.ex.z = det * (a12 * a23 - a13 * a22);\r\n        M.ey.x = M.ex.y;\r\n        M.ey.y = det * (a11 * a33 - a13 * a13);\r\n        M.ey.z = det * (a13 * a12 - a11 * a23);\r\n        M.ez.x = M.ex.z;\r\n        M.ez.y = M.ey.z;\r\n        M.ez.z = det * (a11 * a22 - a12 * a12);\r\n    };\r\n    b2Mat33.MulM33V3 = function (A, v, out) {\r\n        var v_x = v.x, v_y = v.y, v_z = v.z;\r\n        out.x = A.ex.x * v_x + A.ey.x * v_y + A.ez.x * v_z;\r\n        out.y = A.ex.y * v_x + A.ey.y * v_y + A.ez.y * v_z;\r\n        out.z = A.ex.z * v_x + A.ey.z * v_y + A.ez.z * v_z;\r\n        return out;\r\n    };\r\n    b2Mat33.MulM33XYZ = function (A, x, y, z, out) {\r\n        out.x = A.ex.x * x + A.ey.x * y + A.ez.x * z;\r\n        out.y = A.ex.y * x + A.ey.y * y + A.ez.y * z;\r\n        out.z = A.ex.z * x + A.ey.z * y + A.ez.z * z;\r\n        return out;\r\n    };\r\n    b2Mat33.MulM33V2 = function (A, v, out) {\r\n        var v_x = v.x, v_y = v.y;\r\n        out.x = A.ex.x * v_x + A.ey.x * v_y;\r\n        out.y = A.ex.y * v_x + A.ey.y * v_y;\r\n        return out;\r\n    };\r\n    b2Mat33.MulM33XY = function (A, x, y, out) {\r\n        out.x = A.ex.x * x + A.ey.x * y;\r\n        out.y = A.ex.y * x + A.ey.y * y;\r\n        return out;\r\n    };\r\n    b2Mat33.IDENTITY = new b2Mat33();\r\n    return b2Mat33;\r\n}());\r\nexports.b2Mat33 = b2Mat33;\r\n/// Rotation\r\nvar b2Rot = /** @class */ (function () {\r\n    function b2Rot(angle) {\r\n        if (angle === void 0) { angle = 0; }\r\n        this.s = 0;\r\n        this.c = 1;\r\n        if (angle) {\r\n            this.s = Math.sin(angle);\r\n            this.c = Math.cos(angle);\r\n        }\r\n    }\r\n    b2Rot.prototype.Clone = function () {\r\n        return new b2Rot().Copy(this);\r\n    };\r\n    b2Rot.prototype.Copy = function (other) {\r\n        this.s = other.s;\r\n        this.c = other.c;\r\n        return this;\r\n    };\r\n    b2Rot.prototype.SetAngle = function (angle) {\r\n        this.s = Math.sin(angle);\r\n        this.c = Math.cos(angle);\r\n        return this;\r\n    };\r\n    b2Rot.prototype.SetIdentity = function () {\r\n        this.s = 0;\r\n        this.c = 1;\r\n        return this;\r\n    };\r\n    b2Rot.prototype.GetAngle = function () {\r\n        return Math.atan2(this.s, this.c);\r\n    };\r\n    b2Rot.prototype.GetXAxis = function (out) {\r\n        out.x = this.c;\r\n        out.y = this.s;\r\n        return out;\r\n    };\r\n    b2Rot.prototype.GetYAxis = function (out) {\r\n        out.x = -this.s;\r\n        out.y = this.c;\r\n        return out;\r\n    };\r\n    b2Rot.MulRR = function (q, r, out) {\r\n        // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\r\n        // [qs  qc]   [rs  rc]   [qs*rc+qc*rs -qs*rs+qc*rc]\r\n        // s = qs * rc + qc * rs\r\n        // c = qc * rc - qs * rs\r\n        var q_c = q.c, q_s = q.s;\r\n        var r_c = r.c, r_s = r.s;\r\n        out.s = q_s * r_c + q_c * r_s;\r\n        out.c = q_c * r_c - q_s * r_s;\r\n        return out;\r\n    };\r\n    b2Rot.MulTRR = function (q, r, out) {\r\n        // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\r\n        // [-qs qc]   [rs  rc]   [-qs*rc+qc*rs qs*rs+qc*rc]\r\n        // s = qc * rs - qs * rc\r\n        // c = qc * rc + qs * rs\r\n        var q_c = q.c, q_s = q.s;\r\n        var r_c = r.c, r_s = r.s;\r\n        out.s = q_c * r_s - q_s * r_c;\r\n        out.c = q_c * r_c + q_s * r_s;\r\n        return out;\r\n    };\r\n    b2Rot.MulRV = function (q, v, out) {\r\n        var q_c = q.c, q_s = q.s;\r\n        var v_x = v.x, v_y = v.y;\r\n        out.x = q_c * v_x - q_s * v_y;\r\n        out.y = q_s * v_x + q_c * v_y;\r\n        return out;\r\n    };\r\n    b2Rot.MulTRV = function (q, v, out) {\r\n        var q_c = q.c, q_s = q.s;\r\n        var v_x = v.x, v_y = v.y;\r\n        out.x = q_c * v_x + q_s * v_y;\r\n        out.y = -q_s * v_x + q_c * v_y;\r\n        return out;\r\n    };\r\n    b2Rot.IDENTITY = new b2Rot();\r\n    return b2Rot;\r\n}());\r\nexports.b2Rot = b2Rot;\r\n/// A transform contains translation and rotation. It is used to represent\r\n/// the position and orientation of rigid frames.\r\nvar b2Transform = /** @class */ (function () {\r\n    function b2Transform() {\r\n        this.p = new b2Vec2();\r\n        this.q = new b2Rot();\r\n    }\r\n    b2Transform.prototype.Clone = function () {\r\n        return new b2Transform().Copy(this);\r\n    };\r\n    b2Transform.prototype.Copy = function (other) {\r\n        this.p.Copy(other.p);\r\n        this.q.Copy(other.q);\r\n        return this;\r\n    };\r\n    b2Transform.prototype.SetIdentity = function () {\r\n        this.p.SetZero();\r\n        this.q.SetIdentity();\r\n        return this;\r\n    };\r\n    b2Transform.prototype.SetPositionRotation = function (position, q) {\r\n        this.p.Copy(position);\r\n        this.q.Copy(q);\r\n        return this;\r\n    };\r\n    b2Transform.prototype.SetPositionAngle = function (pos, a) {\r\n        this.p.Copy(pos);\r\n        this.q.SetAngle(a);\r\n        return this;\r\n    };\r\n    b2Transform.prototype.SetPosition = function (position) {\r\n        this.p.Copy(position);\r\n        return this;\r\n    };\r\n    b2Transform.prototype.SetPositionXY = function (x, y) {\r\n        this.p.Set(x, y);\r\n        return this;\r\n    };\r\n    b2Transform.prototype.SetRotation = function (rotation) {\r\n        this.q.Copy(rotation);\r\n        return this;\r\n    };\r\n    b2Transform.prototype.SetRotationAngle = function (radians) {\r\n        this.q.SetAngle(radians);\r\n        return this;\r\n    };\r\n    b2Transform.prototype.GetPosition = function () {\r\n        return this.p;\r\n    };\r\n    b2Transform.prototype.GetRotation = function () {\r\n        return this.q;\r\n    };\r\n    b2Transform.prototype.GetRotationAngle = function () {\r\n        return this.q.GetAngle();\r\n    };\r\n    b2Transform.prototype.GetAngle = function () {\r\n        return this.q.GetAngle();\r\n    };\r\n    b2Transform.MulXV = function (T, v, out) {\r\n        // float32 x = (T.q.c * v.x - T.q.s * v.y) + T.p.x;\r\n        // float32 y = (T.q.s * v.x + T.q.c * v.y) + T.p.y;\r\n        // return b2Vec2(x, y);\r\n        var T_q_c = T.q.c, T_q_s = T.q.s;\r\n        var v_x = v.x, v_y = v.y;\r\n        out.x = (T_q_c * v_x - T_q_s * v_y) + T.p.x;\r\n        out.y = (T_q_s * v_x + T_q_c * v_y) + T.p.y;\r\n        return out;\r\n    };\r\n    b2Transform.MulTXV = function (T, v, out) {\r\n        // float32 px = v.x - T.p.x;\r\n        // float32 py = v.y - T.p.y;\r\n        // float32 x = (T.q.c * px + T.q.s * py);\r\n        // float32 y = (-T.q.s * px + T.q.c * py);\r\n        // return b2Vec2(x, y);\r\n        var T_q_c = T.q.c, T_q_s = T.q.s;\r\n        var p_x = v.x - T.p.x;\r\n        var p_y = v.y - T.p.y;\r\n        out.x = (T_q_c * p_x + T_q_s * p_y);\r\n        out.y = (-T_q_s * p_x + T_q_c * p_y);\r\n        return out;\r\n    };\r\n    b2Transform.MulXX = function (A, B, out) {\r\n        b2Rot.MulRR(A.q, B.q, out.q);\r\n        b2Vec2.AddVV(b2Rot.MulRV(A.q, B.p, out.p), A.p, out.p);\r\n        return out;\r\n    };\r\n    b2Transform.MulTXX = function (A, B, out) {\r\n        b2Rot.MulTRR(A.q, B.q, out.q);\r\n        b2Rot.MulTRV(A.q, b2Vec2.SubVV(B.p, A.p, out.p), out.p);\r\n        return out;\r\n    };\r\n    b2Transform.IDENTITY = new b2Transform();\r\n    return b2Transform;\r\n}());\r\nexports.b2Transform = b2Transform;\r\n/// This describes the motion of a body/shape for TOI computation.\r\n/// Shapes are defined with respect to the body origin, which may\r\n/// no coincide with the center of mass. However, to support dynamics\r\n/// we must interpolate the center of mass position.\r\nvar b2Sweep = /** @class */ (function () {\r\n    function b2Sweep() {\r\n        this.localCenter = new b2Vec2();\r\n        this.c0 = new b2Vec2();\r\n        this.c = new b2Vec2();\r\n        this.a0 = 0;\r\n        this.a = 0;\r\n        this.alpha0 = 0;\r\n    }\r\n    b2Sweep.prototype.Clone = function () {\r\n        return new b2Sweep().Copy(this);\r\n    };\r\n    b2Sweep.prototype.Copy = function (other) {\r\n        this.localCenter.Copy(other.localCenter);\r\n        this.c0.Copy(other.c0);\r\n        this.c.Copy(other.c);\r\n        this.a0 = other.a0;\r\n        this.a = other.a;\r\n        this.alpha0 = other.alpha0;\r\n        return this;\r\n    };\r\n    b2Sweep.prototype.GetTransform = function (xf, beta) {\r\n        var one_minus_beta = (1 - beta);\r\n        xf.p.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n        xf.p.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n        var angle = one_minus_beta * this.a0 + beta * this.a;\r\n        xf.q.SetAngle(angle);\r\n        xf.p.SelfSub(b2Rot.MulRV(xf.q, this.localCenter, b2Vec2.s_t0));\r\n        return xf;\r\n    };\r\n    b2Sweep.prototype.Advance = function (alpha) {\r\n        // DEBUG: b2Assert(this.alpha0 < 1);\r\n        var beta = (alpha - this.alpha0) / (1 - this.alpha0);\r\n        var one_minus_beta = (1 - beta);\r\n        this.c0.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n        this.c0.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n        this.a0 = one_minus_beta * this.a0 + beta * this.a;\r\n        this.alpha0 = alpha;\r\n    };\r\n    b2Sweep.prototype.Normalize = function () {\r\n        var d = exports.b2_two_pi * Math.floor(this.a0 / exports.b2_two_pi);\r\n        this.a0 -= d;\r\n        this.a -= d;\r\n    };\r\n    return b2Sweep;\r\n}());\r\nexports.b2Sweep = b2Sweep;\r\n"},"sourceMaps":{"js":{"version":3,"file":"b2Math.js","sourceRoot":"","sources":["../node_modules/box2d.package.ts/Common/b2Math.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n\r\n// DEBUG: import { b2Assert } from \"./b2Settings\";\r\nimport { b2_pi, b2_epsilon, b2MakeArray } from \"./b2Settings\";\r\n\r\nexport const b2_pi_over_180: number = b2_pi / 180;\r\nexport const b2_180_over_pi: number = 180 / b2_pi;\r\nexport const b2_two_pi: number = 2 * b2_pi;\r\n\r\nexport const b2Abs = Math.abs;\r\n\r\nexport function b2Min(a: number, b: number): number { return a < b ? a : b }\r\nexport function b2Max(a: number, b: number): number { return a > b ? a : b }\r\n\r\nexport function b2Clamp(a: number, lo: number, hi: number): number {\r\n  return (a < lo) ? (lo) : ((a > hi) ? (hi) : (a));\r\n}\r\n\r\nexport function b2Swap<T>(a: T[], b: T[]): void {\r\n  // DEBUG: b2Assert(false);\r\n  const tmp: T = a[0];\r\n  a[0] = b[0];\r\n  b[0] = tmp;\r\n}\r\n\r\n/// This function is used to ensure that a floating point number is\r\n/// not a NaN or infinity.\r\nexport const b2IsValid = isFinite;\r\n\r\nexport function b2Sq(n: number): number {\r\n  return n * n;\r\n}\r\n\r\n/// This is a approximate yet fast inverse square-root.\r\nexport function b2InvSqrt(n: number): number {\r\n  return 1 / Math.sqrt(n);\r\n}\r\n\r\nexport const b2Sqrt = Math.sqrt;\r\n\r\nexport const b2Pow = Math.pow;\r\n\r\nexport function b2DegToRad(degrees: number): number {\r\n  return degrees * b2_pi_over_180;\r\n}\r\n\r\nexport function b2RadToDeg(radians: number): number {\r\n  return radians * b2_180_over_pi;\r\n}\r\n\r\nexport const b2Cos = Math.cos;\r\nexport const b2Sin = Math.sin;\r\nexport const b2Acos = Math.acos;\r\nexport const b2Asin = Math.asin;\r\nexport const b2Atan2 = Math.atan2;\r\n\r\nexport function b2NextPowerOfTwo(x: number): number {\r\n  x |= (x >> 1) & 0x7FFFFFFF;\r\n  x |= (x >> 2) & 0x3FFFFFFF;\r\n  x |= (x >> 4) & 0x0FFFFFFF;\r\n  x |= (x >> 8) & 0x00FFFFFF;\r\n  x |= (x >> 16) & 0x0000FFFF;\r\n  return x + 1;\r\n}\r\n\r\nexport function b2IsPowerOfTwo(x: number): boolean {\r\n  return x > 0 && (x & (x - 1)) === 0;\r\n}\r\n\r\nexport function b2Random(): number {\r\n  return Math.random() * 2 - 1;\r\n}\r\n\r\nexport function b2RandomRange(lo: number, hi: number): number {\r\n  return (hi - lo) * Math.random() + lo;\r\n}\r\n\r\nexport interface XY {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\n/// A 2D column vector.\r\nexport class b2Vec2 implements XY {\r\n  public static readonly ZERO: Readonly<b2Vec2> = new b2Vec2(0, 0);\r\n  public static readonly UNITX: Readonly<b2Vec2> = new b2Vec2(1, 0);\r\n  public static readonly UNITY: Readonly<b2Vec2> = new b2Vec2(0, 1);\r\n\r\n  public static readonly s_t0: b2Vec2 = new b2Vec2();\r\n  public static readonly s_t1: b2Vec2 = new b2Vec2();\r\n  public static readonly s_t2: b2Vec2 = new b2Vec2();\r\n  public static readonly s_t3: b2Vec2 = new b2Vec2();\r\n\r\n  public readonly data: Float32Array;\r\n  public get x(): number { return this.data[0]; } public set x(value: number) { this.data[0] = value; }\r\n  public get y(): number { return this.data[1]; } public set y(value: number) { this.data[1] = value; }\r\n\r\n  constructor();\r\n  constructor(data: Float32Array);\r\n  constructor(x: number, y: number);\r\n  constructor(...args: any[]) {\r\n    if (args[0] instanceof Float32Array) {\r\n      if (args[0].length !== 2) { throw new Error(); }\r\n      this.data = args[0];\r\n    } else {\r\n      const x: number = typeof args[0] === \"number\" ? args[0] : 0;\r\n      const y: number = typeof args[1] === \"number\" ? args[1] : 0;\r\n      this.data = new Float32Array([ x, y ]);\r\n    }\r\n  }\r\n\r\n  public Clone(): b2Vec2 {\r\n    return new b2Vec2(this.x, this.y);\r\n  }\r\n\r\n  public SetZero(): this {\r\n    this.x = 0;\r\n    this.y = 0;\r\n    return this;\r\n  }\r\n\r\n  public Set(x: number, y: number): this {\r\n    this.x = x;\r\n    this.y = y;\r\n    return this;\r\n  }\r\n\r\n  public Copy(other: XY): this {\r\n    this.x = other.x;\r\n    this.y = other.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfAdd(v: XY): this {\r\n    this.x += v.x;\r\n    this.y += v.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfAddXY(x: number, y: number): this {\r\n    this.x += x;\r\n    this.y += y;\r\n    return this;\r\n  }\r\n\r\n  public SelfSub(v: XY): this {\r\n    this.x -= v.x;\r\n    this.y -= v.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfSubXY(x: number, y: number): this {\r\n    this.x -= x;\r\n    this.y -= y;\r\n    return this;\r\n  }\r\n\r\n  public SelfMul(s: number): this {\r\n    this.x *= s;\r\n    this.y *= s;\r\n    return this;\r\n  }\r\n\r\n  public SelfMulAdd(s: number, v: XY): this {\r\n    this.x += s * v.x;\r\n    this.y += s * v.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfMulSub(s: number, v: XY): this {\r\n    this.x -= s * v.x;\r\n    this.y -= s * v.y;\r\n    return this;\r\n  }\r\n\r\n  public Dot(v: XY): number {\r\n    return this.x * v.x + this.y * v.y;\r\n  }\r\n\r\n  public Cross(v: XY): number {\r\n    return this.x * v.y - this.y * v.x;\r\n  }\r\n\r\n  public Length(): number {\r\n    const x: number = this.x, y: number = this.y;\r\n    return Math.sqrt(x * x + y * y);\r\n  }\r\n\r\n  public LengthSquared(): number {\r\n    const x: number = this.x, y: number = this.y;\r\n    return (x * x + y * y);\r\n  }\r\n\r\n  public Normalize(): number {\r\n    const length: number = this.Length();\r\n    if (length >= b2_epsilon) {\r\n      const inv_length: number = 1 / length;\r\n      this.x *= inv_length;\r\n      this.y *= inv_length;\r\n    }\r\n    return length;\r\n  }\r\n\r\n  public SelfNormalize(): this {\r\n    const length: number = this.Length();\r\n    if (length >= b2_epsilon) {\r\n      const inv_length: number = 1 / length;\r\n      this.x *= inv_length;\r\n      this.y *= inv_length;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public SelfRotate(radians: number): this {\r\n    const c: number = Math.cos(radians);\r\n    const s: number = Math.sin(radians);\r\n    const x: number = this.x;\r\n    this.x = c * x - s * this.y;\r\n    this.y = s * x + c * this.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfRotateCosSin(c: number, s: number): this {\r\n    const x: number = this.x;\r\n    this.x = c * x - s * this.y;\r\n    this.y = s * x + c * this.y;\r\n    return this;\r\n  }\r\n\r\n  public IsValid(): boolean {\r\n    return isFinite(this.x) && isFinite(this.y);\r\n  }\r\n\r\n  public SelfCrossVS(s: number): this {\r\n    const x: number = this.x;\r\n    this.x =  s * this.y;\r\n    this.y = -s * x;\r\n    return this;\r\n  }\r\n\r\n  public SelfCrossSV(s: number): this {\r\n    const x: number = this.x;\r\n    this.x = -s * this.y;\r\n    this.y =  s * x;\r\n    return this;\r\n  }\r\n\r\n  public SelfMinV(v: XY): this {\r\n    this.x = b2Min(this.x, v.x);\r\n    this.y = b2Min(this.y, v.y);\r\n    return this;\r\n  }\r\n\r\n  public SelfMaxV(v: XY): this {\r\n    this.x = b2Max(this.x, v.x);\r\n    this.y = b2Max(this.y, v.y);\r\n    return this;\r\n  }\r\n\r\n  public SelfAbs(): this {\r\n    this.x = b2Abs(this.x);\r\n    this.y = b2Abs(this.y);\r\n    return this;\r\n  }\r\n\r\n  public SelfNeg(): this {\r\n    this.x = (-this.x);\r\n    this.y = (-this.y);\r\n    return this;\r\n  }\r\n\r\n  public SelfSkew(): this {\r\n    const x: number = this.x;\r\n    this.x = -this.y;\r\n    this.y = x;\r\n    return this;\r\n  }\r\n\r\n  public static MakeArray(length: number): b2Vec2[] {\r\n    return b2MakeArray(length, (i: number): b2Vec2 => new b2Vec2());\r\n  }\r\n\r\n  public static AbsV<T extends XY>(v: XY, out: T): T {\r\n    out.x = b2Abs(v.x);\r\n    out.y = b2Abs(v.y);\r\n    return out;\r\n  }\r\n\r\n  public static MinV<T extends XY>(a: XY, b: XY, out: T): T {\r\n    out.x = b2Min(a.x, b.x);\r\n    out.y = b2Min(a.y, b.y);\r\n    return out;\r\n  }\r\n\r\n  public static MaxV<T extends XY>(a: XY, b: XY, out: T): T {\r\n    out.x = b2Max(a.x, b.x);\r\n    out.y = b2Max(a.y, b.y);\r\n    return out;\r\n  }\r\n\r\n  public static ClampV<T extends XY>(v: XY, lo: XY, hi: XY, out: T): T {\r\n    out.x = b2Clamp(v.x, lo.x, hi.x);\r\n    out.y = b2Clamp(v.y, lo.y, hi.y);\r\n    return out;\r\n  }\r\n\r\n  public static RotateV<T extends XY>(v: XY, radians: number, out: T): T {\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    const c: number = Math.cos(radians);\r\n    const s: number = Math.sin(radians);\r\n    out.x = c * v_x - s * v_y;\r\n    out.y = s * v_x + c * v_y;\r\n    return out;\r\n  }\r\n\r\n  public static DotVV(a: XY, b: XY): number {\r\n    return a.x * b.x + a.y * b.y;\r\n  }\r\n\r\n  public static CrossVV(a: XY, b: XY): number {\r\n    return a.x * b.y - a.y * b.x;\r\n  }\r\n\r\n  public static CrossVS<T extends XY>(v: XY, s: number, out: T): T {\r\n    const v_x: number = v.x;\r\n    out.x =  s * v.y;\r\n    out.y = -s * v_x;\r\n    return out;\r\n  }\r\n\r\n  public static CrossVOne<T extends XY>(v: XY, out: T): T {\r\n    const v_x: number = v.x;\r\n    out.x =  v.y;\r\n    out.y = -v_x;\r\n    return out;\r\n  }\r\n\r\n  public static CrossSV<T extends XY>(s: number, v: XY, out: T): T {\r\n    const v_x: number = v.x;\r\n    out.x = -s * v.y;\r\n    out.y =  s * v_x;\r\n    return out;\r\n  }\r\n\r\n  public static CrossOneV<T extends XY>(v: XY, out: T): T {\r\n    const v_x: number = v.x;\r\n    out.x = -v.y;\r\n    out.y =  v_x;\r\n    return out;\r\n  }\r\n\r\n  public static AddVV<T extends XY>(a: XY, b: XY, out: T): T { out.x = a.x + b.x; out.y = a.y + b.y; return out; }\r\n\r\n  public static SubVV<T extends XY>(a: XY, b: XY, out: T): T { out.x = a.x - b.x; out.y = a.y - b.y; return out; }\r\n\r\n  public static MulSV<T extends XY>(s: number, v: XY, out: T): T { out.x = v.x * s; out.y = v.y * s; return out; }\r\n  public static MulVS<T extends XY>(v: XY, s: number, out: T): T { out.x = v.x * s; out.y = v.y * s; return out; }\r\n\r\n  public static AddVMulSV<T extends XY>(a: XY, s: number, b: XY, out: T): T { out.x = a.x + (s * b.x); out.y = a.y + (s * b.y); return out; }\r\n  public static SubVMulSV<T extends XY>(a: XY, s: number, b: XY, out: T): T { out.x = a.x - (s * b.x); out.y = a.y - (s * b.y); return out; }\r\n\r\n  public static AddVCrossSV<T extends XY>(a: XY, s: number, v: XY, out: T): T {\r\n    const v_x: number = v.x;\r\n    out.x = a.x - (s * v.y);\r\n    out.y = a.y + (s * v_x);\r\n    return out;\r\n  }\r\n\r\n  public static MidVV<T extends XY>(a: XY, b: XY, out: T): T { out.x = (a.x + b.x) * 0.5; out.y = (a.y + b.y) * 0.5; return out; }\r\n\r\n  public static ExtVV<T extends XY>(a: XY, b: XY, out: T): T { out.x = (b.x - a.x) * 0.5; out.y = (b.y - a.y) * 0.5; return out; }\r\n\r\n  public static IsEqualToV(a: XY, b: XY): boolean {\r\n    return a.x === b.x && a.y === b.y;\r\n  }\r\n\r\n  public static DistanceVV(a: XY, b: XY): number {\r\n    const c_x: number = a.x - b.x;\r\n    const c_y: number = a.y - b.y;\r\n    return Math.sqrt(c_x * c_x + c_y * c_y);\r\n  }\r\n\r\n  public static DistanceSquaredVV(a: XY, b: XY): number {\r\n    const c_x: number = a.x - b.x;\r\n    const c_y: number = a.y - b.y;\r\n    return (c_x * c_x + c_y * c_y);\r\n  }\r\n\r\n  public static NegV<T extends XY>(v: XY, out: T): T { out.x = -v.x; out.y = -v.y; return out; }\r\n\r\n}\r\n\r\nexport const b2Vec2_zero: Readonly<b2Vec2> = new b2Vec2(0, 0);\r\n\r\nexport interface XYZ extends XY {\r\n  z: number;\r\n}\r\n\r\n/// A 2D column vector with 3 elements.\r\nexport class b2Vec3 implements XYZ {\r\n  public static readonly ZERO: Readonly<b2Vec3> = new b2Vec3(0, 0, 0);\r\n\r\n  public static readonly s_t0: b2Vec3 = new b2Vec3();\r\n\r\n  public readonly data: Float32Array;\r\n  public get x(): number { return this.data[0]; } public set x(value: number) { this.data[0] = value; }\r\n  public get y(): number { return this.data[1]; } public set y(value: number) { this.data[1] = value; }\r\n  public get z(): number { return this.data[2]; } public set z(value: number) { this.data[2] = value; }\r\n\r\n  constructor();\r\n  constructor(data: Float32Array);\r\n  constructor(x: number, y: number, z: number);\r\n  constructor(...args: any[]) {\r\n    if (args[0] instanceof Float32Array) {\r\n      if (args[0].length !== 3) { throw new Error(); }\r\n      this.data = args[0];\r\n    } else {\r\n      const x: number = typeof args[0] === \"number\" ? args[0] : 0;\r\n      const y: number = typeof args[1] === \"number\" ? args[1] : 0;\r\n      const z: number = typeof args[2] === \"number\" ? args[2] : 0;\r\n      this.data = new Float32Array([ x, y, z ]);\r\n    }\r\n  }\r\n\r\n  public Clone(): b2Vec3 {\r\n    return new b2Vec3(this.x, this.y, this.z);\r\n  }\r\n\r\n  public SetZero(): this {\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.z = 0;\r\n    return this;\r\n  }\r\n\r\n  public SetXYZ(x: number, y: number, z: number): this {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    return this;\r\n  }\r\n\r\n  public Copy(other: XYZ): this {\r\n    this.x = other.x;\r\n    this.y = other.y;\r\n    this.z = other.z;\r\n    return this;\r\n  }\r\n\r\n  public SelfNeg(): this {\r\n    this.x = (-this.x);\r\n    this.y = (-this.y);\r\n    this.z = (-this.z);\r\n    return this;\r\n  }\r\n\r\n  public SelfAdd(v: XYZ): this {\r\n    this.x += v.x;\r\n    this.y += v.y;\r\n    this.z += v.z;\r\n    return this;\r\n  }\r\n\r\n  public SelfAddXYZ(x: number, y: number, z: number): this {\r\n    this.x += x;\r\n    this.y += y;\r\n    this.z += z;\r\n    return this;\r\n  }\r\n\r\n  public SelfSub(v: XYZ): this {\r\n    this.x -= v.x;\r\n    this.y -= v.y;\r\n    this.z -= v.z;\r\n    return this;\r\n  }\r\n\r\n  public SelfSubXYZ(x: number, y: number, z: number): this {\r\n    this.x -= x;\r\n    this.y -= y;\r\n    this.z -= z;\r\n    return this;\r\n  }\r\n\r\n  public SelfMul(s: number): this {\r\n    this.x *= s;\r\n    this.y *= s;\r\n    this.z *= s;\r\n    return this;\r\n  }\r\n\r\n  public static DotV3V3(a: XYZ, b: XYZ): number {\r\n    return a.x * b.x + a.y * b.y + a.z * b.z;\r\n  }\r\n\r\n  public static CrossV3V3<T extends XYZ>(a: XYZ, b: XYZ, out: T): T {\r\n    const a_x: number = a.x, a_y = a.y, a_z = a.z;\r\n    const b_x: number = b.x, b_y = b.y, b_z = b.z;\r\n    out.x = a_y * b_z - a_z * b_y;\r\n    out.y = a_z * b_x - a_x * b_z;\r\n    out.z = a_x * b_y - a_y * b_x;\r\n    return out;\r\n  }\r\n}\r\n\r\n/// A 2-by-2 matrix. Stored in column-major order.\r\nexport class b2Mat22 {\r\n  public static readonly IDENTITY: Readonly<b2Mat22> = new b2Mat22();\r\n\r\n  public readonly data: Float32Array = new Float32Array([ 1, 0, 0, 1 ]);\r\n  public readonly ex: b2Vec2 = new b2Vec2(this.data.subarray(0, 2));\r\n  public readonly ey: b2Vec2 = new b2Vec2(this.data.subarray(2, 4));\r\n\r\n  public Clone(): b2Mat22 {\r\n    return new b2Mat22().Copy(this);\r\n  }\r\n\r\n  public static FromVV(c1: XY, c2: XY): b2Mat22 {\r\n    return new b2Mat22().SetVV(c1, c2);\r\n  }\r\n\r\n  public static FromSSSS(r1c1: number, r1c2: number, r2c1: number, r2c2: number): b2Mat22 {\r\n    return new b2Mat22().SetSSSS(r1c1, r1c2, r2c1, r2c2);\r\n  }\r\n\r\n  public static FromAngle(radians: number): b2Mat22 {\r\n    return new b2Mat22().SetAngle(radians);\r\n  }\r\n\r\n  public SetSSSS(r1c1: number, r1c2: number, r2c1: number, r2c2: number): this {\r\n    this.ex.Set(r1c1, r2c1);\r\n    this.ey.Set(r1c2, r2c2);\r\n    return this;\r\n  }\r\n\r\n  public SetVV(c1: XY, c2: XY): this {\r\n    this.ex.Copy(c1);\r\n    this.ey.Copy(c2);\r\n    return this;\r\n  }\r\n\r\n  public SetAngle(radians: number): this {\r\n    const c: number = Math.cos(radians);\r\n    const s: number = Math.sin(radians);\r\n    this.ex.Set( c, s);\r\n    this.ey.Set(-s, c);\r\n    return this;\r\n  }\r\n\r\n  public Copy(other: b2Mat22): this {\r\n    this.ex.Copy(other.ex);\r\n    this.ey.Copy(other.ey);\r\n    return this;\r\n  }\r\n\r\n  public SetIdentity(): this {\r\n    this.ex.Set(1, 0);\r\n    this.ey.Set(0, 1);\r\n    return this;\r\n  }\r\n\r\n  public SetZero(): this {\r\n    this.ex.SetZero();\r\n    this.ey.SetZero();\r\n    return this;\r\n  }\r\n\r\n  public GetAngle(): number {\r\n    return Math.atan2(this.ex.y, this.ex.x);\r\n  }\r\n\r\n  public GetInverse(out: b2Mat22): b2Mat22 {\r\n    const a: number = this.ex.x;\r\n    const b: number = this.ey.x;\r\n    const c: number = this.ex.y;\r\n    const d: number = this.ey.y;\r\n    let det: number = a * d - b * c;\r\n    if (det !== 0) {\r\n      det = 1 / det;\r\n    }\r\n    out.ex.x =   det * d;\r\n    out.ey.x = (-det * b);\r\n    out.ex.y = (-det * c);\r\n    out.ey.y =   det * a;\r\n    return out;\r\n  }\r\n\r\n  public Solve<T extends XY>(b_x: number, b_y: number, out: T): T {\r\n    const a11: number = this.ex.x, a12 = this.ey.x;\r\n    const a21: number = this.ex.y, a22 = this.ey.y;\r\n    let det: number = a11 * a22 - a12 * a21;\r\n    if (det !== 0) {\r\n      det = 1 / det;\r\n    }\r\n    out.x = det * (a22 * b_x - a12 * b_y);\r\n    out.y = det * (a11 * b_y - a21 * b_x);\r\n    return out;\r\n  }\r\n\r\n  public SelfAbs(): this {\r\n    this.ex.SelfAbs();\r\n    this.ey.SelfAbs();\r\n    return this;\r\n  }\r\n\r\n  public SelfInv(): this {\r\n    this.GetInverse(this);\r\n    return this;\r\n  }\r\n\r\n  public SelfAddM(M: b2Mat22): this {\r\n    this.ex.SelfAdd(M.ex);\r\n    this.ey.SelfAdd(M.ey);\r\n    return this;\r\n  }\r\n\r\n  public SelfSubM(M: b2Mat22): this {\r\n    this.ex.SelfSub(M.ex);\r\n    this.ey.SelfSub(M.ey);\r\n    return this;\r\n  }\r\n\r\n  public static AbsM(M: b2Mat22, out: b2Mat22): b2Mat22 {\r\n    const M_ex: b2Vec2 = M.ex, M_ey: b2Vec2 = M.ey;\r\n    out.ex.x = b2Abs(M_ex.x);\r\n    out.ex.y = b2Abs(M_ex.y);\r\n    out.ey.x = b2Abs(M_ey.x);\r\n    out.ey.y = b2Abs(M_ey.y);\r\n    return out;\r\n  }\r\n\r\n  public static MulMV<T extends XY>(M: b2Mat22, v: XY, out: T): T {\r\n    const M_ex: b2Vec2 = M.ex, M_ey: b2Vec2 = M.ey;\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    out.x = M_ex.x * v_x + M_ey.x * v_y;\r\n    out.y = M_ex.y * v_x + M_ey.y * v_y;\r\n    return out;\r\n  }\r\n\r\n  public static MulTMV<T extends XY>(M: b2Mat22, v: XY, out: T): T {\r\n    const M_ex: b2Vec2 = M.ex, M_ey: b2Vec2 = M.ey;\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    out.x = M_ex.x * v_x + M_ex.y * v_y;\r\n    out.y = M_ey.x * v_x + M_ey.y * v_y;\r\n    return out;\r\n  }\r\n\r\n  public static AddMM(A: b2Mat22, B: b2Mat22, out: b2Mat22): b2Mat22 {\r\n    const A_ex: b2Vec2 = A.ex, A_ey: b2Vec2 = A.ey;\r\n    const B_ex: b2Vec2 = B.ex, B_ey: b2Vec2 = B.ey;\r\n    out.ex.x = A_ex.x + B_ex.x;\r\n    out.ex.y = A_ex.y + B_ex.y;\r\n    out.ey.x = A_ey.x + B_ey.x;\r\n    out.ey.y = A_ey.y + B_ey.y;\r\n    return out;\r\n  }\r\n\r\n  public static MulMM(A: b2Mat22, B: b2Mat22, out: b2Mat22): b2Mat22 {\r\n    const A_ex_x: number = A.ex.x, A_ex_y: number = A.ex.y;\r\n    const A_ey_x: number = A.ey.x, A_ey_y: number = A.ey.y;\r\n    const B_ex_x: number = B.ex.x, B_ex_y: number = B.ex.y;\r\n    const B_ey_x: number = B.ey.x, B_ey_y: number = B.ey.y;\r\n    out.ex.x = A_ex_x * B_ex_x + A_ey_x * B_ex_y;\r\n    out.ex.y = A_ex_y * B_ex_x + A_ey_y * B_ex_y;\r\n    out.ey.x = A_ex_x * B_ey_x + A_ey_x * B_ey_y;\r\n    out.ey.y = A_ex_y * B_ey_x + A_ey_y * B_ey_y;\r\n    return out;\r\n  }\r\n\r\n  public static MulTMM(A: b2Mat22, B: b2Mat22, out: b2Mat22): b2Mat22 {\r\n    const A_ex_x: number = A.ex.x, A_ex_y: number = A.ex.y;\r\n    const A_ey_x: number = A.ey.x, A_ey_y: number = A.ey.y;\r\n    const B_ex_x: number = B.ex.x, B_ex_y: number = B.ex.y;\r\n    const B_ey_x: number = B.ey.x, B_ey_y: number = B.ey.y;\r\n    out.ex.x = A_ex_x * B_ex_x + A_ex_y * B_ex_y;\r\n    out.ex.y = A_ey_x * B_ex_x + A_ey_y * B_ex_y;\r\n    out.ey.x = A_ex_x * B_ey_x + A_ex_y * B_ey_y;\r\n    out.ey.y = A_ey_x * B_ey_x + A_ey_y * B_ey_y;\r\n    return out;\r\n  }\r\n}\r\n\r\n/// A 3-by-3 matrix. Stored in column-major order.\r\nexport class b2Mat33 {\r\n  public static readonly IDENTITY: Readonly<b2Mat33> = new b2Mat33();\r\n\r\n  public readonly data: Float32Array = new Float32Array([ 1, 0, 0, 0, 1, 0, 0, 0, 1 ]);\r\n  public readonly ex: b2Vec3 = new b2Vec3(this.data.subarray(0, 3));\r\n  public readonly ey: b2Vec3 = new b2Vec3(this.data.subarray(3, 6));\r\n  public readonly ez: b2Vec3 = new b2Vec3(this.data.subarray(6, 9));\r\n\r\n  public Clone(): b2Mat33 {\r\n    return new b2Mat33().Copy(this);\r\n  }\r\n\r\n  public SetVVV(c1: XYZ, c2: XYZ, c3: XYZ): this {\r\n    this.ex.Copy(c1);\r\n    this.ey.Copy(c2);\r\n    this.ez.Copy(c3);\r\n    return this;\r\n  }\r\n\r\n  public Copy(other: b2Mat33): this {\r\n    this.ex.Copy(other.ex);\r\n    this.ey.Copy(other.ey);\r\n    this.ez.Copy(other.ez);\r\n    return this;\r\n  }\r\n\r\n  public SetIdentity(): this {\r\n    this.ex.SetXYZ(1, 0, 0);\r\n    this.ey.SetXYZ(0, 1, 0);\r\n    this.ez.SetXYZ(0, 0, 1);\r\n    return this;\r\n  }\r\n\r\n  public SetZero(): this {\r\n    this.ex.SetZero();\r\n    this.ey.SetZero();\r\n    this.ez.SetZero();\r\n    return this;\r\n  }\r\n\r\n  public SelfAddM(M: b2Mat33): this {\r\n    this.ex.SelfAdd(M.ex);\r\n    this.ey.SelfAdd(M.ey);\r\n    this.ez.SelfAdd(M.ez);\r\n    return this;\r\n  }\r\n\r\n  public Solve33<T extends XYZ>(b_x: number, b_y: number, b_z: number, out: T): T {\r\n    const a11: number = this.ex.x, a21: number = this.ex.y, a31: number = this.ex.z;\r\n    const a12: number = this.ey.x, a22: number = this.ey.y, a32: number = this.ey.z;\r\n    const a13: number = this.ez.x, a23: number = this.ez.y, a33: number = this.ez.z;\r\n    let det: number = a11 * (a22 * a33 - a32 * a23) + a21 * (a32 * a13 - a12 * a33) + a31 * (a12 * a23 - a22 * a13);\r\n    if (det !== 0) {\r\n      det = 1 / det;\r\n    }\r\n    out.x = det * (b_x * (a22 * a33 - a32 * a23) + b_y * (a32 * a13 - a12 * a33) + b_z * (a12 * a23 - a22 * a13));\r\n    out.y = det * (a11 * (b_y * a33 - b_z * a23) + a21 * (b_z * a13 - b_x * a33) + a31 * (b_x * a23 - b_y * a13));\r\n    out.z = det * (a11 * (a22 * b_z - a32 * b_y) + a21 * (a32 * b_x - a12 * b_z) + a31 * (a12 * b_y - a22 * b_x));\r\n    return out;\r\n  }\r\n\r\n  public Solve22<T extends XY>(b_x: number, b_y: number, out: T): T {\r\n    const a11: number = this.ex.x, a12: number = this.ey.x;\r\n    const a21: number = this.ex.y, a22: number = this.ey.y;\r\n    let det: number = a11 * a22 - a12 * a21;\r\n    if (det !== 0) {\r\n      det = 1 / det;\r\n    }\r\n    out.x = det * (a22 * b_x - a12 * b_y);\r\n    out.y = det * (a11 * b_y - a21 * b_x);\r\n    return out;\r\n  }\r\n\r\n  public GetInverse22(M: b2Mat33): void {\r\n    const a: number = this.ex.x, b: number = this.ey.x, c: number = this.ex.y, d: number = this.ey.y;\r\n    let det: number = a * d - b * c;\r\n    if (det !== 0) {\r\n      det = 1 / det;\r\n    }\r\n\r\n    M.ex.x =  det * d; M.ey.x = -det * b; M.ex.z = 0;\r\n    M.ex.y = -det * c; M.ey.y =  det * a; M.ey.z = 0;\r\n    M.ez.x =        0; M.ez.y =        0; M.ez.z = 0;\r\n  }\r\n\r\n  public GetSymInverse33(M: b2Mat33): void {\r\n    let det: number = b2Vec3.DotV3V3(this.ex, b2Vec3.CrossV3V3(this.ey, this.ez, b2Vec3.s_t0));\r\n    if (det !== 0) {\r\n      det = 1 / det;\r\n    }\r\n\r\n    const a11: number = this.ex.x, a12: number = this.ey.x, a13: number = this.ez.x;\r\n    const a22: number = this.ey.y, a23: number = this.ez.y;\r\n    const a33: number = this.ez.z;\r\n\r\n    M.ex.x = det * (a22 * a33 - a23 * a23);\r\n    M.ex.y = det * (a13 * a23 - a12 * a33);\r\n    M.ex.z = det * (a12 * a23 - a13 * a22);\r\n\r\n    M.ey.x = M.ex.y;\r\n    M.ey.y = det * (a11 * a33 - a13 * a13);\r\n    M.ey.z = det * (a13 * a12 - a11 * a23);\r\n\r\n    M.ez.x = M.ex.z;\r\n    M.ez.y = M.ey.z;\r\n    M.ez.z = det * (a11 * a22 - a12 * a12);\r\n  }\r\n\r\n  public static MulM33V3<T extends XYZ>(A: b2Mat33, v: XYZ, out: T): T {\r\n    const v_x: number = v.x, v_y: number = v.y, v_z: number = v.z;\r\n    out.x = A.ex.x * v_x + A.ey.x * v_y + A.ez.x * v_z;\r\n    out.y = A.ex.y * v_x + A.ey.y * v_y + A.ez.y * v_z;\r\n    out.z = A.ex.z * v_x + A.ey.z * v_y + A.ez.z * v_z;\r\n    return out;\r\n  }\r\n  public static MulM33XYZ<T extends XYZ>(A: b2Mat33, x: number, y: number, z: number, out: T): T {\r\n    out.x = A.ex.x * x + A.ey.x * y + A.ez.x * z;\r\n    out.y = A.ex.y * x + A.ey.y * y + A.ez.y * z;\r\n    out.z = A.ex.z * x + A.ey.z * y + A.ez.z * z;\r\n    return out;\r\n  }\r\n  public static MulM33V2<T extends XY>(A: b2Mat33, v: XY, out: T): T {\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    out.x = A.ex.x * v_x + A.ey.x * v_y;\r\n    out.y = A.ex.y * v_x + A.ey.y * v_y;\r\n    return out;\r\n  }\r\n  public static MulM33XY<T extends XY>(A: b2Mat33, x: number, y: number, out: T): T {\r\n    out.x = A.ex.x * x + A.ey.x * y;\r\n    out.y = A.ex.y * x + A.ey.y * y;\r\n    return out;\r\n  }\r\n}\r\n\r\n/// Rotation\r\nexport class b2Rot {\r\n  public static readonly IDENTITY: Readonly<b2Rot> = new b2Rot();\r\n\r\n  public s: number = 0;\r\n  public c: number = 1;\r\n\r\n  constructor(angle: number = 0) {\r\n    if (angle) {\r\n      this.s = Math.sin(angle);\r\n      this.c = Math.cos(angle);\r\n    }\r\n  }\r\n\r\n  public Clone(): b2Rot {\r\n    return new b2Rot().Copy(this);\r\n  }\r\n\r\n  public Copy(other: b2Rot): this {\r\n    this.s = other.s;\r\n    this.c = other.c;\r\n    return this;\r\n  }\r\n\r\n  public SetAngle(angle: number): this {\r\n    this.s = Math.sin(angle);\r\n    this.c = Math.cos(angle);\r\n    return this;\r\n  }\r\n\r\n  public SetIdentity(): this {\r\n    this.s = 0;\r\n    this.c = 1;\r\n    return this;\r\n  }\r\n\r\n  public GetAngle(): number {\r\n    return Math.atan2(this.s, this.c);\r\n  }\r\n\r\n  public GetXAxis<T extends XY>(out: T): T {\r\n    out.x = this.c;\r\n    out.y = this.s;\r\n    return out;\r\n  }\r\n\r\n  public GetYAxis<T extends XY>(out: T): T {\r\n    out.x = -this.s;\r\n    out.y = this.c;\r\n    return out;\r\n  }\r\n\r\n  public static MulRR(q: b2Rot, r: b2Rot, out: b2Rot): b2Rot {\r\n    // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\r\n    // [qs  qc]   [rs  rc]   [qs*rc+qc*rs -qs*rs+qc*rc]\r\n    // s = qs * rc + qc * rs\r\n    // c = qc * rc - qs * rs\r\n    const q_c: number = q.c, q_s: number = q.s;\r\n    const r_c: number = r.c, r_s: number = r.s;\r\n    out.s = q_s * r_c + q_c * r_s;\r\n    out.c = q_c * r_c - q_s * r_s;\r\n    return out;\r\n  }\r\n\r\n  public static MulTRR(q: b2Rot, r: b2Rot, out: b2Rot): b2Rot {\r\n    // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\r\n    // [-qs qc]   [rs  rc]   [-qs*rc+qc*rs qs*rs+qc*rc]\r\n    // s = qc * rs - qs * rc\r\n    // c = qc * rc + qs * rs\r\n    const q_c: number = q.c, q_s: number = q.s;\r\n    const r_c: number = r.c, r_s: number = r.s;\r\n    out.s = q_c * r_s - q_s * r_c;\r\n    out.c = q_c * r_c + q_s * r_s;\r\n    return out;\r\n  }\r\n\r\n  public static MulRV<T extends XY>(q: b2Rot, v: XY, out: T): T {\r\n    const q_c: number = q.c, q_s: number = q.s;\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    out.x = q_c * v_x - q_s * v_y;\r\n    out.y = q_s * v_x + q_c * v_y;\r\n    return out;\r\n  }\r\n\r\n  public static MulTRV<T extends XY>(q: b2Rot, v: XY, out: T): T {\r\n    const q_c: number = q.c, q_s: number = q.s;\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    out.x =  q_c * v_x + q_s * v_y;\r\n    out.y = -q_s * v_x + q_c * v_y;\r\n    return out;\r\n  }\r\n}\r\n\r\n/// A transform contains translation and rotation. It is used to represent\r\n/// the position and orientation of rigid frames.\r\nexport class b2Transform {\r\n  public static readonly IDENTITY: Readonly<b2Transform> = new b2Transform();\r\n\r\n  public readonly p: b2Vec2 = new b2Vec2();\r\n  public readonly q: b2Rot = new b2Rot();\r\n\r\n  public Clone(): b2Transform {\r\n    return new b2Transform().Copy(this);\r\n  }\r\n\r\n  public Copy(other: b2Transform): this {\r\n    this.p.Copy(other.p);\r\n    this.q.Copy(other.q);\r\n    return this;\r\n  }\r\n\r\n  public SetIdentity(): this {\r\n    this.p.SetZero();\r\n    this.q.SetIdentity();\r\n    return this;\r\n  }\r\n\r\n  public SetPositionRotation(position: XY, q: Readonly<b2Rot>): this {\r\n    this.p.Copy(position);\r\n    this.q.Copy(q);\r\n    return this;\r\n  }\r\n\r\n  public SetPositionAngle(pos: XY, a: number): this {\r\n    this.p.Copy(pos);\r\n    this.q.SetAngle(a);\r\n    return this;\r\n  }\r\n\r\n  public SetPosition(position: XY): this {\r\n    this.p.Copy(position);\r\n    return this;\r\n  }\r\n\r\n  public SetPositionXY(x: number, y: number): this {\r\n    this.p.Set(x, y);\r\n    return this;\r\n  }\r\n\r\n  public SetRotation(rotation: Readonly<b2Rot>): this {\r\n    this.q.Copy(rotation);\r\n    return this;\r\n  }\r\n\r\n  public SetRotationAngle(radians: number): this {\r\n    this.q.SetAngle(radians);\r\n    return this;\r\n  }\r\n\r\n  public GetPosition(): Readonly<b2Vec2> {\r\n    return this.p;\r\n  }\r\n\r\n  public GetRotation(): Readonly<b2Rot> {\r\n    return this.q;\r\n  }\r\n\r\n  public GetRotationAngle(): number {\r\n    return this.q.GetAngle();\r\n  }\r\n\r\n  public GetAngle(): number {\r\n    return this.q.GetAngle();\r\n  }\r\n\r\n  public static MulXV<T extends XY>(T: b2Transform, v: XY, out: T): T {\r\n    // float32 x = (T.q.c * v.x - T.q.s * v.y) + T.p.x;\r\n    // float32 y = (T.q.s * v.x + T.q.c * v.y) + T.p.y;\r\n    // return b2Vec2(x, y);\r\n    const T_q_c: number = T.q.c, T_q_s: number = T.q.s;\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    out.x = (T_q_c * v_x - T_q_s * v_y) + T.p.x;\r\n    out.y = (T_q_s * v_x + T_q_c * v_y) + T.p.y;\r\n    return out;\r\n  }\r\n\r\n  public static MulTXV<T extends XY>(T: b2Transform, v: XY, out: T): T {\r\n    // float32 px = v.x - T.p.x;\r\n    // float32 py = v.y - T.p.y;\r\n    // float32 x = (T.q.c * px + T.q.s * py);\r\n    // float32 y = (-T.q.s * px + T.q.c * py);\r\n    // return b2Vec2(x, y);\r\n    const T_q_c: number = T.q.c, T_q_s: number = T.q.s;\r\n    const p_x: number = v.x - T.p.x;\r\n    const p_y: number = v.y - T.p.y;\r\n    out.x = ( T_q_c * p_x + T_q_s * p_y);\r\n    out.y = (-T_q_s * p_x + T_q_c * p_y);\r\n    return out;\r\n  }\r\n\r\n  public static MulXX(A: b2Transform, B: b2Transform, out: b2Transform): b2Transform {\r\n    b2Rot.MulRR(A.q, B.q, out.q);\r\n    b2Vec2.AddVV(b2Rot.MulRV(A.q, B.p, out.p), A.p, out.p);\r\n    return out;\r\n  }\r\n\r\n  public static MulTXX(A: b2Transform, B: b2Transform, out: b2Transform): b2Transform {\r\n    b2Rot.MulTRR(A.q, B.q, out.q);\r\n    b2Rot.MulTRV(A.q, b2Vec2.SubVV(B.p, A.p, out.p), out.p);\r\n    return out;\r\n  }\r\n\r\n}\r\n\r\n/// This describes the motion of a body/shape for TOI computation.\r\n/// Shapes are defined with respect to the body origin, which may\r\n/// no coincide with the center of mass. However, to support dynamics\r\n/// we must interpolate the center of mass position.\r\nexport class b2Sweep {\r\n  public readonly localCenter: b2Vec2 = new b2Vec2();\r\n  public readonly c0: b2Vec2 = new b2Vec2();\r\n  public readonly c: b2Vec2 = new b2Vec2();\r\n  public a0: number = 0;\r\n  public a: number = 0;\r\n  public alpha0: number = 0;\r\n\r\n  public Clone(): b2Sweep {\r\n    return new b2Sweep().Copy(this);\r\n  }\r\n\r\n  public Copy(other: b2Sweep): this {\r\n    this.localCenter.Copy(other.localCenter);\r\n    this.c0.Copy(other.c0);\r\n    this.c.Copy(other.c);\r\n    this.a0 = other.a0;\r\n    this.a = other.a;\r\n    this.alpha0 = other.alpha0;\r\n    return this;\r\n  }\r\n\r\n  public GetTransform(xf: b2Transform, beta: number): b2Transform {\r\n    const one_minus_beta: number = (1 - beta);\r\n    xf.p.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n    xf.p.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n    const angle: number = one_minus_beta * this.a0 + beta * this.a;\r\n    xf.q.SetAngle(angle);\r\n\r\n    xf.p.SelfSub(b2Rot.MulRV(xf.q, this.localCenter, b2Vec2.s_t0));\r\n    return xf;\r\n  }\r\n\r\n  public Advance(alpha: number): void {\r\n    // DEBUG: b2Assert(this.alpha0 < 1);\r\n    const beta: number = (alpha - this.alpha0) / (1 - this.alpha0);\r\n    const one_minus_beta: number = (1 - beta);\r\n    this.c0.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n    this.c0.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n    this.a0 = one_minus_beta * this.a0 + beta * this.a;\r\n    this.alpha0 = alpha;\r\n  }\r\n\r\n  public Normalize(): void {\r\n    const d: number = b2_two_pi * Math.floor(this.a0 / b2_two_pi);\r\n    this.a0 -= d;\r\n    this.a -= d;\r\n  }\r\n}\r\n"]}},"error":null,"hash":"eaa0f74b39bcc286ded57af55066e9b9","cacheData":{"env":{}}}