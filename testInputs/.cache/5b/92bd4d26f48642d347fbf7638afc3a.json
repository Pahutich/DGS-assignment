{"id":"../node_modules/box2d.package.ts/Particle/b2VoronoiDiagram.ts","dependencies":[{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\package.json","includedInParent":true,"mtime":1586335198964},{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\.babelrc","includedInParent":true,"mtime":1586259187841},{"name":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\package.json","includedInParent":true,"mtime":1586252018883},{"name":"../Common/b2Settings","loc":{"line":22,"column":27},"parent":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Particle\\b2VoronoiDiagram.ts","resolved":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Common\\b2Settings.ts"},{"name":"../Common/b2Math","loc":{"line":23,"column":23},"parent":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Particle\\b2VoronoiDiagram.ts","resolved":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Common\\b2Math.ts"},{"name":"./b2StackQueue","loc":{"line":24,"column":29},"parent":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Particle\\b2VoronoiDiagram.ts","resolved":"C:\\Users\\ricardo\\Desktop\\testInputs\\node_modules\\box2d.package.ts\\Particle\\b2StackQueue.ts"}],"generated":{"js":"\"use strict\";\r\n/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\nexports.__esModule = true;\r\n// #if B2_ENABLE_PARTICLE\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nvar b2Settings_1 = require(\"../Common/b2Settings\");\r\nvar b2Math_1 = require(\"../Common/b2Math\");\r\nvar b2StackQueue_1 = require(\"./b2StackQueue\");\r\n/**\r\n * A field representing the nearest generator from each point.\r\n */\r\nvar b2VoronoiDiagram = /** @class */ (function () {\r\n    function b2VoronoiDiagram(generatorCapacity) {\r\n        this.m_generatorCapacity = 0;\r\n        this.m_generatorCount = 0;\r\n        this.m_countX = 0;\r\n        this.m_countY = 0;\r\n        this.m_diagram = [];\r\n        this.m_generatorBuffer = b2Settings_1.b2MakeArray(generatorCapacity, function (index) { return new b2VoronoiDiagram_Generator(); });\r\n        this.m_generatorCapacity = generatorCapacity;\r\n    }\r\n    /**\r\n     * Add a generator.\r\n     *\r\n     * @param center the position of the generator.\r\n     * @param tag a tag used to identify the generator in callback functions.\r\n     * @param necessary whether to callback for nodes associated with the generator.\r\n     */\r\n    b2VoronoiDiagram.prototype.AddGenerator = function (center, tag, necessary) {\r\n        // DEBUG: b2Assert(this.m_generatorCount < this.m_generatorCapacity);\r\n        var g = this.m_generatorBuffer[this.m_generatorCount++];\r\n        g.center.Copy(center);\r\n        g.tag = tag;\r\n        g.necessary = necessary;\r\n    };\r\n    /**\r\n     * Generate the Voronoi diagram. It is rasterized with a given\r\n     * interval in the same range as the necessary generators exist.\r\n     *\r\n     * @param radius the interval of the diagram.\r\n     * @param margin margin for which the range of the diagram is extended.\r\n     */\r\n    b2VoronoiDiagram.prototype.Generate = function (radius, margin) {\r\n        var inverseRadius = 1 / radius;\r\n        var lower = new b2Math_1.b2Vec2(+b2Settings_1.b2_maxFloat, +b2Settings_1.b2_maxFloat);\r\n        var upper = new b2Math_1.b2Vec2(-b2Settings_1.b2_maxFloat, -b2Settings_1.b2_maxFloat);\r\n        var necessary_count = 0;\r\n        for (var k = 0; k < this.m_generatorCount; k++) {\r\n            var g = this.m_generatorBuffer[k];\r\n            if (g.necessary) {\r\n                b2Math_1.b2Vec2.MinV(lower, g.center, lower);\r\n                b2Math_1.b2Vec2.MaxV(upper, g.center, upper);\r\n                ++necessary_count;\r\n            }\r\n        }\r\n        if (necessary_count === 0) {\r\n            ///debugger;\r\n            this.m_countX = 0;\r\n            this.m_countY = 0;\r\n            return;\r\n        }\r\n        lower.x -= margin;\r\n        lower.y -= margin;\r\n        upper.x += margin;\r\n        upper.y += margin;\r\n        this.m_countX = 1 + Math.floor(inverseRadius * (upper.x - lower.x));\r\n        this.m_countY = 1 + Math.floor(inverseRadius * (upper.y - lower.y));\r\n        this.m_diagram = []; // b2MakeArray(this.m_countX * this.m_countY, (index) => null);\r\n        // (4 * m_countX * m_countY) is the queue capacity that is experimentally\r\n        // known to be necessary and sufficient for general particle distributions.\r\n        var queue = new b2StackQueue_1.b2StackQueue(4 * this.m_countX * this.m_countY);\r\n        for (var k = 0; k < this.m_generatorCount; k++) {\r\n            var g = this.m_generatorBuffer[k];\r\n            ///  g.center = inverseRadius * (g.center - lower);\r\n            g.center.SelfSub(lower).SelfMul(inverseRadius);\r\n            var x = Math.floor(g.center.x);\r\n            var y = Math.floor(g.center.y);\r\n            if (x >= 0 && y >= 0 && x < this.m_countX && y < this.m_countY) {\r\n                queue.Push(new b2VoronoiDiagram_Task(x, y, x + y * this.m_countX, g));\r\n            }\r\n        }\r\n        while (!queue.Empty()) {\r\n            var task = queue.Front();\r\n            var x = task.m_x;\r\n            var y = task.m_y;\r\n            var i = task.m_i;\r\n            var g = task.m_generator;\r\n            queue.Pop();\r\n            if (!this.m_diagram[i]) {\r\n                this.m_diagram[i] = g;\r\n                if (x > 0) {\r\n                    queue.Push(new b2VoronoiDiagram_Task(x - 1, y, i - 1, g));\r\n                }\r\n                if (y > 0) {\r\n                    queue.Push(new b2VoronoiDiagram_Task(x, y - 1, i - this.m_countX, g));\r\n                }\r\n                if (x < this.m_countX - 1) {\r\n                    queue.Push(new b2VoronoiDiagram_Task(x + 1, y, i + 1, g));\r\n                }\r\n                if (y < this.m_countY - 1) {\r\n                    queue.Push(new b2VoronoiDiagram_Task(x, y + 1, i + this.m_countX, g));\r\n                }\r\n            }\r\n        }\r\n        for (var y = 0; y < this.m_countY; y++) {\r\n            for (var x = 0; x < this.m_countX - 1; x++) {\r\n                var i = x + y * this.m_countX;\r\n                var a = this.m_diagram[i];\r\n                var b = this.m_diagram[i + 1];\r\n                if (a !== b) {\r\n                    queue.Push(new b2VoronoiDiagram_Task(x, y, i, b));\r\n                    queue.Push(new b2VoronoiDiagram_Task(x + 1, y, i + 1, a));\r\n                }\r\n            }\r\n        }\r\n        for (var y = 0; y < this.m_countY - 1; y++) {\r\n            for (var x = 0; x < this.m_countX; x++) {\r\n                var i = x + y * this.m_countX;\r\n                var a = this.m_diagram[i];\r\n                var b = this.m_diagram[i + this.m_countX];\r\n                if (a !== b) {\r\n                    queue.Push(new b2VoronoiDiagram_Task(x, y, i, b));\r\n                    queue.Push(new b2VoronoiDiagram_Task(x, y + 1, i + this.m_countX, a));\r\n                }\r\n            }\r\n        }\r\n        while (!queue.Empty()) {\r\n            var task = queue.Front();\r\n            var x = task.m_x;\r\n            var y = task.m_y;\r\n            var i = task.m_i;\r\n            var k = task.m_generator;\r\n            queue.Pop();\r\n            var a = this.m_diagram[i];\r\n            var b = k;\r\n            if (a !== b) {\r\n                var ax = a.center.x - x;\r\n                var ay = a.center.y - y;\r\n                var bx = b.center.x - x;\r\n                var by = b.center.y - y;\r\n                var a2 = ax * ax + ay * ay;\r\n                var b2 = bx * bx + by * by;\r\n                if (a2 > b2) {\r\n                    this.m_diagram[i] = b;\r\n                    if (x > 0) {\r\n                        queue.Push(new b2VoronoiDiagram_Task(x - 1, y, i - 1, b));\r\n                    }\r\n                    if (y > 0) {\r\n                        queue.Push(new b2VoronoiDiagram_Task(x, y - 1, i - this.m_countX, b));\r\n                    }\r\n                    if (x < this.m_countX - 1) {\r\n                        queue.Push(new b2VoronoiDiagram_Task(x + 1, y, i + 1, b));\r\n                    }\r\n                    if (y < this.m_countY - 1) {\r\n                        queue.Push(new b2VoronoiDiagram_Task(x, y + 1, i + this.m_countX, b));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Enumerate all nodes that contain at least one necessary\r\n     * generator.\r\n     */\r\n    b2VoronoiDiagram.prototype.GetNodes = function (callback) {\r\n        for (var y = 0; y < this.m_countY - 1; y++) {\r\n            for (var x = 0; x < this.m_countX - 1; x++) {\r\n                var i = x + y * this.m_countX;\r\n                var a = this.m_diagram[i];\r\n                var b = this.m_diagram[i + 1];\r\n                var c = this.m_diagram[i + this.m_countX];\r\n                var d = this.m_diagram[i + 1 + this.m_countX];\r\n                if (b !== c) {\r\n                    if (a !== b && a !== c &&\r\n                        (a.necessary || b.necessary || c.necessary)) {\r\n                        callback(a.tag, b.tag, c.tag);\r\n                    }\r\n                    if (d !== b && d !== c &&\r\n                        (a.necessary || b.necessary || c.necessary)) {\r\n                        callback(b.tag, d.tag, c.tag);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return b2VoronoiDiagram;\r\n}());\r\nexports.b2VoronoiDiagram = b2VoronoiDiagram;\r\nvar b2VoronoiDiagram_Generator = /** @class */ (function () {\r\n    function b2VoronoiDiagram_Generator() {\r\n        this.center = new b2Math_1.b2Vec2();\r\n        this.tag = 0;\r\n        this.necessary = false;\r\n    }\r\n    return b2VoronoiDiagram_Generator;\r\n}());\r\nexports.b2VoronoiDiagram_Generator = b2VoronoiDiagram_Generator;\r\nvar b2VoronoiDiagram_Task = /** @class */ (function () {\r\n    function b2VoronoiDiagram_Task(x, y, i, g) {\r\n        this.m_x = x;\r\n        this.m_y = y;\r\n        this.m_i = i;\r\n        this.m_generator = g;\r\n    }\r\n    return b2VoronoiDiagram_Task;\r\n}());\r\nexports.b2VoronoiDiagram_Task = b2VoronoiDiagram_Task;\r\n// #endif\r\n"},"sourceMaps":{"js":{"version":3,"file":"b2VoronoiDiagram.js","sourceRoot":"","sources":["../node_modules/box2d.package.ts/Particle/b2VoronoiDiagram.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) 2013 Google, Inc.\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty.  In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n * 1. The origin of this software must not be misrepresented; you must not\r\n * claim that you wrote the original software. If you use this software\r\n * in a product, an acknowledgment in the product documentation would be\r\n * appreciated but is not required.\r\n * 2. Altered source versions must be plainly marked as such, and must not be\r\n * misrepresented as being the original software.\r\n * 3. This notice may not be removed or altered from any source distribution.\r\n */\r\n\r\n// #if B2_ENABLE_PARTICLE\r\n\r\n// DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\nimport { b2_maxFloat, b2MakeArray } from \"../Common/b2Settings\";\r\nimport { b2Vec2 } from \"../Common/b2Math\";\r\nimport { b2StackQueue } from \"./b2StackQueue\";\r\n\r\n/**\r\n * A field representing the nearest generator from each point.\r\n */\r\nexport class b2VoronoiDiagram {\r\n  public m_generatorBuffer: b2VoronoiDiagram_Generator[];\r\n  public m_generatorCapacity = 0;\r\n  public m_generatorCount = 0;\r\n  public m_countX = 0;\r\n  public m_countY = 0;\r\n  public m_diagram: b2VoronoiDiagram_Generator[] = [];\r\n\r\n  constructor(generatorCapacity: number) {\r\n    this.m_generatorBuffer = b2MakeArray(generatorCapacity, (index) => new b2VoronoiDiagram_Generator());\r\n    this.m_generatorCapacity = generatorCapacity;\r\n  }\r\n\r\n  /**\r\n   * Add a generator.\r\n   *\r\n   * @param center the position of the generator.\r\n   * @param tag a tag used to identify the generator in callback functions.\r\n   * @param necessary whether to callback for nodes associated with the generator.\r\n   */\r\n  public AddGenerator(center: b2Vec2, tag: number, necessary: boolean): void {\r\n    // DEBUG: b2Assert(this.m_generatorCount < this.m_generatorCapacity);\r\n    const g = this.m_generatorBuffer[this.m_generatorCount++];\r\n    g.center.Copy(center);\r\n    g.tag = tag;\r\n    g.necessary = necessary;\r\n  }\r\n\r\n  /**\r\n   * Generate the Voronoi diagram. It is rasterized with a given\r\n   * interval in the same range as the necessary generators exist.\r\n   *\r\n   * @param radius the interval of the diagram.\r\n   * @param margin margin for which the range of the diagram is extended.\r\n   */\r\n  public Generate(radius: number, margin: number): void {\r\n    const inverseRadius = 1 / radius;\r\n    const lower = new b2Vec2(+b2_maxFloat, +b2_maxFloat);\r\n    const upper = new b2Vec2(-b2_maxFloat, -b2_maxFloat);\r\n    let necessary_count = 0;\r\n    for (let k = 0; k < this.m_generatorCount; k++) {\r\n      const g = this.m_generatorBuffer[k];\r\n      if (g.necessary) {\r\n        b2Vec2.MinV(lower, g.center, lower);\r\n        b2Vec2.MaxV(upper, g.center, upper);\r\n        ++necessary_count;\r\n      }\r\n    }\r\n    if (necessary_count === 0) {\r\n      ///debugger;\r\n      this.m_countX = 0;\r\n      this.m_countY = 0;\r\n      return;\r\n    }\r\n    lower.x -= margin;\r\n    lower.y -= margin;\r\n    upper.x += margin;\r\n    upper.y += margin;\r\n    this.m_countX = 1 + Math.floor(inverseRadius * (upper.x - lower.x));\r\n    this.m_countY = 1 + Math.floor(inverseRadius * (upper.y - lower.y));\r\n    this.m_diagram = []; // b2MakeArray(this.m_countX * this.m_countY, (index) => null);\r\n\r\n    // (4 * m_countX * m_countY) is the queue capacity that is experimentally\r\n    // known to be necessary and sufficient for general particle distributions.\r\n    const queue = new b2StackQueue<b2VoronoiDiagram_Task>(4 * this.m_countX * this.m_countY);\r\n    for (let k = 0; k < this.m_generatorCount; k++) {\r\n      const g = this.m_generatorBuffer[k];\r\n      ///  g.center = inverseRadius * (g.center - lower);\r\n      g.center.SelfSub(lower).SelfMul(inverseRadius);\r\n      const x = Math.floor(g.center.x);\r\n      const y = Math.floor(g.center.y);\r\n      if (x >= 0 && y >= 0 && x < this.m_countX && y < this.m_countY) {\r\n        queue.Push(new b2VoronoiDiagram_Task(x, y, x + y * this.m_countX, g));\r\n      }\r\n    }\r\n    while (!queue.Empty()) {\r\n      const task = queue.Front();\r\n      const x = task.m_x;\r\n      const y = task.m_y;\r\n      const i = task.m_i;\r\n      const g = task.m_generator;\r\n      queue.Pop();\r\n      if (!this.m_diagram[i]) {\r\n        this.m_diagram[i] = g;\r\n        if (x > 0) {\r\n          queue.Push(new b2VoronoiDiagram_Task(x - 1, y, i - 1, g));\r\n        }\r\n        if (y > 0) {\r\n          queue.Push(new b2VoronoiDiagram_Task(x, y - 1, i - this.m_countX, g));\r\n        }\r\n        if (x < this.m_countX - 1) {\r\n          queue.Push(new b2VoronoiDiagram_Task(x + 1, y, i + 1, g));\r\n        }\r\n        if (y < this.m_countY - 1) {\r\n          queue.Push(new b2VoronoiDiagram_Task(x, y + 1, i + this.m_countX, g));\r\n        }\r\n      }\r\n    }\r\n    for (let y = 0; y < this.m_countY; y++) {\r\n      for (let x = 0; x < this.m_countX - 1; x++) {\r\n        const i = x + y * this.m_countX;\r\n        const a = this.m_diagram[i];\r\n        const b = this.m_diagram[i + 1];\r\n        if (a !== b) {\r\n          queue.Push(new b2VoronoiDiagram_Task(x, y, i, b));\r\n          queue.Push(new b2VoronoiDiagram_Task(x + 1, y, i + 1, a));\r\n        }\r\n      }\r\n    }\r\n    for (let y = 0; y < this.m_countY - 1; y++) {\r\n      for (let x = 0; x < this.m_countX; x++) {\r\n        const i = x + y * this.m_countX;\r\n        const a = this.m_diagram[i];\r\n        const b = this.m_diagram[i + this.m_countX];\r\n        if (a !== b) {\r\n          queue.Push(new b2VoronoiDiagram_Task(x, y, i, b));\r\n          queue.Push(new b2VoronoiDiagram_Task(x, y + 1, i + this.m_countX, a));\r\n        }\r\n      }\r\n    }\r\n    while (!queue.Empty()) {\r\n      const task = queue.Front();\r\n      const x = task.m_x;\r\n      const y = task.m_y;\r\n      const i = task.m_i;\r\n      const k = task.m_generator;\r\n      queue.Pop();\r\n      const a = this.m_diagram[i];\r\n      const b = k;\r\n      if (a !== b) {\r\n        const ax = a.center.x - x;\r\n        const ay = a.center.y - y;\r\n        const bx = b.center.x - x;\r\n        const by = b.center.y - y;\r\n        const a2 = ax * ax + ay * ay;\r\n        const b2 = bx * bx + by * by;\r\n        if (a2 > b2) {\r\n          this.m_diagram[i] = b;\r\n          if (x > 0) {\r\n            queue.Push(new b2VoronoiDiagram_Task(x - 1, y, i - 1, b));\r\n          }\r\n          if (y > 0) {\r\n            queue.Push(new b2VoronoiDiagram_Task(x, y - 1, i - this.m_countX, b));\r\n          }\r\n          if (x < this.m_countX - 1) {\r\n            queue.Push(new b2VoronoiDiagram_Task(x + 1, y, i + 1, b));\r\n          }\r\n          if (y < this.m_countY - 1) {\r\n            queue.Push(new b2VoronoiDiagram_Task(x, y + 1, i + this.m_countX, b));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enumerate all nodes that contain at least one necessary\r\n   * generator.\r\n   */\r\n  public GetNodes(callback: b2VoronoiDiagram_NodeCallback): void {\r\n    for (let y = 0; y < this.m_countY - 1; y++) {\r\n      for (let x = 0; x < this.m_countX - 1; x++) {\r\n        const i = x + y * this.m_countX;\r\n        const a = this.m_diagram[i];\r\n        const b = this.m_diagram[i + 1];\r\n        const c = this.m_diagram[i + this.m_countX];\r\n        const d = this.m_diagram[i + 1 + this.m_countX];\r\n        if (b !== c) {\r\n          if (a !== b && a !== c &&\r\n            (a.necessary || b.necessary || c.necessary)) {\r\n            callback(a.tag, b.tag, c.tag);\r\n          }\r\n          if (d !== b && d !== c &&\r\n            (a.necessary || b.necessary || c.necessary)) {\r\n            callback(b.tag, d.tag, c.tag);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Callback used by GetNodes().\r\n *\r\n * Receive tags for generators associated with a node.\r\n */\r\nexport type b2VoronoiDiagram_NodeCallback = (a: number, b: number, c: number) => void;\r\n\r\nexport class b2VoronoiDiagram_Generator {\r\n  public center: b2Vec2 = new b2Vec2();\r\n  public tag: number = 0;\r\n  public necessary: boolean = false;\r\n}\r\n\r\nexport class b2VoronoiDiagram_Task {\r\n  public m_x: number;\r\n  public m_y: number;\r\n  public m_i: number;\r\n  public m_generator: b2VoronoiDiagram_Generator;\r\n  constructor(x: number, y: number, i: number, g: b2VoronoiDiagram_Generator) {\r\n    this.m_x = x;\r\n    this.m_y = y;\r\n    this.m_i = i;\r\n    this.m_generator = g;\r\n  }\r\n}\r\n\r\n// #endif\r\n"]}},"error":null,"hash":"feb685f99d618eaebed606d5a9a893a5","cacheData":{"env":{}}}